{
    "meta": {
        "abilities": {
            "create": false,
            "destroy": false,
            "update": false,
            "read": true,
            "export": false,
            "manage": false,
            "join": true,
            "share": false,
            "force_delete": false,
            "create_collaborator": false,
            "destroy_comment": false
        },
        "latestReviewStatus": -1
    },
    "data": {
        "id": 31376466,
        "space_id": 0,
        "type": "Doc",
        "sub_type": null,
        "title": "前端面试题之手写代码篇",
        "tag": null,
        "slug": "pkg93q",
        "user_id": 1500604,
        "book_id": 6862641,
        "cover": "https://cdn.nlark.com/yuque/0/2021/png/1500604/1612785743977-97a4903d-23ee-4f80-9ba0-fa1dfb793fd5.png",
        "description": "一、JavaScript 基础1. 手写 Object.create 思路：将传入的对象作为原型function create(obj) {   function F() {}   F.prototype = obj   return new F() }2. 手写 instanceof 方法i...",
        "custom_description": null,
        "body_asl": "",
        "format": "lake",
        "origin_format": "lake",
        "status": 1,
        "read_status": 1,
        "view_status": 0,
        "public": 1,
        "draft_version": 184,
        "comments_count": 50,
        "likes_count": 50,
        "abilities": {
            "create": false,
            "destroy": false,
            "update": false,
            "read": true,
            "export": false,
            "manage": false,
            "join": true,
            "share": false,
            "force_delete": false,
            "create_collaborator": false,
            "destroy_comment": false
        },
        "content_updated_at": "2023-01-16T18:58:05.000Z",
        "created_at": "2021-02-08T09:53:40.000Z",
        "updated_at": "2023-07-20T09:55:41.000Z",
        "published_at": "2023-01-16T18:58:05.000Z",
        "first_published_at": "2021-02-08T15:19:26.000Z",
        "pinned_at": null,
        "word_count": 11742,
        "content": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><p data-lake-id=\"u5811b370\" id=\"u5811b370\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F1500604%2F1621676946378-71d6b405-ef4e-42e4-9e42-f9c9aafcefb6.png%22%2C%22taskId%22%3A%22ub107fa80-9302-43d4-9f26-7bdbd05341d%22%2C%22clientId%22%3A%22ubdaa2908-0c83-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1500%2C%22height%22%3A1486%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81%E9%9D%A2%E8%AF%95%E9%A2%98.png%22%2C%22size%22%3A792413%2C%22from%22%3A%22ui%22%2C%22originWidth%22%3A2780%2C%22originHeight%22%3A2754%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22shadow%22%2C%22search%22%3A%22%E5%AE%9E%E7%8E%B0%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%87%BD%E6%95%B0%20%E4%BA%A4%E6%8D%A2a%2Cb%E7%9A%84%E5%80%BC%2C%E4%B8%8D%E8%83%BD%E7%94%A8%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%B1%E5%BA%8F%E8%BE%93%E5%87%BA%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%B1%82%E5%92%8C%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%81%E5%B9%B3%E5%8C%96%20%E5%9B%BE%E4%BE%8B%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%20%E8%80%83%E5%AF%9F%E5%BE%88%E5%A4%9A%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84flat%E6%96%B9%E6%B3%95%20%E8%80%83%E5%AF%9F%E8%BE%83%E5%A4%9A%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84push%E6%96%B9%E6%B3%95%20%E8%80%83%E7%A5%A8%E8%BE%83%E5%B0%91%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84filter%E6%96%B9%E6%B3%95%20%E8%80%83%E5%AF%9F%E5%BE%88%E5%B0%91%20%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84map%E6%96%B9%E6%B3%95%20%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%20%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84repeat%E6%96%B9%E6%B3%95%20%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BF%BB%E8%BD%AC%20%E6%89%8B%E5%86%99Object.create%20%E5%B0%86%E6%95%B0%E5%AD%97%E6%AF%8F%E5%8D%83%E5%88%86%E4%BD%8D%E7%94%A8%E9%80%97%E5%8F%B7%E9%9A%94%E5%BC%80%20%E6%89%8B%E5%86%99iNstanCeof%E6%96%B9%E6%B3%95%20%E5%AE%9E%E7%8E%B0%E9%9D%9E%E8%B4%9F%E5%A4%A7%E6%95%B4%E6%95%B0%E7%9B%B8%E5%8A%A0%20%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6%20%E5%AE%9E%E7%8E%B0add(1x%2F2(3)%20%E6%89%8B%E5%86%99Promise%20%E5%AE%9E%E7%8E%B0%E7%B1%BB%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%95%B0%E7%BB%84%20%E6%89%8B%E5%86%99Promise.then%20%E4%BD%BF%E7%94%A8reduce%E6%B1%82%E5%92%8C%20%E6%89%8B%E5%86%99Promise.all%20%E5%B0%86%5D%E5%AF%B9%E8%B1%A1%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%20%E6%89%8B%E5%86%99Promise.race%20%E4%BD%BF%E7%94%A8ES5%E5%92%8CES6%E6%B1%82%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E5%92%8C%20%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81%E9%9D%A2%E8%AF%95%E9%A2%98%20%E6%89%8B%E5%86%99%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0%20%E8%A7%A3%E6%9E%90URLParams%E4%B8%BA%E5%AF%B9%E8%B1%A1%20%E6%89%8B%E5%86%99%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0%20%E5%BE%AA%E7%8E%AF%E6%89%93%E5%8D%B0%E7%BA%A2%E9%BB%84%E7%BB%BF%20Javascript%E5%9F%BA%E7%A1%80%20%E6%89%8B%E5%86%99%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0%20%E5%AE%9E%E7%8E%B0%E6%AF%8F%E9%9A%94%E4%B8%80%E7%A7%92%E6%89%93%E5%8D%B01.2.3.4%20%E6%89%8B%E5%86%99call%E5%87%BD%E6%95%B0%20%E5%B0%8F%E5%AD%A9%E6%8A%A5%E6%95%B0%E9%97%AE%E9%A2%98%20%E6%89%8B%E5%86%99apply%E5%87%BD%E6%95%B0%20%E7%94%A8Promise%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E7%9A%84%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%20%E6%89%8B%E5%86%99bind%E5%87%BD%E6%95%B0%20%E5%AE%9E%E7%8E%B0%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%20%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96%E7%9A%84%E5%AE%9E%E7%8E%B0%20%E6%9F%A5%E6%89%BE%E6%96%87%E8%8D%89%E4%B8%AD%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E5%8D%95%E8%AF%8D%20%E5%AE%9E%E7%8E%B0AIAX%E8%AF%B7%E6%B1%82%20%E5%B0%81%E8%A3%85%E5%BC%82%E6%AD%A5%E7%9A%84fetch%2C%E4%BD%BF%E7%94%A8asyncawait%E6%96%B9%E5%BC%8F%E6%9D%A5%E4%BD%BF%E7%94%A8%20%E4%BD%BF%E7%94%A8Promise%E5%B0%81%E8%A3%85AAX%E8%AF%B7%E6%B1%82%20%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E7%9A%84EventBus%20%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D%20%E5%9C%BA%E6%99%AF%E5%BA%94%E7%94%A8%20%E5%AE%9E%E7%8E%B0%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%20%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E8%B7%AF%E7%94%B1%20%E5%AE%9E%E7%8E%B0%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BA%E7%8E%B0%E7%9A%84%E4%B8%8D%E9%87%8D%E5%A4%8D%E6%9C%80%E9%95%BF%E9%95%BF%E5%BA%A6%20%E4%BD%BF%E7%94%A8setTimeout%E5%AE%9E%E7%8E%B0setlnterval%20%E5%AE%9E%E7%8E%B0jsonp%20%E5%88%A4%E6%96%AD%E5%AF%B9%E5%83%8F%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A2077.9353%2C%22y%22%3A103.26541%2C%22width%22%3A257.00729999999976%2C%22height%22%3A34.48885999999999%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2073.4834%2C%22y%22%3A171.81822%2C%22width%22%3A385.5461%2C%22height%22%3A38.890630000000016%2C%22text%22%3A%22%E4%BA%A4%E6%8D%A2a%2Cb%E7%9A%84%E5%80%BC%2C%E4%B8%8D%E8%83%BD%E7%94%A8%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F%22%7D%2C%7B%22x%22%3A2078.9438%2C%22y%22%3A250.49023%2C%22width%22%3A257.92560000000003%2C%22height%22%3A32.48997000000003%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%B1%E5%BA%8F%E8%BE%93%E5%87%BA%22%7D%2C%7B%22x%22%3A2076.9946%2C%22y%22%3A321.25632%2C%22width%22%3A228.20539999999983%2C%22height%22%3A30.793979999999976%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%B1%82%E5%92%8C%22%7D%2C%7B%22x%22%3A2078.1123%2C%22y%22%3A394.3781%2C%22width%22%3A228.47950000000037%2C%22height%22%3A30.78595999999999%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%81%E5%B9%B3%E5%8C%96%22%7D%2C%7B%22x%22%3A284.023%2C%22y%22%3A424.35596%2C%22width%22%3A69.56139999999999%2C%22height%22%3A33.757240000000024%2C%22text%22%3A%22%E5%9B%BE%E4%BE%8B%22%7D%2C%7B%22x%22%3A2079.5088%2C%22y%22%3A465.04364%2C%22width%22%3A171.04739999999993%2C%22height%22%3A31.161990000000003%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%22%7D%2C%7B%22x%22%3A252.80156%2C%22y%22%3A497.47336%2C%22width%22%3A116.28744%2C%22height%22%3A30.842240000000004%2C%22text%22%3A%22%E8%80%83%E5%AF%9F%E5%BE%88%E5%A4%9A%22%7D%2C%7B%22x%22%3A2073.2493%2C%22y%22%3A536.2455%2C%22width%22%3A249.29100000000017%2C%22height%22%3A32.74109999999996%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84flat%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A254.12262%2C%22y%22%3A566.9678%2C%22width%22%3A113.53198%2C%22height%22%3A30.223700000000008%2C%22text%22%3A%22%E8%80%83%E5%AF%9F%E8%BE%83%E5%A4%9A%22%7D%2C%7B%22x%22%3A2074.8154%2C%22y%22%3A610.30896%2C%22width%22%3A266.74159999999983%2C%22height%22%3A31.4448900000001%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84push%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A254.95743%2C%22y%22%3A634.97565%2C%22width%22%3A109.15077000000002%2C%22height%22%3A29.587750000000028%2C%22text%22%3A%22%E8%80%83%E7%A5%A8%E8%BE%83%E5%B0%91%22%7D%2C%7B%22x%22%3A2074.527%2C%22y%22%3A681.7695%2C%22width%22%3A265.0574999999999%2C%22height%22%3A32.09400000000005%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84filter%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A253.95718%2C%22y%22%3A701.52124%2C%22width%22%3A113.52866%2C%22height%22%3A31.410959999999932%2C%22text%22%3A%22%E8%80%83%E5%AF%9F%E5%BE%88%E5%B0%91%22%7D%2C%7B%22x%22%3A2076.659%2C%22y%22%3A754.10736%2C%22width%22%3A259.078%2C%22height%22%3A29.89233999999999%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E7%9A%84map%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A1720.9858%2C%22y%22%3A812.53735%2C%22width%22%3A150.27980000000002%2C%22height%22%3A39.610450000000014%2C%22text%22%3A%22%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%22%7D%2C%7B%22x%22%3A2075.0645%2C%22y%22%3A826.05536%2C%22width%22%3A318.4023000000002%2C%22height%22%3A29.713070000000016%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84repeat%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A2076.188%2C%22y%22%3A898.87836%2C%22width%22%3A202.0329999999999%2C%22height%22%3A28.338339999999903%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BF%BB%E8%BD%AC%22%7D%2C%7B%22x%22%3A261.25516%2C%22y%22%3A963.3261%2C%22width%22%3A242.13797%2C%22height%22%3A32.06654000000003%2C%22text%22%3A%22%E6%89%8B%E5%86%99Object.create%22%7D%2C%7B%22x%22%3A2074.733%2C%22y%22%3A968.65265%2C%22width%22%3A346.5501999999997%2C%22height%22%3A32.586490000000026%2C%22text%22%3A%22%E5%B0%86%E6%95%B0%E5%AD%97%E6%AF%8F%E5%8D%83%E5%88%86%E4%BD%8D%E7%94%A8%E9%80%97%E5%8F%B7%E9%9A%94%E5%BC%80%22%7D%2C%7B%22x%22%3A237.18434%2C%22y%22%3A1032.7046%2C%22width%22%3A262.89034000000004%2C%22height%22%3A31.27559999999994%2C%22text%22%3A%22%E6%89%8B%E5%86%99iNstanCeof%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A2076.9446%2C%22y%22%3A1038.4636%2C%22width%22%3A257.63430000000017%2C%22height%22%3A34.43589999999995%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E9%9D%9E%E8%B4%9F%E5%A4%A7%E6%95%B4%E6%95%B0%E7%9B%B8%E5%8A%A0%22%7D%2C%7B%22x%22%3A289.0397%2C%22y%22%3A1105.8036%2C%22width%22%3A210.58640000000003%2C%22height%22%3A29.685899999999947%2C%22text%22%3A%22%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6%22%7D%2C%7B%22x%22%3A2078.589%2C%22y%22%3A1115.3419%2C%22width%22%3A213.558%2C%22height%22%3A32.00120000000015%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0add(1x%2F2(3)%22%7D%2C%7B%22x%22%3A324.56516%2C%22y%22%3A1178.5897%2C%22width%22%3A179.67320999999998%2C%22height%22%3A32.67540000000008%2C%22text%22%3A%22%E6%89%8B%E5%86%99Promise%22%7D%2C%7B%22x%22%3A2077.7031%2C%22y%22%3A1186.8345%2C%22width%22%3A285.0679%2C%22height%22%3A32.378799999999956%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E7%B1%BB%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%95%B0%E7%BB%84%22%7D%2C%7B%22x%22%3A259.0342%2C%22y%22%3A1248.9391%2C%22width%22%3A242.23558000000003%2C%22height%22%3A34.72180000000003%2C%22text%22%3A%22%E6%89%8B%E5%86%99Promise.then%22%7D%2C%7B%22x%22%3A2077.9348%2C%22y%22%3A1258.7942%2C%22width%22%3A219.82520000000022%2C%22height%22%3A29.77279999999996%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8reduce%E6%B1%82%E5%92%8C%22%7D%2C%7B%22x%22%3A285.07834%2C%22y%22%3A1323.1552%2C%22width%22%3A222.74575999999996%2C%22height%22%3A29.60550000000012%2C%22text%22%3A%22%E6%89%8B%E5%86%99Promise.all%22%7D%2C%7B%22x%22%3A2076.8762%2C%22y%22%3A1328.0251%2C%22width%22%3A306.03639999999996%2C%22height%22%3A32.50260000000003%2C%22text%22%3A%22%E5%B0%86%5D%E5%AF%B9%E8%B1%A1%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%22%7D%2C%7B%22x%22%3A264.29025%2C%22y%22%3A1394.2859%2C%22width%22%3A240.33814999999998%2C%22height%22%3A33.89319999999998%2C%22text%22%3A%22%E6%89%8B%E5%86%99Promise.race%22%7D%2C%7B%22x%22%3A2077.4807%2C%22y%22%3A1401.7643%2C%22width%22%3A381.0998999999997%2C%22height%22%3A29.552599999999984%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8ES5%E5%92%8CES6%E6%B1%82%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E5%92%8C%22%7D%2C%7B%22x%22%3A1123.4645%2C%22y%22%3A1457.9299%2C%22width%22%3A394.2114999999999%2C%22height%22%3A62.28399999999988%2C%22text%22%3A%22%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81%E9%9D%A2%E8%AF%95%E9%A2%98%22%7D%2C%7B%22x%22%3A333.5801%2C%22y%22%3A1467.9642%2C%22width%22%3A172.983%2C%22height%22%3A31.66870000000017%2C%22text%22%3A%22%E6%89%8B%E5%86%99%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2077.597%2C%22y%22%3A1474.1349%2C%22width%22%3A319.9224999999997%2C%22height%22%3A32.857299999999896%2C%22text%22%3A%22%E8%A7%A3%E6%9E%90URLParams%E4%B8%BA%E5%AF%B9%E8%B1%A1%22%7D%2C%7B%22x%22%3A332.17578%2C%22y%22%3A1539.6931%2C%22width%22%3A172.80356%2C%22height%22%3A31.19399999999996%2C%22text%22%3A%22%E6%89%8B%E5%86%99%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2076.1177%2C%22y%22%3A1595.6101%2C%22width%22%3A201.79100000000017%2C%22height%22%3A33.31759999999986%2C%22text%22%3A%22%E5%BE%AA%E7%8E%AF%E6%89%93%E5%8D%B0%E7%BA%A2%E9%BB%84%E7%BB%BF%22%7D%2C%7B%22x%22%3A660.8673%2C%22y%22%3A1597.5455%2C%22width%22%3A262.00575000000003%2C%22height%22%3A42.074499999999944%2C%22text%22%3A%22Javascript%E5%9F%BA%E7%A1%80%22%7D%2C%7B%22x%22%3A275.31293%2C%22y%22%3A1612.0317%2C%22width%22%3A228.84475000000003%2C%22height%22%3A29.34159999999997%2C%22text%22%3A%22%E6%89%8B%E5%86%99%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2074.0503%2C%22y%22%3A1665.3899%2C%22width%22%3A328.86400000000003%2C%22height%22%3A37.33480000000009%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%AF%8F%E9%9A%94%E4%B8%80%E7%A7%92%E6%89%93%E5%8D%B01.2.3.4%22%7D%2C%7B%22x%22%3A338.73398%2C%22y%22%3A1683.7355%2C%22width%22%3A162.45416%2C%22height%22%3A32.10050000000001%2C%22text%22%3A%22%E6%89%8B%E5%86%99call%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2073.5884%2C%22y%22%3A1742.1646%2C%22width%22%3A179.82560000000012%2C%22height%22%3A33.178300000000036%2C%22text%22%3A%22%E5%B0%8F%E5%AD%A9%E6%8A%A5%E6%95%B0%E9%97%AE%E9%A2%98%22%7D%2C%7B%22x%22%3A306.26965%2C%22y%22%3A1754.6027%2C%22width%22%3A192.09380999999996%2C%22height%22%3A33.99680000000012%2C%22text%22%3A%22%E6%89%8B%E5%86%99apply%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2078.3152%2C%22y%22%3A1812.8821%2C%22width%22%3A393.65059999999994%2C%22height%22%3A33.21679999999992%2C%22text%22%3A%22%E7%94%A8Promise%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E7%9A%84%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%22%7D%2C%7B%22x%22%3A311.45233%2C%22y%22%3A1826.9854%2C%22width%22%3A191.36616999999995%2C%22height%22%3A32.20550000000003%2C%22text%22%3A%22%E6%89%8B%E5%86%99bind%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A2077.5205%2C%22y%22%3A1887.2461%2C%22width%22%3A199.92209999999977%2C%22height%22%3A30.29489999999987%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%22%7D%2C%7B%22x%22%3A274.90952%2C%22y%22%3A1897.4226%2C%22width%22%3A229.7763%2C%22height%22%3A35.11559999999986%2C%22text%22%3A%22%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96%E7%9A%84%E5%AE%9E%E7%8E%B0%22%7D%2C%7B%22x%22%3A2077.0547%2C%22y%22%3A1956.6637%2C%22width%22%3A394.77859999999964%2C%22height%22%3A33.645499999999856%2C%22text%22%3A%22%E6%9F%A5%E6%89%BE%E6%96%87%E8%8D%89%E4%B8%AD%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E5%8D%95%E8%AF%8D%22%7D%2C%7B%22x%22%3A321.87378%2C%22y%22%3A1972.7783%2C%22width%22%3A178.10660000000001%2C%22height%22%3A29.694400000000087%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0AIAX%E8%AF%B7%E6%B1%82%22%7D%2C%7B%22x%22%3A2077.4827%2C%22y%22%3A2027.9357%2C%22width%22%3A591.1482000000001%2C%22height%22%3A39.64579999999978%2C%22text%22%3A%22%E5%B0%81%E8%A3%85%E5%BC%82%E6%AD%A5%E7%9A%84fetch%2C%E4%BD%BF%E7%94%A8asyncawait%E6%96%B9%E5%BC%8F%E6%9D%A5%E4%BD%BF%E7%94%A8%22%7D%2C%7B%22x%22%3A162.52522%2C%22y%22%3A2043.4143%2C%22width%22%3A338.02965%2C%22height%22%3A29.320700000000215%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8Promise%E5%B0%81%E8%A3%85AAX%E8%AF%B7%E6%B1%82%22%7D%2C%7B%22x%22%3A2073.3818%2C%22y%22%3A2098.0706%2C%22width%22%3A287.19879999999966%2C%22height%22%3A34.452400000000125%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E7%9A%84EventBus%22%7D%2C%7B%22x%22%3A353.53433%2C%22y%22%3A2115.4084%2C%22width%22%3A145.61847%2C%22height%22%3A28.714900000000398%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%B5%85%E6%8B%B7%E8%B4%9D%22%7D%2C%7B%22x%22%3A1722.8584%2C%22y%22%3A2123.3933%2C%22width%22%3A149.1748%2C%22height%22%3A41.88229999999976%2C%22text%22%3A%22%E5%9C%BA%E6%99%AF%E5%BA%94%E7%94%A8%22%7D%2C%7B%22x%22%3A2077.6929%2C%22y%22%3A2172.551%2C%22width%22%3A228.37379999999985%2C%22height%22%3A33.00120000000015%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%22%7D%2C%7B%22x%22%3A358.14362%2C%22y%22%3A2187.0483%2C%22width%22%3A141.13681000000003%2C%22height%22%3A31.297900000000027%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D%22%7D%2C%7B%22x%22%3A2075.7197%2C%22y%22%3A2247.2368%2C%22width%22%3A174.45629999999983%2C%22height%22%3A29.34519999999975%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E8%B7%AF%E7%94%B1%22%7D%2C%7B%22x%22%3A2079.6533%2C%22y%22%3A2317.5273%2C%22width%22%3A227.1226999999999%2C%22height%22%3A31.099399999999605%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%22%7D%2C%7B%22x%22%3A2076.2842%2C%22y%22%3A2388.835%2C%22width%22%3A369.06320000000005%2C%22height%22%3A30.480399999999918%2C%22text%22%3A%22%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BA%E7%8E%B0%E7%9A%84%E4%B8%8D%E9%87%8D%E5%A4%8D%E6%9C%80%E9%95%BF%E9%95%BF%E5%BA%A6%22%7D%2C%7B%22x%22%3A2077.6963%2C%22y%22%3A2462.5867%2C%22width%22%3A429.6675%2C%22height%22%3A27.251900000000205%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8setTimeout%E5%AE%9E%E7%8E%B0setlnterval%22%7D%2C%7B%22x%22%3A2076.4497%2C%22y%22%3A2534.0906%2C%22width%22%3A139.95849999999973%2C%22height%22%3A33.14960000000019%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0jsonp%22%7D%2C%7B%22x%22%3A2076.421%2C%22y%22%3A2607.8508%2C%22width%22%3A344.30300000000034%2C%22height%22%3A31.471999999999753%2C%22text%22%3A%22%E5%88%A4%E6%96%AD%E5%AF%B9%E5%83%8F%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23fbf8f6%22%2C%22id%22%3A%22u45da4c1b%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h2 data-lake-id=\"DIEdY\" id=\"DIEdY\"><span data-lake-id=\"u68c0f930\" id=\"u68c0f930\">一、JavaScript 基础</span></h2><h3 data-lake-id=\"LOOJA\" id=\"LOOJA\"><span data-lake-id=\"u3cd09dec\" id=\"u3cd09dec\">1. 手写 Object.create </span></h3><p data-lake-id=\"f4a51b4732ee79e89ed5e89c7d809f23\" id=\"f4a51b4732ee79e89ed5e89c7d809f23\"><span data-lake-id=\"ufc863e3f\" id=\"ufc863e3f\">思路：将传入的对象作为原型</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20create(obj)%20%7B%5Cn%20%20function%20F()%20%7B%7D%5Cn%20%20F.prototype%20%3D%20obj%5Cn%20%20return%20new%20F()%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%2256I4D%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"fEnoW\" id=\"fEnoW\"><span data-lake-id=\"ue2939c05\" id=\"ue2939c05\">2. 手写 instanceof 方法</span></h3><p data-lake-id=\"2b0a9a6fc91e5e1f19e0eed9270c331c\" id=\"2b0a9a6fc91e5e1f19e0eed9270c331c\"><span data-lake-id=\"u2e290a96\" id=\"u2e290a96\">instanceof 运算符用于判断构造函数的 prototype 属性是否出现在对象的原型链中的任何位置。</span></p><p data-lake-id=\"749f965656b3aca9bd131231e704235e\" id=\"749f965656b3aca9bd131231e704235e\"><br></p><p data-lake-id=\"24157e90910af1a27d24768f99738a17\" id=\"24157e90910af1a27d24768f99738a17\"><span data-lake-id=\"u1a1025de\" id=\"u1a1025de\">具体实现：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20myInstanceof(left%2C%20right)%20%7B%5Cn%20%20let%20proto%20%3D%20Object.getPrototypeOf(left)%2C%20%2F%2F%20%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%5Cn%20%20%20%20%20%20prototype%20%3D%20right.prototype%3B%20%2F%2F%20%E8%8E%B7%E5%8F%96%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%20prototype%20%E5%AF%B9%E8%B1%A1%5Cn%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%20prototype%20%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%9C%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE%E4%B8%8A%5Cn%20%20while%20(true)%20%7B%5Cn%20%20%20%20if%20(!proto)%20return%20false%3B%5Cn%20%20%20%20if%20(proto%20%3D%3D%3D%20prototype)%20return%20true%3B%5Cn%5Cn%20%20%20%20proto%20%3D%20Object.getPrototypeOf(proto)%3B%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22t8QBE%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"T1ZsK\" id=\"T1ZsK\"><span data-lake-id=\"u3361160d\" id=\"u3361160d\">3. 手写 new 操作符</span></h3><p data-lake-id=\"2912899bbdfb39e12f7a5c67e918fef7\" id=\"2912899bbdfb39e12f7a5c67e918fef7\"><span data-lake-id=\"u92a438c1\" id=\"u92a438c1\">在调用 </span><code data-lake-id=\"u04110850\" id=\"u04110850\"><span data-lake-id=\"u83edcc3c\" id=\"u83edcc3c\">new</span></code><span data-lake-id=\"u0dae39a4\" id=\"u0dae39a4\"> 的过程中会发生以上四件事情：</span></p><p data-lake-id=\"963fa5b59b56624a81aaa258a85b2592\" id=\"963fa5b59b56624a81aaa258a85b2592\"><span data-lake-id=\"ub5475f3b\" id=\"ub5475f3b\" style=\"color: #000000\">（1）首先创建了一个新的空对象</span></p><p data-lake-id=\"72d6cff7f37c420a67daa8e744eb3162\" id=\"72d6cff7f37c420a67daa8e744eb3162\"><span data-lake-id=\"ueef5e594\" id=\"ueef5e594\" style=\"color: #000000\">（2）设置原型，将对象的原型设置为函数的 prototype 对象。</span></p><p data-lake-id=\"0e5ebc810d3bc23b4066e0bea6f6b129\" id=\"0e5ebc810d3bc23b4066e0bea6f6b129\"><span data-lake-id=\"ud262f568\" id=\"ud262f568\" style=\"color: #000000\">（3）让函数的 this 指向这个对象，执行构造函数的代码（为这个新对象添加属性）</span></p><p data-lake-id=\"2f7107061c19f79bdb1b81fbd9e9c545\" id=\"2f7107061c19f79bdb1b81fbd9e9c545\"><span data-lake-id=\"u64eef289\" id=\"u64eef289\" style=\"color: #000000\">（4）判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20objectFactory()%20%7B%5Cn%20%20let%20newObject%20%3D%20null%3B%5Cn%20%20let%20constructor%20%3D%20Array.prototype.shift.call(arguments)%3B%5Cn%20%20let%20result%20%3D%20null%3B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E5%8F%82%E6%95%B0%E6%98%AF%E5%90%A6%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%5Cn%20%20if%20(typeof%20constructor%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20console.error(%5C%22type%20error%5C%22)%3B%5Cn%20%20%20%20return%3B%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%A9%BA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E4%B8%BA%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%20prototype%20%E5%AF%B9%E8%B1%A1%5Cn%20%20newObject%20%3D%20Object.create(constructor.prototype)%3B%5Cn%20%20%2F%2F%20%E5%B0%86%20this%20%E6%8C%87%E5%90%91%E6%96%B0%E5%BB%BA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B9%B6%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%5Cn%20%20result%20%3D%20constructor.apply(newObject%2C%20arguments)%3B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%5Cn%20%20let%20flag%20%3D%20result%20%26%26%20(typeof%20result%20%3D%3D%3D%20%5C%22object%5C%22%20%7C%7C%20typeof%20result%20%3D%3D%3D%20%5C%22function%5C%22)%3B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%5Cn%20%20return%20flag%20%3F%20result%20%3A%20newObject%3B%5Cn%7D%5Cn%2F%2F%20%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%5CnobjectFactory(%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%2C%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%227uCEs%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"qXvhs\" id=\"qXvhs\"><span data-lake-id=\"u8db4abf9\" id=\"u8db4abf9\">4. 手写 Promise</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20PENDING%20%3D%20%5C%22pending%5C%22%3B%5Cnconst%20RESOLVED%20%3D%20%5C%22resolved%5C%22%3B%5Cnconst%20REJECTED%20%3D%20%5C%22rejected%5C%22%3B%5Cn%5Cnfunction%20MyPromise(fn)%20%7B%5Cn%20%20%2F%2F%20%E4%BF%9D%E5%AD%98%E5%88%9D%E5%A7%8B%E5%8C%96%E7%8A%B6%E6%80%81%5Cn%20%20var%20self%20%3D%20this%3B%5Cn%5Cn%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E7%8A%B6%E6%80%81%5Cn%20%20this.state%20%3D%20PENDING%3B%5Cn%5Cn%20%20%2F%2F%20%E7%94%A8%E4%BA%8E%E4%BF%9D%E5%AD%98%20resolve%20%E6%88%96%E8%80%85%20rejected%20%E4%BC%A0%E5%85%A5%E7%9A%84%E5%80%BC%5Cn%20%20this.value%20%3D%20null%3B%5Cn%5Cn%20%20%2F%2F%20%E7%94%A8%E4%BA%8E%E4%BF%9D%E5%AD%98%20resolve%20%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%5Cn%20%20this.resolvedCallbacks%20%3D%20%5B%5D%3B%5Cn%5Cn%20%20%2F%2F%20%E7%94%A8%E4%BA%8E%E4%BF%9D%E5%AD%98%20reject%20%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%5Cn%20%20this.rejectedCallbacks%20%3D%20%5B%5D%3B%5Cn%5Cn%20%20%2F%2F%20%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8F%98%E4%B8%BA%20resolved%20%E6%96%B9%E6%B3%95%5Cn%20%20function%20resolve(value)%20%7B%5Cn%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E4%BC%A0%E5%85%A5%E5%85%83%E7%B4%A0%E6%98%AF%E5%90%A6%E4%B8%BA%20Promise%20%E5%80%BC%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%EF%BC%8C%E5%88%99%E7%8A%B6%E6%80%81%E6%94%B9%E5%8F%98%E5%BF%85%E9%A1%BB%E7%AD%89%E5%BE%85%E5%89%8D%E4%B8%80%E4%B8%AA%E7%8A%B6%E6%80%81%E6%94%B9%E5%8F%98%E5%90%8E%E5%86%8D%E8%BF%9B%E8%A1%8C%E6%94%B9%E5%8F%98%5Cn%20%20%20%20if%20(value%20instanceof%20MyPromise)%20%7B%5Cn%20%20%20%20%20%20return%20value.then(resolve%2C%20reject)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%20%E4%BF%9D%E8%AF%81%E4%BB%A3%E7%A0%81%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E4%B8%BA%E6%9C%AC%E8%BD%AE%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%9A%84%E6%9C%AB%E5%B0%BE%5Cn%20%20%20%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%8F%AA%E6%9C%89%E7%8A%B6%E6%80%81%E4%B8%BA%20pending%20%E6%97%B6%E6%89%8D%E8%83%BD%E8%BD%AC%E5%8F%98%EF%BC%8C%5Cn%20%20%20%20%20%20if%20(self.state%20%3D%3D%3D%20PENDING)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E4%BF%AE%E6%94%B9%E7%8A%B6%E6%80%81%5Cn%20%20%20%20%20%20%20%20self.state%20%3D%20RESOLVED%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E4%BC%A0%E5%85%A5%E7%9A%84%E5%80%BC%5Cn%20%20%20%20%20%20%20%20self.value%20%3D%20value%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%5Cn%20%20%20%20%20%20%20%20self.resolvedCallbacks.forEach(callback%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20callback(value)%3B%5Cn%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%2C%200)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8F%98%E4%B8%BA%20rejected%20%E6%96%B9%E6%B3%95%5Cn%20%20function%20reject(value)%20%7B%5Cn%20%20%20%20%2F%2F%20%E4%BF%9D%E8%AF%81%E4%BB%A3%E7%A0%81%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E4%B8%BA%E6%9C%AC%E8%BD%AE%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%9A%84%E6%9C%AB%E5%B0%BE%5Cn%20%20%20%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%8F%AA%E6%9C%89%E7%8A%B6%E6%80%81%E4%B8%BA%20pending%20%E6%97%B6%E6%89%8D%E8%83%BD%E8%BD%AC%E5%8F%98%5Cn%20%20%20%20%20%20if%20(self.state%20%3D%3D%3D%20PENDING)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E4%BF%AE%E6%94%B9%E7%8A%B6%E6%80%81%5Cn%20%20%20%20%20%20%20%20self.state%20%3D%20REJECTED%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E4%BC%A0%E5%85%A5%E7%9A%84%E5%80%BC%5Cn%20%20%20%20%20%20%20%20self.value%20%3D%20value%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%5Cn%20%20%20%20%20%20%20%20self.rejectedCallbacks.forEach(callback%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20callback(value)%3B%5Cn%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%2C%200)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20%E5%B0%86%E4%B8%A4%E4%B8%AA%E6%96%B9%E6%B3%95%E4%BC%A0%E5%85%A5%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%5Cn%20%20try%20%7B%5Cn%20%20%20%20fn(resolve%2C%20reject)%3B%5Cn%20%20%7D%20catch%20(e)%20%7B%5Cn%20%20%20%20%2F%2F%20%E9%81%87%E5%88%B0%E9%94%99%E8%AF%AF%E6%97%B6%EF%BC%8C%E6%8D%95%E8%8E%B7%E9%94%99%E8%AF%AF%EF%BC%8C%E6%89%A7%E8%A1%8C%20reject%20%E5%87%BD%E6%95%B0%5Cn%20%20%20%20reject(e)%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5CnMyPromise.prototype.then%20%3D%20function(onResolved%2C%20onRejected)%20%7B%5Cn%20%20%2F%2F%20%E9%A6%96%E5%85%88%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E6%98%AF%E5%90%A6%E4%B8%BA%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%9B%A0%E4%B8%BA%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E6%98%AF%E5%8F%AF%E9%80%89%E5%8F%82%E6%95%B0%5Cn%20%20onResolved%20%3D%5Cn%20%20%20%20typeof%20onResolved%20%3D%3D%3D%20%5C%22function%5C%22%5Cn%20%20%20%20%20%20%3F%20onResolved%5Cn%20%20%20%20%20%20%3A%20function(value)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20return%20value%3B%5Cn%20%20%20%20%20%20%20%20%7D%3B%5Cn%5Cn%20%20onRejected%20%3D%5Cn%20%20%20%20typeof%20onRejected%20%3D%3D%3D%20%5C%22function%5C%22%5Cn%20%20%20%20%20%20%3F%20onRejected%5Cn%20%20%20%20%20%20%3A%20function(error)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20throw%20error%3B%5Cn%20%20%20%20%20%20%20%20%7D%3B%5Cn%5Cn%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E6%98%AF%E7%AD%89%E5%BE%85%E7%8A%B6%E6%80%81%EF%BC%8C%E5%88%99%E5%B0%86%E5%87%BD%E6%95%B0%E5%8A%A0%E5%85%A5%E5%AF%B9%E5%BA%94%E5%88%97%E8%A1%A8%E4%B8%AD%5Cn%20%20if%20(this.state%20%3D%3D%3D%20PENDING)%20%7B%5Cn%20%20%20%20this.resolvedCallbacks.push(onResolved)%3B%5Cn%20%20%20%20this.rejectedCallbacks.push(onRejected)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E7%8A%B6%E6%80%81%E5%B7%B2%E7%BB%8F%E5%87%9D%E5%9B%BA%EF%BC%8C%E5%88%99%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%E5%AF%B9%E5%BA%94%E7%8A%B6%E6%80%81%E7%9A%84%E5%87%BD%E6%95%B0%5Cn%5Cn%20%20if%20(this.state%20%3D%3D%3D%20RESOLVED)%20%7B%5Cn%20%20%20%20onResolved(this.value)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20if%20(this.state%20%3D%3D%3D%20REJECTED)%20%7B%5Cn%20%20%20%20onRejected(this.value)%3B%5Cn%20%20%7D%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Wkuzm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"8BKRR\" id=\"8BKRR\"><span data-lake-id=\"uc13ff5d4\" id=\"uc13ff5d4\">5. 手写 </span><span data-lake-id=\"u87bf14c0\" id=\"u87bf14c0\">Promise.then</span></h3><p data-lake-id=\"ff36cc3a871811353fce51a9794cae1c\" id=\"ff36cc3a871811353fce51a9794cae1c\"><code data-lake-id=\"u164480c6\" id=\"u164480c6\"><span data-lake-id=\"u001854ff\" id=\"u001854ff\">then</span></code><span data-lake-id=\"u62d432fa\" id=\"u62d432fa\"> 方法返回一个新的 </span><code data-lake-id=\"u0bfe06eb\" id=\"u0bfe06eb\"><span data-lake-id=\"u224cc443\" id=\"u224cc443\">promise</span></code><span data-lake-id=\"u5875c184\" id=\"u5875c184\"> 实例，为了在 </span><code data-lake-id=\"u0fbc0fc9\" id=\"u0fbc0fc9\"><span data-lake-id=\"ud1e088a5\" id=\"ud1e088a5\">promise</span></code><span data-lake-id=\"u57d541a5\" id=\"u57d541a5\"> 状态发生变化时（</span><code data-lake-id=\"uddf14f8a\" id=\"uddf14f8a\"><span data-lake-id=\"u58d8bb74\" id=\"u58d8bb74\">resolve</span></code><span data-lake-id=\"ueb840f00\" id=\"ueb840f00\"> / </span><code data-lake-id=\"u34612d3b\" id=\"u34612d3b\"><span data-lake-id=\"u59c2bcf3\" id=\"u59c2bcf3\">reject</span></code><span data-lake-id=\"ua05d5baa\" id=\"ua05d5baa\"> 被调用时）再执行 </span><code data-lake-id=\"u749b196e\" id=\"u749b196e\"><span data-lake-id=\"u37310708\" id=\"u37310708\">then</span></code><span data-lake-id=\"u96dbc1d2\" id=\"u96dbc1d2\"> 里的函数，我们使用一个 </span><code data-lake-id=\"ubf397914\" id=\"ubf397914\"><span data-lake-id=\"u33409273\" id=\"u33409273\">callbacks</span></code><span data-lake-id=\"u70738554\" id=\"u70738554\"> 数组先把传给then的函数暂存起来，等状态改变时再调用。</span></p><p data-lake-id=\"66e845435eb155b90676560d9aba2b64\" id=\"66e845435eb155b90676560d9aba2b64\"><br></p><p data-lake-id=\"873e283e5cc8098b0c070ef6a6c34a61\" id=\"873e283e5cc8098b0c070ef6a6c34a61\"><strong><span data-lake-id=\"u9726c3d7\" id=\"u9726c3d7\">那么，怎么保证后一个 </span></strong><code data-lake-id=\"u5779c017\" id=\"u5779c017\"><strong><span data-lake-id=\"u8a936439\" id=\"u8a936439\">then</span></strong></code><strong><span data-lake-id=\"u28260581\" id=\"u28260581\"> 里的方法在前一个 </span></strong><code data-lake-id=\"ubb4942ac\" id=\"ubb4942ac\"><strong><span data-lake-id=\"ua473a8cd\" id=\"ua473a8cd\">then</span></strong></code><strong><span data-lake-id=\"u9dd86678\" id=\"u9dd86678\">（可能是异步）结束之后再执行呢？</span></strong></p><p data-lake-id=\"502f79c287716108834a209e94cfeffd\" id=\"502f79c287716108834a209e94cfeffd\"><span data-lake-id=\"uc645e6f1\" id=\"uc645e6f1\">我们可以将传给 </span><code data-lake-id=\"ua4fabe2a\" id=\"ua4fabe2a\"><span data-lake-id=\"u2e6cd289\" id=\"u2e6cd289\">then</span></code><span data-lake-id=\"uc30afeba\" id=\"uc30afeba\"> 的函数和新 </span><code data-lake-id=\"u802a44c8\" id=\"u802a44c8\"><span data-lake-id=\"u3d1cd636\" id=\"u3d1cd636\">promise</span></code><span data-lake-id=\"udf882b73\" id=\"udf882b73\"> 的 </span><code data-lake-id=\"ue625abf4\" id=\"ue625abf4\"><span data-lake-id=\"uaeaaa50f\" id=\"uaeaaa50f\">resolve</span></code><span data-lake-id=\"u9c088e23\" id=\"u9c088e23\"> 一起 </span><code data-lake-id=\"u700d4d69\" id=\"u700d4d69\"><span data-lake-id=\"u964cae3a\" id=\"u964cae3a\">push</span></code><span data-lake-id=\"u18abb608\" id=\"u18abb608\"> 到前一个 </span><code data-lake-id=\"u6c0de874\" id=\"u6c0de874\"><span data-lake-id=\"ud5a656c6\" id=\"ud5a656c6\">promise</span></code><span data-lake-id=\"ucec96d11\" id=\"ucec96d11\"> 的 </span><code data-lake-id=\"uda983921\" id=\"uda983921\"><span data-lake-id=\"ubd6687e6\" id=\"ubd6687e6\">callbacks</span></code><span data-lake-id=\"u907792e9\" id=\"u907792e9\"> 数组中，达到承前启后的效果：</span></p><ul list=\"ud17f0163\"><li fid=\"ub003eb0e\" data-lake-id=\"42cd0fae71ecfed0d4a929fb32981e02\" id=\"42cd0fae71ecfed0d4a929fb32981e02\"><span data-lake-id=\"u7bc5d00c\" id=\"u7bc5d00c\">承前：当前一个 </span><code data-lake-id=\"u73a48f6f\" id=\"u73a48f6f\"><span data-lake-id=\"u9fa946ff\" id=\"u9fa946ff\">promise</span></code><span data-lake-id=\"u2d5b09aa\" id=\"u2d5b09aa\"> 完成后，调用其 </span><code data-lake-id=\"ubb112c56\" id=\"ubb112c56\"><span data-lake-id=\"u03ed862c\" id=\"u03ed862c\">resolve</span></code><span data-lake-id=\"u03ea1faf\" id=\"u03ea1faf\"> 变更状态，在这个 </span><code data-lake-id=\"ubf53a9a0\" id=\"ubf53a9a0\"><span data-lake-id=\"u913e3b14\" id=\"u913e3b14\">resolve</span></code><span data-lake-id=\"u1c5bd15e\" id=\"u1c5bd15e\"> 里会依次调用 </span><code data-lake-id=\"u8179a30a\" id=\"u8179a30a\"><span data-lake-id=\"u2dc70d4e\" id=\"u2dc70d4e\">callbacks</span></code><span data-lake-id=\"uf2d36797\" id=\"uf2d36797\"> 里的回调，这样就执行了 </span><code data-lake-id=\"u1025ee42\" id=\"u1025ee42\"><span data-lake-id=\"u4009f6d1\" id=\"u4009f6d1\">then</span></code><span data-lake-id=\"u00b5a6b5\" id=\"u00b5a6b5\"> 里的方法了</span></li><li fid=\"ub003eb0e\" data-lake-id=\"3305a9e32fafd98e6529c07efc4236ec\" id=\"3305a9e32fafd98e6529c07efc4236ec\"><span data-lake-id=\"u1356496f\" id=\"u1356496f\">启后：上一步中，当 </span><code data-lake-id=\"ua66437cb\" id=\"ua66437cb\"><span data-lake-id=\"uc8ad777a\" id=\"uc8ad777a\">then</span></code><span data-lake-id=\"u4cc5e956\" id=\"u4cc5e956\"> 里的方法执行完成后，返回一个结果，如果这个结果是个简单的值，就直接调用新 </span><code data-lake-id=\"u6ef25160\" id=\"u6ef25160\"><span data-lake-id=\"u9358a29f\" id=\"u9358a29f\">promise</span></code><span data-lake-id=\"ud941fc6b\" id=\"ud941fc6b\"> 的 </span><code data-lake-id=\"u0b5e8785\" id=\"u0b5e8785\"><span data-lake-id=\"u889468f4\" id=\"u889468f4\">resolve</span></code><span data-lake-id=\"u8af6c19d\" id=\"u8af6c19d\">，让其状态变更，这又会依次调用新 </span><code data-lake-id=\"u2cea8a65\" id=\"u2cea8a65\"><span data-lake-id=\"u8485fe64\" id=\"u8485fe64\">promise</span></code><span data-lake-id=\"u8d4c28dd\" id=\"u8d4c28dd\"> 的 </span><code data-lake-id=\"u3bfb005d\" id=\"u3bfb005d\"><span data-lake-id=\"u0d6b9a95\" id=\"u0d6b9a95\">callbacks</span></code><span data-lake-id=\"u514b0105\" id=\"u514b0105\"> 数组里的方法，循环往复。。如果返回的结果是个 </span><code data-lake-id=\"u0932dee3\" id=\"u0932dee3\"><span data-lake-id=\"u9a773c7d\" id=\"u9a773c7d\">promise</span></code><span data-lake-id=\"ufa3f7efd\" id=\"ufa3f7efd\">，则需要等它完成之后再触发新 </span><code data-lake-id=\"ue1806350\" id=\"ue1806350\"><span data-lake-id=\"u8643d2bc\" id=\"u8643d2bc\">promise</span></code><span data-lake-id=\"uba78e3ce\" id=\"uba78e3ce\"> 的 </span><code data-lake-id=\"u2c7f756e\" id=\"u2c7f756e\"><span data-lake-id=\"u96a4cf59\" id=\"u96a4cf59\">resolve</span></code><span data-lake-id=\"ud997d78e\" id=\"ud997d78e\">，所以可以在其结果的 </span><code data-lake-id=\"u532d3972\" id=\"u532d3972\"><span data-lake-id=\"u1942f7c4\" id=\"u1942f7c4\">then</span></code><span data-lake-id=\"u0e3d3a30\" id=\"u0e3d3a30\"> 里调用新 </span><code data-lake-id=\"u0e047ae9\" id=\"u0e047ae9\"><span data-lake-id=\"ue6fe1ba1\" id=\"ue6fe1ba1\">promise</span></code><span data-lake-id=\"u556ea027\" id=\"u556ea027\"> 的 </span><code data-lake-id=\"u7c8a6684\" id=\"u7c8a6684\"><span data-lake-id=\"ucfa9365d\" id=\"ucfa9365d\">resolve</span></code></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22then(onFulfilled%2C%20onReject)%7B%5Cn%20%20%20%20%2F%2F%20%E4%BF%9D%E5%AD%98%E5%89%8D%E4%B8%80%E4%B8%AApromise%E7%9A%84this%5Cn%20%20%20%20const%20self%20%3D%20this%3B%20%5Cn%20%20%20%20return%20new%20MyPromise((resolve%2C%20reject)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%B0%81%E8%A3%85%E5%89%8D%E4%B8%80%E4%B8%AApromise%E6%88%90%E5%8A%9F%E6%97%B6%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0%5Cn%20%20%20%20%20%20let%20fulfilled%20%3D%20()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20try%7B%5Cn%20%20%20%20%20%20%20%20%20%20const%20result%20%3D%20onFulfilled(self.value)%3B%20%2F%2F%20%E6%89%BF%E5%89%8D%5Cn%20%20%20%20%20%20%20%20%20%20return%20result%20instanceof%20MyPromise%3F%20result.then(resolve%2C%20reject)%20%3A%20resolve(result)%3B%20%2F%2F%E5%90%AF%E5%90%8E%5Cn%20%20%20%20%20%20%20%20%7Dcatch(err)%7B%5Cn%20%20%20%20%20%20%20%20%20%20reject(err)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%2F%2F%20%E5%B0%81%E8%A3%85%E5%89%8D%E4%B8%80%E4%B8%AApromise%E5%A4%B1%E8%B4%A5%E6%97%B6%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0%5Cn%20%20%20%20%20%20let%20rejected%20%3D%20()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20try%7B%5Cn%20%20%20%20%20%20%20%20%20%20const%20result%20%3D%20onReject(self.reason)%3B%5Cn%20%20%20%20%20%20%20%20%20%20return%20result%20instanceof%20MyPromise%3F%20result.then(resolve%2C%20reject)%20%3A%20reject(result)%3B%5Cn%20%20%20%20%20%20%20%20%7Dcatch(err)%7B%5Cn%20%20%20%20%20%20%20%20%20%20reject(err)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20switch(self.status)%7B%5Cn%20%20%20%20%20%20%20%20case%20PENDING%3A%20%5Cn%20%20%20%20%20%20%20%20%20%20self.onFulfilledCallbacks.push(fulfilled)%3B%5Cn%20%20%20%20%20%20%20%20%20%20self.onRejectedCallbacks.push(rejected)%3B%5Cn%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%20%20case%20FULFILLED%3A%5Cn%20%20%20%20%20%20%20%20%20%20fulfilled()%3B%5Cn%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%20%20case%20REJECT%3A%5Cn%20%20%20%20%20%20%20%20%20%20rejected()%3B%5Cn%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D)%5Cn%20%20%20%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22gVKo9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"5f0022f8589fdc4dcf485f62d4e41a98\" id=\"5f0022f8589fdc4dcf485f62d4e41a98\"><strong><span data-lake-id=\"u99291dc6\" id=\"u99291dc6\">注意：</span></strong></p><ul list=\"u158c6608\"><li fid=\"u09a1f913\" data-lake-id=\"6a2b142b57f19f500820f5eefa13f7bf\" id=\"6a2b142b57f19f500820f5eefa13f7bf\"><span data-lake-id=\"u5b310709\" id=\"u5b310709\">连续多个 </span><code data-lake-id=\"uc217caa7\" id=\"uc217caa7\"><span data-lake-id=\"u3bf23506\" id=\"u3bf23506\">then</span></code><span data-lake-id=\"udaba9dd0\" id=\"udaba9dd0\"> 里的回调方法是同步注册的，但注册到了不同的 </span><code data-lake-id=\"u45e6b409\" id=\"u45e6b409\"><span data-lake-id=\"u8d0007d7\" id=\"u8d0007d7\">callbacks</span></code><span data-lake-id=\"u0b74b987\" id=\"u0b74b987\"> 数组中，因为每次 </span><code data-lake-id=\"uda43aafe\" id=\"uda43aafe\"><span data-lake-id=\"u5361cee1\" id=\"u5361cee1\">then</span></code><span data-lake-id=\"u57fda57f\" id=\"u57fda57f\"> 都返回新的 </span><code data-lake-id=\"u4f7f327e\" id=\"u4f7f327e\"><span data-lake-id=\"u9143ebe5\" id=\"u9143ebe5\">promise</span></code><span data-lake-id=\"u56dabd78\" id=\"u56dabd78\"> 实例（参考上面的例子和图）</span></li><li fid=\"u09a1f913\" data-lake-id=\"ca8f07b9bc8acc71ee2ce581ea24130b\" id=\"ca8f07b9bc8acc71ee2ce581ea24130b\"><span data-lake-id=\"ue19bc29f\" id=\"ue19bc29f\">注册完成后开始执行构造函数中的异步事件，异步完成之后依次调用 </span><code data-lake-id=\"u84b86bf5\" id=\"u84b86bf5\"><span data-lake-id=\"u11800b4b\" id=\"u11800b4b\">callbacks</span></code><span data-lake-id=\"ud1512b65\" id=\"ud1512b65\"> 数组中提前注册的回调</span></li></ul><h3 data-lake-id=\"hnWGT\" id=\"hnWGT\"><span data-lake-id=\"uebfb9070\" id=\"uebfb9070\">6. 手写 Promise.all</span></h3><p data-lake-id=\"3f5abbec0fb738a625205a08633dd9f0\" id=\"3f5abbec0fb738a625205a08633dd9f0\"><strong><span data-lake-id=\"ue29a5e93\" id=\"ue29a5e93\">1) 核心思路</span></strong></p><ol list=\"u3223573f\"><li fid=\"u57d0a9fa\" data-lake-id=\"0d508f444104ee550da2078fbaf6d116\" id=\"0d508f444104ee550da2078fbaf6d116\"><span data-lake-id=\"ua2da4ddd\" id=\"ua2da4ddd\">接收一个 Promise 实例的数组或具有 Iterator 接口的对象作为参数</span></li><li fid=\"u57d0a9fa\" data-lake-id=\"4dc441c41ab2479e4e47c0997c006b9b\" id=\"4dc441c41ab2479e4e47c0997c006b9b\"><span data-lake-id=\"u63dbde7c\" id=\"u63dbde7c\">这个方法返回一个新的 promise 对象，</span></li><li fid=\"u57d0a9fa\" data-lake-id=\"820c742f7b6e3b986bb4ba24393832b6\" id=\"820c742f7b6e3b986bb4ba24393832b6\"><span data-lake-id=\"u3a0aa745\" id=\"u3a0aa745\">遍历传入的参数，用Promise.resolve()将参数&quot;包一层&quot;，使其变成一个promise对象</span></li><li fid=\"u57d0a9fa\" data-lake-id=\"10c952ef494aafa2592357f417eaddda\" id=\"10c952ef494aafa2592357f417eaddda\"><span data-lake-id=\"u7baf8239\" id=\"u7baf8239\">参数所有回调成功才是成功，返回值数组与参数顺序一致</span></li><li fid=\"u57d0a9fa\" data-lake-id=\"de7755e2160861e559f74b390b783cb5\" id=\"de7755e2160861e559f74b390b783cb5\"><span data-lake-id=\"ub3c78579\" id=\"ub3c78579\">参数数组其中一个失败，则触发失败状态，第一个触发失败的 Promise 错误信息作为 Promise.all 的错误信息。</span></li></ol><p data-lake-id=\"250ed71c7b9002f2d934d3689d33c7de\" id=\"250ed71c7b9002f2d934d3689d33c7de\"><strong><span data-lake-id=\"u2571d921\" id=\"u2571d921\">2）实现代码</span></strong></p><p data-lake-id=\"be175efc88c5b36db5419847aef1666f\" id=\"be175efc88c5b36db5419847aef1666f\"><span data-lake-id=\"u51ae545d\" id=\"u51ae545d\">一般来说，Promise.all 用来处理多个并发请求，也是为了页面数据构造的方便，将一个页面所用到的在不同接口的数据一起请求过来，不过，如果其中一个接口失败了，多个请求也就失败了，页面可能啥也出不来，这就看当前页面的耦合程度了</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20promiseAll(promises)%20%7B%5Cn%20%20return%20new%20Promise(function(resolve%2C%20reject)%20%7B%5Cn%20%20%20%20if(!Array.isArray(promises))%7B%5Cn%20%20%20%20%20%20%20%20throw%20new%20TypeError(%60argument%20must%20be%20a%20array%60)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20var%20resolvedCounter%20%3D%200%3B%5Cn%20%20%20%20var%20promiseNum%20%3D%20promises.length%3B%5Cn%20%20%20%20var%20resolvedResult%20%3D%20%5B%5D%3B%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20promiseNum%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20Promise.resolve(promises%5Bi%5D).then(value%3D%3E%7B%5Cn%20%20%20%20%20%20%20%20resolvedCounter%2B%2B%3B%5Cn%20%20%20%20%20%20%20%20resolvedResult%5Bi%5D%20%3D%20value%3B%5Cn%20%20%20%20%20%20%20%20if%20(resolvedCounter%20%3D%3D%20promiseNum)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20resolve(resolvedResult)%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%2Cerror%3D%3E%7B%5Cn%20%20%20%20%20%20%20%20return%20reject(error)%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%5Cn%7D%5Cn%2F%2F%20test%5Cnlet%20p1%20%3D%20new%20Promise(function%20(resolve%2C%20reject)%20%7B%5Cn%20%20%20%20setTimeout(function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20resolve(1)%5Cn%20%20%20%20%7D%2C%201000)%5Cn%7D)%5Cnlet%20p2%20%3D%20new%20Promise(function%20(resolve%2C%20reject)%20%7B%5Cn%20%20%20%20setTimeout(function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20resolve(2)%5Cn%20%20%20%20%7D%2C%202000)%5Cn%7D)%5Cnlet%20p3%20%3D%20new%20Promise(function%20(resolve%2C%20reject)%20%7B%5Cn%20%20%20%20setTimeout(function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20resolve(3)%5Cn%20%20%20%20%7D%2C%203000)%5Cn%7D)%5CnpromiseAll(%5Bp3%2C%20p1%2C%20p2%5D).then(res%20%3D%3E%20%7B%5Cn%20%20%20%20console.log(res)%20%2F%2F%20%5B3%2C%201%2C%202%5D%5Cn%7D)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22tSusq%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"2e29m\" id=\"2e29m\"><span data-lake-id=\"ua43bd177\" id=\"ua43bd177\">7. 手写 Promise.race</span></h3><p data-lake-id=\"8bdaf8efa64bf101d8788122af2fa5be\" id=\"8bdaf8efa64bf101d8788122af2fa5be\"><span data-lake-id=\"u6c09af3b\" id=\"u6c09af3b\">该方法的参数是 </span><span data-lake-id=\"u920206ee\" id=\"u920206ee\">Promise 实例数组, 然后其 then 注册的回调方法是数组中的某一个 Promise 的状态变为 fulfilled 的时候就执行. 因为 Promise 的状态</span><strong><span data-lake-id=\"u22671f14\" id=\"u22671f14\">只能改变一次</span></strong><span data-lake-id=\"u45dfe986\" id=\"u45dfe986\">, 那么我们只需要把 Promise.race 中产生的 Promise 对象的 resolve 方法, 注入到数组中的每一个 Promise 实例中的回调函数中即可.</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Promise.race%20%3D%20function%20(args)%20%7B%5Cn%20%20return%20new%20Promise((resolve%2C%20reject)%20%3D%3E%20%7B%5Cn%20%20%20%20for%20(let%20i%20%3D%200%2C%20len%20%3D%20args.length%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20args%5Bi%5D.then(resolve%2C%20reject)%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Kqxn5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"haa3F\" id=\"haa3F\"><span data-lake-id=\"ue56e76ff\" id=\"ue56e76ff\">8. 手写防抖函数</span></h3><p data-lake-id=\"d37f7833ea53c8d036140783c70ee0c9\" id=\"d37f7833ea53c8d036140783c70ee0c9\"><span data-lake-id=\"u5087ed60\" id=\"u5087ed60\">函数防抖是指在事件被触发 n 秒后再执行回调，如果在这 n 秒内事件又被触发，则重新计时。这可以使用在一些点击请求的事件上，避免因为用户的多次点击向后端发送多次请求。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E7%9A%84%E5%AE%9E%E7%8E%B0%5Cnfunction%20debounce(fn%2C%20wait)%20%7B%5Cn%20%20let%20timer%20%3D%20null%3B%5Cn%5Cn%20%20return%20function()%20%7B%5Cn%20%20%20%20let%20context%20%3D%20this%2C%5Cn%20%20%20%20%20%20%20%20args%20%3D%20arguments%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E6%AD%A4%E6%97%B6%E5%AD%98%E5%9C%A8%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E8%AF%9D%EF%BC%8C%E5%88%99%E5%8F%96%E6%B6%88%E4%B9%8B%E5%89%8D%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E9%87%8D%E6%96%B0%E8%AE%B0%E6%97%B6%5Cn%20%20%20%20if%20(timer)%20%7B%5Cn%20%20%20%20%20%20clearTimeout(timer)%3B%5Cn%20%20%20%20%20%20timer%20%3D%20null%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E5%99%A8%EF%BC%8C%E4%BD%BF%E4%BA%8B%E4%BB%B6%E9%97%B4%E9%9A%94%E6%8C%87%E5%AE%9A%E4%BA%8B%E4%BB%B6%E5%90%8E%E6%89%A7%E8%A1%8C%5Cn%20%20%20%20timer%20%3D%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20fn.apply(context%2C%20args)%3B%5Cn%20%20%20%20%7D%2C%20wait)%3B%5Cn%20%20%7D%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22uixuQ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"Rp1A9\" id=\"Rp1A9\"><span data-lake-id=\"u4bfb4ae2\" id=\"u4bfb4ae2\">9. 手写节流函数</span></h3><p data-lake-id=\"7e92bc8ac3eb6797fe84a1a1a18acbab\" id=\"7e92bc8ac3eb6797fe84a1a1a18acbab\"><span data-lake-id=\"u4d0d327a\" id=\"u4d0d327a\">函数节流是指规定一个单位时间，在这个单位时间内，只能有一次触发事件的回调函数执行，如果在同一个单位时间内某事件被触发多次，只有一次能生效。节流可以使用在 scroll 函数的事件监听上，通过事件节流来降低事件调用的频率。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E7%9A%84%E5%AE%9E%E7%8E%B0%3B%5Cnfunction%20throttle(fn%2C%20delay)%20%7B%5Cn%20%20let%20curTime%20%3D%20Date.now()%3B%5Cn%5Cn%20%20return%20function()%20%7B%5Cn%20%20%20%20let%20context%20%3D%20this%2C%5Cn%20%20%20%20%20%20%20%20args%20%3D%20arguments%2C%5Cn%20%20%20%20%20%20%20%20nowTime%20%3D%20Date.now()%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E4%B8%A4%E6%AC%A1%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94%E8%B6%85%E8%BF%87%E4%BA%86%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%EF%BC%8C%E5%88%99%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%E3%80%82%5Cn%20%20%20%20if%20(nowTime%20-%20curTime%20%3E%3D%20delay)%20%7B%5Cn%20%20%20%20%20%20curTime%20%3D%20Date.now()%3B%5Cn%20%20%20%20%20%20return%20fn.apply(context%2C%20args)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22SM2df%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"BL7O4\" id=\"BL7O4\"><span data-lake-id=\"udef52f99\" id=\"udef52f99\">10. 手写类型判断函数</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20getType(value)%20%7B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%20null%20%E7%9A%84%E6%83%85%E5%86%B5%5Cn%20%20if%20(value%20%3D%3D%3D%20null)%20%7B%5Cn%20%20%20%20return%20value%20%2B%20%5C%22%5C%22%3B%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%83%85%E5%86%B5%5Cn%20%20if%20(typeof%20value%20%3D%3D%3D%20%5C%22object%5C%22)%20%7B%5Cn%20%20%20%20let%20valueClass%20%3D%20Object.prototype.toString.call(value)%2C%5Cn%20%20%20%20%20%20type%20%3D%20valueClass.split(%5C%22%20%5C%22)%5B1%5D.split(%5C%22%5C%22)%3B%5Cn%20%20%20%20type.pop()%3B%5Cn%20%20%20%20return%20type.join(%5C%22%5C%22).toLowerCase()%3B%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%83%85%E5%86%B5%E5%92%8C%E5%87%BD%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5%5Cn%20%20%20%20return%20typeof%20value%3B%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22nH5Kj%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"ZfG82\" id=\"ZfG82\"><span data-lake-id=\"u1b0aedd6\" id=\"u1b0aedd6\">11. 手写 call 函数</span></h3><p data-lake-id=\"3ee35e6dec2994cd6c369fb0c131ac5f\" id=\"3ee35e6dec2994cd6c369fb0c131ac5f\"><span data-lake-id=\"u90c4c8e1\" id=\"u90c4c8e1\">call 函数的实现步骤：</span></p><ol list=\"ufcb1a196\"><li fid=\"uae4147ec\" data-lake-id=\"3b253fe6ec2fd158934bbd49a36fd7ff\" id=\"3b253fe6ec2fd158934bbd49a36fd7ff\"><span data-lake-id=\"uaddfdbdf\" id=\"uaddfdbdf\">判断调用对象是否为函数，即使我们是定义在函数的原型上的，但是可能出现使用 call 等方式调用的情况。</span></li><li fid=\"uae4147ec\" data-lake-id=\"340536a15cb9df9f54d4afa415f4a47a\" id=\"340536a15cb9df9f54d4afa415f4a47a\"><span data-lake-id=\"u582dce9a\" id=\"u582dce9a\">判断传入上下文对象是否存在，如果不存在，则设置为 window 。</span></li><li fid=\"uae4147ec\" data-lake-id=\"2693956cb8d3dcd7a19756fc04da1212\" id=\"2693956cb8d3dcd7a19756fc04da1212\"><span data-lake-id=\"uf871dc76\" id=\"uf871dc76\">处理传入的参数，截取第一个参数后的所有参数。</span></li><li fid=\"uae4147ec\" data-lake-id=\"da86a41ce57ef2ff2fe7d619709e8a5f\" id=\"da86a41ce57ef2ff2fe7d619709e8a5f\"><span data-lake-id=\"u717435f1\" id=\"u717435f1\">将函数作为上下文对象的一个属性。</span></li><li fid=\"uae4147ec\" data-lake-id=\"eb4ce40432f37096eb61c3c2a4ab5733\" id=\"eb4ce40432f37096eb61c3c2a4ab5733\"><span data-lake-id=\"ud55ca212\" id=\"ud55ca212\">使用上下文对象来调用这个方法，并保存返回结果。</span></li><li fid=\"uae4147ec\" data-lake-id=\"6e7922ad0e737560a8b959bf0542946a\" id=\"6e7922ad0e737560a8b959bf0542946a\"><span data-lake-id=\"u120643e9\" id=\"u120643e9\">删除刚才新增的属性。</span></li><li fid=\"uae4147ec\" data-lake-id=\"4bae64564ee095fbab6deb2c57fc32be\" id=\"4bae64564ee095fbab6deb2c57fc32be\"><span data-lake-id=\"u5a1087d2\" id=\"u5a1087d2\">返回结果。</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20call%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%5CnFunction.prototype.myCall%20%3D%20function(context)%20%7B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E8%B0%83%E7%94%A8%E5%AF%B9%E8%B1%A1%5Cn%20%20if%20(typeof%20this%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20console.error(%5C%22type%20error%5C%22)%3B%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%5Cn%20%20let%20args%20%3D%20%5B...arguments%5D.slice(1)%2C%5Cn%20%20%20%20%20%20result%20%3D%20null%3B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%20context%20%E6%98%AF%E5%90%A6%E4%BC%A0%E5%85%A5%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%AA%E4%BC%A0%E5%85%A5%E5%88%99%E8%AE%BE%E7%BD%AE%E4%B8%BA%20window%5Cn%20%20context%20%3D%20context%20%7C%7C%20window%3B%5Cn%20%20%2F%2F%20%E5%B0%86%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%AE%BE%E4%B8%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95%5Cn%20%20context.fn%20%3D%20this%3B%5Cn%20%20%2F%2F%20%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%5Cn%20%20result%20%3D%20context.fn(...args)%3B%5Cn%20%20%2F%2F%20%E5%B0%86%E5%B1%9E%E6%80%A7%E5%88%A0%E9%99%A4%5Cn%20%20delete%20context.fn%3B%5Cn%20%20return%20result%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22NKLnF%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"sqKOw\" id=\"sqKOw\"><span data-lake-id=\"ud2d7a176\" id=\"ud2d7a176\">12. 手写 </span><span data-lake-id=\"u294ec16c\" id=\"u294ec16c\">apply 函数</span></h3><p data-lake-id=\"f354fcbb158e2da19c9a442c2f4a1a2b\" id=\"f354fcbb158e2da19c9a442c2f4a1a2b\"><span data-lake-id=\"ua435bd0a\" id=\"ua435bd0a\">apply 函数的实现步骤：</span></p><ol list=\"u0d8435bb\"><li fid=\"ubd301ec8\" data-lake-id=\"1439a6ca602d47f786d102fdf5689b0f\" id=\"1439a6ca602d47f786d102fdf5689b0f\"><span data-lake-id=\"u53e01cbf\" id=\"u53e01cbf\">判断调用对象是否为函数，即使我们是定义在函数的原型上的，但是可能出现使用 call 等方式调用的情况。</span></li><li fid=\"ubd301ec8\" data-lake-id=\"f8254660b4984c2fa7f6caf76e828e4a\" id=\"f8254660b4984c2fa7f6caf76e828e4a\"><span data-lake-id=\"udd6f23f3\" id=\"udd6f23f3\">判断传入上下文对象是否存在，如果不存在，则设置为 window 。</span></li><li fid=\"ubd301ec8\" data-lake-id=\"5e2d4ecd10e57464390aa7262e0b19b5\" id=\"5e2d4ecd10e57464390aa7262e0b19b5\"><span data-lake-id=\"ue4f6f14f\" id=\"ue4f6f14f\">将函数作为上下文对象的一个属性。</span></li><li fid=\"ubd301ec8\" data-lake-id=\"9472089f06cde308c33997f048b0bac5\" id=\"9472089f06cde308c33997f048b0bac5\"><span data-lake-id=\"udd4dea39\" id=\"udd4dea39\">判断参数值是否传入</span></li><li fid=\"ubd301ec8\" data-lake-id=\"91d7288d06e0cb263f2c953fd6e91571\" id=\"91d7288d06e0cb263f2c953fd6e91571\"><span data-lake-id=\"u9bbf917c\" id=\"u9bbf917c\">使用上下文对象来调用这个方法，并保存返回结果。</span></li><li fid=\"ubd301ec8\" data-lake-id=\"5141ee1c781004a04a105ad3fbb89014\" id=\"5141ee1c781004a04a105ad3fbb89014\"><span data-lake-id=\"u44cbd849\" id=\"u44cbd849\">删除刚才新增的属性</span></li><li fid=\"ubd301ec8\" data-lake-id=\"6278d49f7ebbfd03d3ae21125f995b0e\" id=\"6278d49f7ebbfd03d3ae21125f995b0e\"><span data-lake-id=\"u38f415f5\" id=\"u38f415f5\">返回结果</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20apply%20%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%5CnFunction.prototype.myApply%20%3D%20function(context)%20%7B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E8%B0%83%E7%94%A8%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E5%87%BD%E6%95%B0%5Cn%20%20if%20(typeof%20this%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20throw%20new%20TypeError(%5C%22Error%5C%22)%3B%5Cn%20%20%7D%5Cn%20%20let%20result%20%3D%20null%3B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%20context%20%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%AA%E4%BC%A0%E5%85%A5%E5%88%99%E4%B8%BA%20window%5Cn%20%20context%20%3D%20context%20%7C%7C%20window%3B%5Cn%20%20%2F%2F%20%E5%B0%86%E5%87%BD%E6%95%B0%E8%AE%BE%E4%B8%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95%5Cn%20%20context.fn%20%3D%20this%3B%5Cn%20%20%2F%2F%20%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%5Cn%20%20if%20(arguments%5B1%5D)%20%7B%5Cn%20%20%20%20result%20%3D%20context.fn(...arguments%5B1%5D)%3B%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20result%20%3D%20context.fn()%3B%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%B0%86%E5%B1%9E%E6%80%A7%E5%88%A0%E9%99%A4%5Cn%20%20delete%20context.fn%3B%5Cn%20%20return%20result%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22qrWJq%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"dpPkz\" id=\"dpPkz\"><span data-lake-id=\"u83f2a58e\" id=\"u83f2a58e\">13. 手写 bind 函数</span></h3><p data-lake-id=\"1ece40c07b59a70651aaf46626489f6b\" id=\"1ece40c07b59a70651aaf46626489f6b\"><span data-lake-id=\"ue757334b\" id=\"ue757334b\">bind 函数的实现步骤：</span></p><ol list=\"ufe8cd027\"><li fid=\"ueefba8d1\" data-lake-id=\"0ad5da2ade611a0b15d8403cc9cba615\" id=\"0ad5da2ade611a0b15d8403cc9cba615\"><span data-lake-id=\"u5f9950a9\" id=\"u5f9950a9\">判断调用对象是否为函数，即使我们是定义在函数的原型上的，但是可能出现使用 call 等方式调用的情况。</span></li><li fid=\"ueefba8d1\" data-lake-id=\"89fc85e602dfe5bb00f1ac98457b38f7\" id=\"89fc85e602dfe5bb00f1ac98457b38f7\"><span data-lake-id=\"ub9429e25\" id=\"ub9429e25\">保存当前函数的引用，获取其余传入参数值。</span></li><li fid=\"ueefba8d1\" data-lake-id=\"3e3119812d886f6d41f3de4baa0e0127\" id=\"3e3119812d886f6d41f3de4baa0e0127\"><span data-lake-id=\"u9faf209f\" id=\"u9faf209f\">创建一个函数返回</span></li><li fid=\"ueefba8d1\" data-lake-id=\"7e9ca2d005a17cf13b0b2c6b8d9ff860\" id=\"7e9ca2d005a17cf13b0b2c6b8d9ff860\"><span data-lake-id=\"u55b029fa\" id=\"u55b029fa\">函数内部使用 apply 来绑定函数调用，需要判断函数作为构造函数的情况，这个时候需要传入当前函数的 this 给 apply 调用，其余情况都传入指定的上下文对象。</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20bind%20%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%5CnFunction.prototype.myBind%20%3D%20function(context)%20%7B%5Cn%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E8%B0%83%E7%94%A8%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E5%87%BD%E6%95%B0%5Cn%20%20if%20(typeof%20this%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20throw%20new%20TypeError(%5C%22Error%5C%22)%3B%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0%5Cn%20%20var%20args%20%3D%20%5B...arguments%5D.slice(1)%2C%5Cn%20%20%20%20%20%20fn%20%3D%20this%3B%5Cn%20%20return%20function%20Fn()%20%7B%5Cn%20%20%20%20%2F%2F%20%E6%A0%B9%E6%8D%AE%E8%B0%83%E7%94%A8%E6%96%B9%E5%BC%8F%EF%BC%8C%E4%BC%A0%E5%85%A5%E4%B8%8D%E5%90%8C%E7%BB%91%E5%AE%9A%E5%80%BC%5Cn%20%20%20%20return%20fn.apply(%5Cn%20%20%20%20%20%20this%20instanceof%20Fn%20%3F%20this%20%3A%20context%2C%5Cn%20%20%20%20%20%20args.concat(...arguments)%5Cn%20%20%20%20)%3B%5Cn%20%20%7D%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22RFuda%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"16\" id=\"16\"><span data-lake-id=\"u5f5e0783\" id=\"u5f5e0783\">14. 函数柯里化的实现</span></h3><p data-lake-id=\"0bc1783c131b271a676abc1b987831ee\" id=\"0bc1783c131b271a676abc1b987831ee\"><span data-lake-id=\"ub143f98a\" id=\"ub143f98a\"> 函数柯里化指的是一种将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20curry(fn%2C%20args)%20%7B%5Cn%20%20%2F%2F%20%E8%8E%B7%E5%8F%96%E5%87%BD%E6%95%B0%E9%9C%80%E8%A6%81%E7%9A%84%E5%8F%82%E6%95%B0%E9%95%BF%E5%BA%A6%5Cn%20%20let%20length%20%3D%20fn.length%3B%5Cn%5Cn%20%20args%20%3D%20args%20%7C%7C%20%5B%5D%3B%5Cn%5Cn%20%20return%20function()%20%7B%5Cn%20%20%20%20let%20subArgs%20%3D%20args.slice(0)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E6%8B%BC%E6%8E%A5%E5%BE%97%E5%88%B0%E7%8E%B0%E6%9C%89%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%82%E6%95%B0%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20arguments.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20subArgs.push(arguments%5Bi%5D)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E5%8F%82%E6%95%B0%E7%9A%84%E9%95%BF%E5%BA%A6%E6%98%AF%E5%90%A6%E5%B7%B2%E7%BB%8F%E6%BB%A1%E8%B6%B3%E5%87%BD%E6%95%B0%E6%89%80%E9%9C%80%E5%8F%82%E6%95%B0%E7%9A%84%E9%95%BF%E5%BA%A6%5Cn%20%20%20%20if%20(subArgs.length%20%3E%3D%20length)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E6%BB%A1%E8%B6%B3%EF%BC%8C%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%5Cn%20%20%20%20%20%20return%20fn.apply(this%2C%20subArgs)%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E4%B8%8D%E6%BB%A1%E8%B6%B3%EF%BC%8C%E9%80%92%E5%BD%92%E8%BF%94%E5%9B%9E%E7%A7%91%E9%87%8C%E5%8C%96%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E7%AD%89%E5%BE%85%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E5%85%A5%5Cn%20%20%20%20%20%20return%20curry.call(this%2C%20fn%2C%20subArgs)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%3B%5Cn%7D%5Cn%5Cn%2F%2F%20es6%20%E5%AE%9E%E7%8E%B0%5Cnfunction%20curry(fn%2C%20...args)%20%7B%5Cn%20%20return%20fn.length%20%3C%3D%20args.length%20%3F%20fn(...args)%20%3A%20curry.bind(null%2C%20fn%2C%20...args)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%224egvA%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"IY3Cr\" id=\"IY3Cr\"><span data-lake-id=\"u0f04ae9b\" id=\"u0f04ae9b\">15. 实现AJAX请求</span></h3><p data-lake-id=\"08cea7c99ff3761c076dcaa13a58be4f\" id=\"08cea7c99ff3761c076dcaa13a58be4f\"><span data-lake-id=\"u8e4287a1\" id=\"u8e4287a1\">AJAX是 Asynchronous JavaScript and XML 的缩写，指的是通过 JavaScript 的 异步通信，从服务器获取 XML 文档从中提取数据，再更新当前网页的对应部分，而不用刷新整个网页。</span></p><p data-lake-id=\"f72d73e6d14eee526fd4afb76491b0b6\" id=\"f72d73e6d14eee526fd4afb76491b0b6\"><br></p><p data-lake-id=\"40c04913d6dcb934e6c53d143e2e259c\" id=\"40c04913d6dcb934e6c53d143e2e259c\"><span data-lake-id=\"ue8aa4c26\" id=\"ue8aa4c26\">创建AJAX请求的步骤：</span></p><ul list=\"u41f47e4d\"><li fid=\"ub91ac50a\" data-lake-id=\"6ed0acdbf3e117802ea4f09e79e2dfee\" id=\"6ed0acdbf3e117802ea4f09e79e2dfee\"><strong><span data-lake-id=\"u59b4b9f1\" id=\"u59b4b9f1\">创建一个 XMLHttpRequest 对象。</span></strong></li><li fid=\"ub91ac50a\" data-lake-id=\"bcab49064fc211b0d4846d0eb671a989\" id=\"bcab49064fc211b0d4846d0eb671a989\"><span data-lake-id=\"ue9d6f967\" id=\"ue9d6f967\">在这个对象上</span><strong><span data-lake-id=\"ua183e91a\" id=\"ua183e91a\">使用 open 方法创建一个 HTTP 请求</span></strong><span data-lake-id=\"u614c328d\" id=\"u614c328d\">，open 方法所需要的参数是请求的方法、请求的地址、是否异步和用户的认证信息。</span></li><li fid=\"ub91ac50a\" data-lake-id=\"7b41d1eb5020fdf9dd44277972be199d\" id=\"7b41d1eb5020fdf9dd44277972be199d\"><span data-lake-id=\"u32821569\" id=\"u32821569\">在发起请求前，可以为这个对象</span><strong><span data-lake-id=\"u945703b0\" id=\"u945703b0\">添加一些信息和监听函数</span></strong><span data-lake-id=\"u8eed4e48\" id=\"u8eed4e48\">。比如说可以通过 setRequestHeader 方法来为请求添加头信息。还可以为这个对象添加一个状态监听函数。一个 XMLHttpRequest 对象一共有 5 个状态，当它的状态变化时会触发onreadystatechange 事件，可以通过设置监听函数，来处理请求成功后的结果。当对象的 readyState 变为 4 的时候，代表服务器返回的数据接收完成，这个时候可以通过判断请求的状态，如果状态是 2xx 或者 304 的话则代表返回正常。这个时候就可以通过 response 中的数据来对页面进行更新了。</span></li><li fid=\"ub91ac50a\" data-lake-id=\"eff2d895192b04b6fa51bbfff481f406\" id=\"eff2d895192b04b6fa51bbfff481f406\"><span data-lake-id=\"ucb194653\" id=\"ucb194653\">当对象的属性和监听函数设置完成后，最后调</span><strong><span data-lake-id=\"u77e22341\" id=\"u77e22341\">用 sent 方法来向服务器发起请求</span></strong><span data-lake-id=\"u83de35c8\" id=\"u83de35c8\">，可以传入参数作为发送的数据体。</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20SERVER_URL%20%3D%20%5C%22%2Fserver%5C%22%3B%5Cnlet%20xhr%20%3D%20new%20XMLHttpRequest()%3B%5Cn%2F%2F%20%E5%88%9B%E5%BB%BA%20Http%20%E8%AF%B7%E6%B1%82%5Cnxhr.open(%5C%22GET%5C%22%2C%20SERVER_URL%2C%20true)%3B%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E7%8A%B6%E6%80%81%E7%9B%91%E5%90%AC%E5%87%BD%E6%95%B0%5Cnxhr.onreadystatechange%20%3D%20function()%20%7B%5Cn%20%20if%20(this.readyState%20!%3D%3D%204)%20return%3B%5Cn%20%20%2F%2F%20%E5%BD%93%E8%AF%B7%E6%B1%82%E6%88%90%E5%8A%9F%E6%97%B6%5Cn%20%20if%20(this.status%20%3D%3D%3D%20200)%20%7B%5Cn%20%20%20%20handle(this.response)%3B%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20console.error(this.statusText)%3B%5Cn%20%20%7D%5Cn%7D%3B%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E8%AF%B7%E6%B1%82%E5%A4%B1%E8%B4%A5%E6%97%B6%E7%9A%84%E7%9B%91%E5%90%AC%E5%87%BD%E6%95%B0%5Cnxhr.onerror%20%3D%20function()%20%7B%5Cn%20%20console.error(this.statusText)%3B%5Cn%7D%3B%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%BF%A1%E6%81%AF%5Cnxhr.responseType%20%3D%20%5C%22json%5C%22%3B%5Cnxhr.setRequestHeader(%5C%22Accept%5C%22%2C%20%5C%22application%2Fjson%5C%22)%3B%5Cn%2F%2F%20%E5%8F%91%E9%80%81%20Http%20%E8%AF%B7%E6%B1%82%5Cnxhr.send(null)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Ue4KD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"qKn6Y\" id=\"qKn6Y\"><span data-lake-id=\"ua25f3294\" id=\"ua25f3294\">16. 使用Promise封装AJAX请求</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20promise%20%E5%B0%81%E8%A3%85%E5%AE%9E%E7%8E%B0%EF%BC%9A%5Cnfunction%20getJSON(url)%20%7B%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%20promise%20%E5%AF%B9%E8%B1%A1%5Cn%20%20let%20promise%20%3D%20new%20Promise(function(resolve%2C%20reject)%20%7B%5Cn%20%20%20%20let%20xhr%20%3D%20new%20XMLHttpRequest()%3B%5Cn%20%20%20%20%2F%2F%20%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%20http%20%E8%AF%B7%E6%B1%82%5Cn%20%20%20%20xhr.open(%5C%22GET%5C%22%2C%20url%2C%20true)%3B%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E7%8A%B6%E6%80%81%E7%9A%84%E7%9B%91%E5%90%AC%E5%87%BD%E6%95%B0%5Cn%20%20%20%20xhr.onreadystatechange%20%3D%20function()%20%7B%5Cn%20%20%20%20%20%20if%20(this.readyState%20!%3D%3D%204)%20return%3B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%BD%93%E8%AF%B7%E6%B1%82%E6%88%90%E5%8A%9F%E6%88%96%E5%A4%B1%E8%B4%A5%E6%97%B6%EF%BC%8C%E6%94%B9%E5%8F%98%20promise%20%E7%9A%84%E7%8A%B6%E6%80%81%5Cn%20%20%20%20%20%20if%20(this.status%20%3D%3D%3D%20200)%20%7B%5Cn%20%20%20%20%20%20%20%20resolve(this.response)%3B%5Cn%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20reject(new%20Error(this.statusText))%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%3B%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E9%94%99%E8%AF%AF%E7%9B%91%E5%90%AC%E5%87%BD%E6%95%B0%5Cn%20%20%20%20xhr.onerror%20%3D%20function()%20%7B%5Cn%20%20%20%20%20%20reject(new%20Error(this.statusText))%3B%5Cn%20%20%20%20%7D%3B%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E5%93%8D%E5%BA%94%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%5Cn%20%20%20%20xhr.responseType%20%3D%20%5C%22json%5C%22%3B%5Cn%20%20%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%BF%A1%E6%81%AF%5Cn%20%20%20%20xhr.setRequestHeader(%5C%22Accept%5C%22%2C%20%5C%22application%2Fjson%5C%22)%3B%5Cn%20%20%20%20%2F%2F%20%E5%8F%91%E9%80%81%20http%20%E8%AF%B7%E6%B1%82%5Cn%20%20%20%20xhr.send(null)%3B%5Cn%20%20%7D)%3B%5Cn%20%20return%20promise%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22zITEs%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"TT8E3\" id=\"TT8E3\"><span data-lake-id=\"u2993af95\" id=\"u2993af95\">17. 实现浅拷贝</span></h3><p data-lake-id=\"e01a9c5f0e0462c740062b9475aa664e\" id=\"e01a9c5f0e0462c740062b9475aa664e\"><span data-lake-id=\"ua0b508a6\" id=\"ua0b508a6\">浅拷贝是指，一个新的对象对原始对象的属性值进行精确地拷贝，如果拷贝的是基本数据类型，拷贝的就是基本数据类型的值，如果是引用数据类型，拷贝的就是内存地址。如果其中一个对象的引用内存地址发生改变，另一个对象也会发生变化。</span></p><h4 data-lake-id=\"t6hN6\" id=\"t6hN6\"><span data-lake-id=\"u019a790a\" id=\"u019a790a\">（1）Object.assign()</span></h4><p data-lake-id=\"1ef656f05b4e7a950c3a98e7cf2e2855\" id=\"1ef656f05b4e7a950c3a98e7cf2e2855\"><code data-lake-id=\"u018e175c\" id=\"u018e175c\"><span data-lake-id=\"ud4e52ff0\" id=\"ud4e52ff0\">Object.assign()</span></code><span data-lake-id=\"u5365158a\" id=\"u5365158a\">是ES6中对象的拷贝方法，接受的第一个参数是目标对象，其余参数是源对象，用法：</span><code data-lake-id=\"u7755f89d\" id=\"u7755f89d\"><span data-lake-id=\"u6904c3ce\" id=\"u6904c3ce\">Object.assign(target, source_1, ···)</span></code><span data-lake-id=\"u67028fef\" id=\"u67028fef\">，该方法可以实现浅拷贝，也可以实现一维对象的深拷贝。</span></p><p data-lake-id=\"8286d28f198a2a8dde140529cf2d357a\" id=\"8286d28f198a2a8dde140529cf2d357a\"><br></p><p data-lake-id=\"c29d8adcc85574bd3c7cf1457eda3a3b\" id=\"c29d8adcc85574bd3c7cf1457eda3a3b\"><strong><span data-lake-id=\"ua620bb25\" id=\"ua620bb25\">注意：</span></strong></p><ul list=\"u2a984858\"><li fid=\"uf1a90b99\" data-lake-id=\"a17b6e0ce44e2f2de48bb960917091fd\" id=\"a17b6e0ce44e2f2de48bb960917091fd\"><span data-lake-id=\"u5221bf16\" id=\"u5221bf16\">如果目标对象和源对象有同名属性，或者多个源对象有同名属性，则后面的属性会覆盖前面的属性。</span></li><li fid=\"uf1a90b99\" data-lake-id=\"cec293b3aed84c15906a4e8533729c7b\" id=\"cec293b3aed84c15906a4e8533729c7b\"><span data-lake-id=\"u07599da1\" id=\"u07599da1\">如果该函数只有一个参数，当参数为对象时，直接返回该对象；当参数不是对象时，会先将参数转为对象然后返回。</span></li><li fid=\"uf1a90b99\" data-lake-id=\"5c717e04a2b9724e534fa3d27ae111dc\" id=\"5c717e04a2b9724e534fa3d27ae111dc\"><span data-lake-id=\"ufdf315d0\" id=\"ufdf315d0\">因为</span><code data-lake-id=\"u2e1904ff\" id=\"u2e1904ff\"><span data-lake-id=\"u2672e227\" id=\"u2672e227\">null</span></code><span data-lake-id=\"u3f030424\" id=\"u3f030424\"> 和 </span><code data-lake-id=\"u149a9477\" id=\"u149a9477\"><span data-lake-id=\"u9b24dbd1\" id=\"u9b24dbd1\">undefined</span></code><span data-lake-id=\"ue8577e2d\" id=\"ue8577e2d\"> 不能转化为对象，所以第一个参数不能为</span><code data-lake-id=\"u27e963b9\" id=\"u27e963b9\"><span data-lake-id=\"u166bb543\" id=\"u166bb543\">null</span></code><span data-lake-id=\"u003e7f11\" id=\"u003e7f11\">或 </span><code data-lake-id=\"u8f55cb5b\" id=\"u8f55cb5b\"><span data-lake-id=\"uf1a97f3f\" id=\"uf1a97f3f\">undefined</span></code><span data-lake-id=\"uee846767\" id=\"uee846767\">，会报错。</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20target%20%3D%20%7Ba%3A%201%7D%3B%5Cnlet%20object2%20%3D%20%7Bb%3A%202%7D%3B%5Cnlet%20object3%20%3D%20%7Bc%3A%203%7D%3B%5CnObject.assign(target%2Cobject2%2Cobject3)%3B%20%20%5Cnconsole.log(target)%3B%20%20%2F%2F%20%7Ba%3A%201%2C%20b%3A%202%2C%20c%3A%203%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dfO3Z%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"BEgnX\" id=\"BEgnX\"><span data-lake-id=\"u9b259180\" id=\"u9b259180\">（2）扩展运算符</span></h4><p data-lake-id=\"c22904961c262c79aa26a1f9bd3b2155\" id=\"c22904961c262c79aa26a1f9bd3b2155\"><span data-lake-id=\"u278e288e\" id=\"u278e288e\">使用扩展运算符可以在构造字面量对象的时候，进行属性的拷贝。语法：</span><code data-lake-id=\"uc688b547\" id=\"uc688b547\"><span data-lake-id=\"u440dc66b\" id=\"u440dc66b\">let cloneObj = { ...obj };</span></code></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20obj1%20%3D%20%7Ba%3A1%2Cb%3A%7Bc%3A1%7D%7D%5Cnlet%20obj2%20%3D%20%7B...obj1%7D%3B%5Cnobj1.a%20%3D%202%3B%5Cnconsole.log(obj1)%3B%20%2F%2F%7Ba%3A2%2Cb%3A%7Bc%3A1%7D%7D%5Cnconsole.log(obj2)%3B%20%2F%2F%7Ba%3A1%2Cb%3A%7Bc%3A1%7D%7D%5Cnobj1.b.c%20%3D%202%3B%5Cnconsole.log(obj1)%3B%20%2F%2F%7Ba%3A2%2Cb%3A%7Bc%3A2%7D%7D%5Cnconsole.log(obj2)%3B%20%2F%2F%7Ba%3A1%2Cb%3A%7Bc%3A2%7D%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22id%22%3A%22pv9sQ%22%7D\"></card><h4 data-lake-id=\"c3a4f6c0\" id=\"c3a4f6c0\"><span data-lake-id=\"u0901f9c8\" id=\"u0901f9c8\">（3）数组方法实现数组浅拷贝</span></h4><h6 data-lake-id=\"SRovj\" id=\"SRovj\"><strong><span data-lake-id=\"u07255180\" id=\"u07255180\">1）Array.prototype.slice</span></strong></h6><ul list=\"u71a1f27b\"><li fid=\"u8775f6be\" data-lake-id=\"7ecbf2f2b1833c15625d258e06f339fb\" id=\"7ecbf2f2b1833c15625d258e06f339fb\"><code data-lake-id=\"u7a1f7e28\" id=\"u7a1f7e28\"><span data-lake-id=\"ua667646e\" id=\"ua667646e\">slice()</span></code><span data-lake-id=\"u97d3a191\" id=\"u97d3a191\">方法是JavaScript数组的一个方法，这个方法可以从已有数组中返回选定的元素：用法：</span><code data-lake-id=\"uc14df16d\" id=\"uc14df16d\"><span data-lake-id=\"u871b3259\" id=\"u871b3259\">array.slice(start, end)</span></code><span data-lake-id=\"u904bbf4f\" id=\"u904bbf4f\">，该方法不会改变原始数组。</span></li><li fid=\"u8775f6be\" data-lake-id=\"6b4fa9696a5421d6c2a6500ab5211be8\" id=\"6b4fa9696a5421d6c2a6500ab5211be8\"><span data-lake-id=\"u0084204d\" id=\"u0084204d\">该方法有两个参数，两个参数都可选，如果两个参数都不写，就可以实现一个数组的浅拷贝。</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C2%2C3%2C4%5D%3B%5Cnconsole.log(arr.slice())%3B%20%2F%2F%20%5B1%2C2%2C3%2C4%5D%5Cnconsole.log(arr.slice()%20%3D%3D%3D%20arr)%3B%20%2F%2Ffalse%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22e9gkq%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h6 data-lake-id=\"6Idl1\" id=\"6Idl1\"><strong><span data-lake-id=\"ude1d6c41\" id=\"ude1d6c41\">2）Array.prototype.concat</span></strong></h6><ul list=\"ubb035ae2\"><li fid=\"ubb354874\" data-lake-id=\"e0ac439946c388e0bd8e29682a60fe08\" id=\"e0ac439946c388e0bd8e29682a60fe08\"><code data-lake-id=\"ua5fbd595\" id=\"ua5fbd595\"><span data-lake-id=\"u7547247a\" id=\"u7547247a\">concat()</span></code><span data-lake-id=\"udbf01270\" id=\"udbf01270\"> 方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。</span></li><li fid=\"ubb354874\" data-lake-id=\"42d1580a754a57200be7799f15e6db41\" id=\"42d1580a754a57200be7799f15e6db41\"><span data-lake-id=\"u770172e6\" id=\"u770172e6\">该方法有两个参数，两个参数都可选，如果两个参数都不写，就可以实现一个数组的浅拷贝。</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C2%2C3%2C4%5D%3B%5Cnconsole.log(arr.concat())%3B%20%2F%2F%20%5B1%2C2%2C3%2C4%5D%5Cnconsole.log(arr.concat()%20%3D%3D%3D%20arr)%3B%20%2F%2Ffalse%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ipna8%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"7Xi1l\" id=\"7Xi1l\"><span data-lake-id=\"u1d64fee2\" id=\"u1d64fee2\">（4）手写实现浅拷贝</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E6%B5%85%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%AE%9E%E7%8E%B0%3B%5Cn%5Cnfunction%20shallowCopy(object)%20%7B%5Cn%20%20%2F%2F%20%E5%8F%AA%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%5Cn%20%20if%20(!object%20%7C%7C%20typeof%20object%20!%3D%3D%20%5C%22object%5C%22)%20return%3B%5Cn%5Cn%20%20%2F%2F%20%E6%A0%B9%E6%8D%AE%20object%20%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD%E6%98%AF%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E8%BF%98%E6%98%AF%E5%AF%B9%E8%B1%A1%5Cn%20%20let%20newObject%20%3D%20Array.isArray(object)%20%3F%20%5B%5D%20%3A%20%7B%7D%3B%5Cn%5Cn%20%20%2F%2F%20%E9%81%8D%E5%8E%86%20object%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%88%A4%E6%96%AD%E6%98%AF%20object%20%E7%9A%84%E5%B1%9E%E6%80%A7%E6%89%8D%E6%8B%B7%E8%B4%9D%5Cn%20%20for%20(let%20key%20in%20object)%20%7B%5Cn%20%20%20%20if%20(object.hasOwnProperty(key))%20%7B%5Cn%20%20%20%20%20%20newObject%5Bkey%5D%20%3D%20object%5Bkey%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%5Cn%20%20return%20newObject%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22wCMlQ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"sjJzm\" id=\"sjJzm\"><span data-lake-id=\"u47296bc2\" id=\"u47296bc2\">18. 实现深拷贝</span></h3><ul list=\"u3c2d7ae7\"><li fid=\"u3d2e1539\" data-lake-id=\"uc522aa95\" id=\"uc522aa95\"><strong><span data-lake-id=\"ubb6544c4\" id=\"ubb6544c4\">浅拷贝：</span></strong><span data-lake-id=\"ue48e5b8f\" id=\"ue48e5b8f\">浅拷贝指的是将一个对象的属性值复制到另一个对象，如果有的属性的值为引用类型的话，那么会将这个引用的地址复制给对象，因此两个对象会有同一个引用类型的引用。浅拷贝可以使用  Object.assign 和展开运算符来实现。</span></li><li fid=\"u3d2e1539\" data-lake-id=\"u7b8488ca\" id=\"u7b8488ca\"><strong><span data-lake-id=\"u727aac08\" id=\"u727aac08\">深拷贝：</span></strong><span data-lake-id=\"u6be01b00\" id=\"u6be01b00\">深拷贝相对浅拷贝而言，如果遇到属性值为引用类型的时候，它新建一个引用类型并将对应的值复制给它，因此对象获得的一个新的引用类型而不是一个原有类型的引用。深拷贝对于一些对象可以使用 JSON 的两个函数来实现，但是由于 JSON 的对象格式比 js 的对象格式更加严格，所以如果属性值里边出现函数或者 Symbol 类型的值时，会转换失败</span></li></ul><p data-lake-id=\"ucd92dbe8\" id=\"ucd92dbe8\"><br></p><h4 data-lake-id=\"DpHc0\" id=\"DpHc0\"><span data-lake-id=\"u7f50ce9b\" id=\"u7f50ce9b\">（1）JSON.stringify()</span></h4><ul list=\"u4b827aad\"><li fid=\"ue243e234\" data-lake-id=\"1348754895a53ecbb65396a8507cb897\" id=\"1348754895a53ecbb65396a8507cb897\"><code data-lake-id=\"uc27c715d\" id=\"uc27c715d\"><span data-lake-id=\"u6c22fcc5\" id=\"u6c22fcc5\">JSON.parse(JSON.stringify(obj))</span></code><span data-lake-id=\"ud88cd4d8\" id=\"ud88cd4d8\">是目前比较常用的深拷贝方法之一，它的原理就是利用</span><code data-lake-id=\"ue6082f91\" id=\"ue6082f91\"><span data-lake-id=\"u7aa0fd4e\" id=\"u7aa0fd4e\">JSON.stringify</span></code><span data-lake-id=\"u7a4441c7\" id=\"u7a4441c7\"> 将</span><code data-lake-id=\"ueb17e0cc\" id=\"ueb17e0cc\"><span data-lake-id=\"ua380c402\" id=\"ua380c402\">js</span></code><span data-lake-id=\"u5f0a291d\" id=\"u5f0a291d\">对象序列化（JSON字符串），再使用</span><code data-lake-id=\"u0869309e\" id=\"u0869309e\"><span data-lake-id=\"u31271e35\" id=\"u31271e35\">JSON.parse</span></code><span data-lake-id=\"u30151251\" id=\"u30151251\">来反序列化(还原)</span><code data-lake-id=\"ueed040a1\" id=\"ueed040a1\"><span data-lake-id=\"u7ac67514\" id=\"u7ac67514\">js</span></code><span data-lake-id=\"u76372568\" id=\"u76372568\">对象。</span></li><li fid=\"ue243e234\" data-lake-id=\"826a034ce14e8e6dc50d3bd39d803c95\" id=\"826a034ce14e8e6dc50d3bd39d803c95\"><span data-lake-id=\"uaa4f70e2\" id=\"uaa4f70e2\">这个方法可以简单粗暴的实现深拷贝，但是还存在问题，拷贝的对象中如果有函数，undefined，symbol，当使用过</span><code data-lake-id=\"ucf82cc35\" id=\"ucf82cc35\"><span data-lake-id=\"u87b23e61\" id=\"u87b23e61\">JSON.stringify()</span></code><span data-lake-id=\"u3281c03d\" id=\"u3281c03d\">进行处理之后，都会消失。</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20obj1%20%3D%20%7B%20%20a%3A%200%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20b%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20c%3A%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%5Cnlet%20obj2%20%3D%20JSON.parse(JSON.stringify(obj1))%3B%5Cnobj1.a%20%3D%201%3B%5Cnobj1.b.c%20%3D%201%3B%5Cnconsole.log(obj1)%3B%20%2F%2F%20%7Ba%3A%201%2C%20b%3A%20%7Bc%3A%201%7D%7D%5Cnconsole.log(obj2)%3B%20%2F%2F%20%7Ba%3A%200%2C%20b%3A%20%7Bc%3A%200%7D%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Tjkza%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"6WmjD\" id=\"6WmjD\"><span data-lake-id=\"u50ebbf75\" id=\"u50ebbf75\">（2）函数库lodash的_.cloneDeep方法</span></h4><p data-lake-id=\"5737be0d6be85ce42d9af17c658fde1f\" id=\"5737be0d6be85ce42d9af17c658fde1f\"><span data-lake-id=\"uf11f4423\" id=\"uf11f4423\">该函数库也有提供_.cloneDeep用来做 Deep Copy</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20_%20%3D%20require('lodash')%3B%5Cnvar%20obj1%20%3D%20%7B%5Cn%20%20%20%20a%3A%201%2C%5Cn%20%20%20%20b%3A%20%7B%20f%3A%20%7B%20g%3A%201%20%7D%20%7D%2C%5Cn%20%20%20%20c%3A%20%5B1%2C%202%2C%203%5D%5Cn%7D%3B%5Cnvar%20obj2%20%3D%20_.cloneDeep(obj1)%3B%5Cnconsole.log(obj1.b.f%20%3D%3D%3D%20obj2.b.f)%3B%2F%2F%20false%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22D8EmW%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"sGAsq\" id=\"sGAsq\"><span data-lake-id=\"u1af17ff0\" id=\"u1af17ff0\">（3）手写实现深拷贝函数</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E6%B7%B1%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%AE%9E%E7%8E%B0%5Cnfunction%20deepCopy(object)%20%7B%5Cn%20%20if%20(!object%20%7C%7C%20typeof%20object%20!%3D%3D%20%5C%22object%5C%22)%20return%3B%5Cn%5Cn%20%20let%20newObject%20%3D%20Array.isArray(object)%20%3F%20%5B%5D%20%3A%20%7B%7D%3B%5Cn%5Cn%20%20for%20(let%20key%20in%20object)%20%7B%5Cn%20%20%20%20if%20(object.hasOwnProperty(key))%20%7B%5Cn%20%20%20%20%20%20newObject%5Bkey%5D%20%3D%5Cn%20%20%20%20%20%20%20%20typeof%20object%5Bkey%5D%20%3D%3D%3D%20%5C%22object%5C%22%20%3F%20deepCopy(object%5Bkey%5D)%20%3A%20object%5Bkey%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%5Cn%20%20return%20newObject%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22MxJL6%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"RIOBq\" id=\"RIOBq\"><span data-lake-id=\"u8b332cac\" id=\"u8b332cac\">19. 实现</span><span data-lake-id=\"u02e5678b\" id=\"u02e5678b\" style=\"color: rgb(79, 79, 79)\">sleep函数（使用</span><span data-lake-id=\"u8a5f0190\" id=\"u8a5f0190\">Promise封装setTimeout</span><span data-lake-id=\"uec90f4ce\" id=\"uec90f4ce\" style=\"color: rgb(79, 79, 79)\">）</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22function%20timeout(delay)%20%7B%5Cn%20%20return%20new%20Promise(resolve%20%3D%3E%20%7B%5Cn%20%20%20%20setTimeout(resolve%2C%20delay)%5Cn%20%20%7D)%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22OWkbU%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"pKjIs\" id=\"pKjIs\"><span data-lake-id=\"ub7297413\" id=\"ub7297413\">20. 实现</span><span data-lake-id=\"u7af72303\" id=\"u7af72303\" style=\"color: rgb(51, 51, 51)\">Object.assign</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Object.myAssign%20%3D%20function(target%2C%20...source)%20%7B%5Cn%20%20%20%20if%20(target%20%3D%3D%20null)%20%7B%5Cn%20%20%20%20%20%20%20%20throw%20new%20TypeError('Cannot%20convert%20undefined%20or%20null%20to%20object')%5Cn%20%20%20%20%7D%5Cn%20%20%20%20let%20ret%20%3D%20Object(target)%20%5Cn%20%20%20%20source.forEach(function(obj)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(obj%20!%3D%20null)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20for%20(let%20key%20in%20obj)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(obj.hasOwnProperty(key))%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ret%5Bkey%5D%20%3D%20obj%5Bkey%5D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20return%20ret%5Cn%7D%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ZLgPJ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ud13b7deb\" id=\"ud13b7deb\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F1500604%2F1673895436721-4b9209b1-8554-41f4-a815-af7bf44859bb.png%22%2C%22taskId%22%3A%22u8a41b725-60be-45fb-a6c8-152ee2c6950%22%2C%22clientId%22%3A%22u6b39cc54-f334-4%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22%E5%85%AC%E4%BC%97%E5%8F%B7.png%22%2C%22size%22%3A96968%2C%22from%22%3A%22ui%22%2C%22originWidth%22%3A900%2C%22originHeight%22%3A500%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22shadow%22%2C%22search%22%3A%22%E5%89%8D%E7%AB%AF%E6%96%B0%E9%97%BB%20%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%BA%BA%20%E5%89%8D%E7%AB%AF%E5%85%85%E7%94%B5%E5%AE%9D%20%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%20%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E5%85%B3%E6%B3%A8%E5%85%AC%E4%BC%97%E5%8F%B7%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A123.38725%2C%22y%22%3A112.777725%2C%22width%22%3A336.99663%2C%22height%22%3A86.69984499999998%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E6%96%B0%E9%97%BB%22%7D%2C%7B%22x%22%3A129.7904%2C%22y%22%3A197.01118%2C%22width%22%3A405.65217000000007%2C%22height%22%3A106.74355%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%BA%BA%22%7D%2C%7B%22x%22%3A640.70355%2C%22y%22%3A235.86761%2C%22width%22%3A36.184150000000045%2C%22height%22%3A7.758409999999998%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E5%85%85%E7%94%B5%E5%AE%9D%22%7D%2C%7B%22x%22%3A156.7012%2C%22y%22%3A334.17084%2C%22width%22%3A305.91913%2C%22height%22%3A26.283810000000017%2C%22text%22%3A%22%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%22%7D%2C%7B%22x%22%3A541.58527%2C%22y%22%3A363.85507%2C%22width%22%3A235.1079699999999%2C%22height%22%3A24.23885999999999%2C%22text%22%3A%22%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E5%85%B3%E6%B3%A8%E5%85%AC%E4%BC%97%E5%8F%B7%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%2370ad8e%22%2C%22id%22%3A%22u51b7476f%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h2 data-lake-id=\"FA4xe\" id=\"FA4xe\"><span data-lake-id=\"u09ac4aa6\" id=\"u09ac4aa6\">二、数据处理</span></h2><h3 data-lake-id=\"xzbd0\" id=\"xzbd0\"><span data-lake-id=\"u98873ba9\" id=\"u98873ba9\">1. 实现日期格式化函数</span></h3><p data-lake-id=\"93ff257ed3a5800111118d39d006826f\" id=\"93ff257ed3a5800111118d39d006826f\"><span data-lake-id=\"ufbf8eeaf\" id=\"ufbf8eeaf\">输入：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22dateFormat(new%20Date('2020-12-01')%2C%20'yyyy%2FMM%2Fdd')%20%2F%2F%202020%2F12%2F01%5CndateFormat(new%20Date('2020-04-01')%2C%20'yyyy%2FMM%2Fdd')%20%2F%2F%202020%2F04%2F01%5CndateFormat(new%20Date('2020-04-01')%2C%20'yyyy%E5%B9%B4MM%E6%9C%88dd%E6%97%A5')%20%2F%2F%202020%E5%B9%B404%E6%9C%8801%E6%97%A5%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22g0a9O%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20dateFormat%20%3D%20(dateInput%2C%20format)%3D%3E%7B%5Cn%20%20%20%20var%20day%20%3D%20dateInput.getDate()%20%5Cn%20%20%20%20var%20month%20%3D%20dateInput.getMonth()%20%2B%201%20%20%5Cn%20%20%20%20var%20year%20%3D%20dateInput.getFullYear()%20%20%20%5Cn%20%20%20%20format%20%3D%20format.replace(%2Fyyyy%2F%2C%20year)%5Cn%20%20%20%20format%20%3D%20format.replace(%2FMM%2F%2Cmonth)%5Cn%20%20%20%20format%20%3D%20format.replace(%2Fdd%2F%2Cday)%5Cn%20%20%20%20return%20format%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22f5LVm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"RFo3G\" id=\"RFo3G\"><span data-lake-id=\"u27edf0e4\" id=\"u27edf0e4\">2. 交换a,b的值，不能用临时变量</span></h3><p data-lake-id=\"e899ae4c66be689c2142f5ee45f6703c\" id=\"e899ae4c66be689c2142f5ee45f6703c\"><span data-lake-id=\"u3c3af426\" id=\"u3c3af426\">巧妙的利用两个数的和、差：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22a%20%3D%20a%20%2B%20b%5Cnb%20%3D%20a%20-%20b%5Cna%20%3D%20a%20-%20b%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22YNCaL%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"JVw1G\" id=\"JVw1G\"><span data-lake-id=\"u8e7ba0ec\" id=\"u8e7ba0ec\">3. 实现数组的乱序输出</span></h3><p data-lake-id=\"ca367a3f20ea2eb13501f4d1330896b9\" id=\"ca367a3f20ea2eb13501f4d1330896b9\"><span data-lake-id=\"u6fdb7e90\" id=\"u6fdb7e90\">主要的实现思路就是：</span></p><ul list=\"uea13d599\"><li fid=\"u21f41eed\" data-lake-id=\"5ceba6caf0d495ce1b883a4f31feecff\" id=\"5ceba6caf0d495ce1b883a4f31feecff\"><span data-lake-id=\"u61989487\" id=\"u61989487\">取出数组的第一个元素，随机产生一个索引值，将该第一个元素和这个索引对应的元素进行交换。</span></li><li fid=\"u21f41eed\" data-lake-id=\"80a99182216427b80de567fff67f4345\" id=\"80a99182216427b80de567fff67f4345\"><span data-lake-id=\"u3f2dcf7e\" id=\"u3f2dcf7e\">第二次取出数据数组第二个元素，随机产生一个除了索引为1的之外的索引值，并将第二个元素与该索引值对应的元素进行交换</span></li><li fid=\"u21f41eed\" data-lake-id=\"9cce66074d6c291b31034b369a9e6dd0\" id=\"9cce66074d6c291b31034b369a9e6dd0\"><span data-lake-id=\"ua726e972\" id=\"ua726e972\">按照上面的规律执行，直到遍历完成</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20arr%20%3D%20%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%2C10%5D%3B%5Cnfor%20(var%20i%20%3D%200%3B%20i%20%3C%20arr.length%3B%20i%2B%2B)%20%7B%5Cn%20%20const%20randomIndex%20%3D%20Math.round(Math.random()%20*%20(arr.length%20-%201%20-%20i))%20%2B%20i%3B%5Cn%20%20%5Barr%5Bi%5D%2C%20arr%5BrandomIndex%5D%5D%20%3D%20%5Barr%5BrandomIndex%5D%2C%20arr%5Bi%5D%5D%3B%5Cn%7D%5Cnconsole.log(arr)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22g6crD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"e2379bc81ab33e4d47c56c5c6a8cb5a4\" id=\"e2379bc81ab33e4d47c56c5c6a8cb5a4\"><span data-lake-id=\"ufc6ceccf\" id=\"ufc6ceccf\">还有一方法就是倒序遍历：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20arr%20%3D%20%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%2C10%5D%3B%5Cnlet%20length%20%3D%20arr.length%2C%5Cn%20%20%20%20randomIndex%2C%5Cn%20%20%20%20temp%3B%5Cn%20%20while%20(length)%20%7B%5Cn%20%20%20%20randomIndex%20%3D%20Math.floor(Math.random()%20*%20length--)%3B%5Cn%20%20%20%20temp%20%3D%20arr%5Blength%5D%3B%5Cn%20%20%20%20arr%5Blength%5D%20%3D%20arr%5BrandomIndex%5D%3B%5Cn%20%20%20%20arr%5BrandomIndex%5D%20%3D%20temp%3B%5Cn%20%20%7D%5Cnconsole.log(arr)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Bm3tW%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"daG39\" id=\"daG39\"><span data-lake-id=\"ucdcf90fe\" id=\"ucdcf90fe\">4. 实现数组元素求和</span></h3><ul list=\"u046a1580\"><li fid=\"u1ef7c46c\" data-lake-id=\"8266fc77ce7a650ad81e4b320a3f03d2\" id=\"8266fc77ce7a650ad81e4b320a3f03d2\"><span data-lake-id=\"u067813d1\" id=\"u067813d1\">arr=[1,2,3,4,5,6,7,8,9,10]，求和</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%3D%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%2C10%5D%5Cnlet%20sum%20%3D%20arr.reduce(%20(total%2Ci)%20%3D%3E%20total%20%2B%3D%20i%2C0)%3B%5Cnconsole.log(sum)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%224eenB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u9ec5975d\"><li fid=\"ud02a3210\" data-lake-id=\"565c6c8cff6ec10519f0cc5c991ece44\" id=\"565c6c8cff6ec10519f0cc5c991ece44\"><span data-lake-id=\"u1e36f98f\" id=\"u1e36f98f\">arr=[1,2,3,[[4,5],6],7,8,9]，求和</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20%3D%20arr%3D%5B1%2C2%2C3%2C%5B%5B4%2C5%5D%2C6%5D%2C7%2C8%2C9%5D%5Cnlet%20arr%3D%20arr.toString().split('%2C').reduce(%20(total%2Ci)%20%3D%3E%20total%20%2B%3D%20Number(i)%2C0)%3B%5Cnconsole.log(arr)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22wlLRe%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"50c71bdce3df7dc5ba5d8c694e72cc2d\" id=\"50c71bdce3df7dc5ba5d8c694e72cc2d\"><span data-lake-id=\"u296d9eb6\" id=\"u296d9eb6\">递归实现：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%202%2C%203%2C%204%2C%205%2C%206%5D%20%5Cn%5Cnfunction%20add(arr)%20%7B%5Cn%20%20%20%20if%20(arr.length%20%3D%3D%201)%20return%20arr%5B0%5D%20%5Cn%20%20%20%20return%20arr%5B0%5D%20%2B%20add(arr.slice(1))%20%5Cn%7D%5Cnconsole.log(add(arr))%20%2F%2F%2021%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%225gQX6%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"uvvGJ\" id=\"uvvGJ\"><span data-lake-id=\"ue59873be\" id=\"ue59873be\">5. 实现数组的扁平化</span></h3><p data-lake-id=\"e075f7f2dbb4d2216f799a284d953bae\" id=\"e075f7f2dbb4d2216f799a284d953bae\"><strong><span data-lake-id=\"ubf859dc5\" id=\"ubf859dc5\">（1）递归实现</span></strong></p><p data-lake-id=\"5753ddbd2a714c35a6d2a4fcc79f16a3\" id=\"5753ddbd2a714c35a6d2a4fcc79f16a3\" style=\"text-align: justify\"><span data-lake-id=\"ue369d895\" id=\"ue369d895\">普通的递归思路很容易理解，就是通过循环递归的方式，一项一项地去遍历，如果每一项还是一个数组，那么就继续往下遍历，利用递归程序的方法，来实现数组的每一项的连接：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%20%5B2%2C%20%5B3%2C%204%2C%205%5D%5D%5D%3B%5Cnfunction%20flatten(arr)%20%7B%5Cn%20%20let%20result%20%3D%20%5B%5D%3B%5Cn%5Cn%20%20for(let%20i%20%3D%200%3B%20i%20%3C%20arr.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20if(Array.isArray(arr%5Bi%5D))%20%7B%5Cn%20%20%20%20%20%20result%20%3D%20result.concat(flatten(arr%5Bi%5D))%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20result.push(arr%5Bi%5D)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20result%3B%5Cn%7D%5Cnflatten(arr)%3B%20%20%2F%2F%20%20%5B1%2C%202%2C%203%2C%204%EF%BC%8C5%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22CXiiR%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"f5cd0be7e3af423a63cc85d80238ea8d\" id=\"f5cd0be7e3af423a63cc85d80238ea8d\"><strong><span data-lake-id=\"uf20e2e65\" id=\"uf20e2e65\">（2）reduce 函数迭代</span></strong></p><p data-lake-id=\"2fba29a56814e8676af9cde720f9bb2c\" id=\"2fba29a56814e8676af9cde720f9bb2c\" style=\"text-align: justify\"><span data-lake-id=\"u62b621b4\" id=\"u62b621b4\">从上面普通的递归函数中可以看出，其实就是对数组的每一项进行处理，那么其实也可以用reduce 来实现数组的拼接，从而简化第一种方法的代码，改造后的代码如下所示：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%20%5B2%2C%20%5B3%2C%204%5D%5D%5D%3B%5Cnfunction%20flatten(arr)%20%7B%5Cn%20%20%20%20return%20arr.reduce(function(prev%2C%20next)%7B%5Cn%20%20%20%20%20%20%20%20return%20prev.concat(Array.isArray(next)%20%3F%20flatten(next)%20%3A%20next)%5Cn%20%20%20%20%7D%2C%20%5B%5D)%5Cn%7D%5Cnconsole.log(flatten(arr))%3B%2F%2F%20%20%5B1%2C%202%2C%203%2C%204%EF%BC%8C5%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22amHLL%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"526343bc73d272b5bdcae17c3244b36b\" id=\"526343bc73d272b5bdcae17c3244b36b\" style=\"text-align: justify\"><strong><span data-lake-id=\"u12c3f6e8\" id=\"u12c3f6e8\">（3）扩展运算符实现</span></strong></p><p data-lake-id=\"21380a613273192b588ffdf2e6c164c8\" id=\"21380a613273192b588ffdf2e6c164c8\" style=\"text-align: justify\"><span data-lake-id=\"u19be3dc8\" id=\"u19be3dc8\">这个方法的实现，采用了扩展运算符和 some 的方法，两者共同使用，达到数组扁平化的目的：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%20%5B2%2C%20%5B3%2C%204%5D%5D%5D%3B%5Cnfunction%20flatten(arr)%20%7B%5Cn%20%20%20%20while%20(arr.some(item%20%3D%3E%20Array.isArray(item)))%20%7B%5Cn%20%20%20%20%20%20%20%20arr%20%3D%20%5B%5D.concat(...arr)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20arr%3B%5Cn%7D%5Cnconsole.log(flatten(arr))%3B%20%2F%2F%20%20%5B1%2C%202%2C%203%2C%204%EF%BC%8C5%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22TB9eB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"7250342f2d72e15770809f2198f21ab5\" id=\"7250342f2d72e15770809f2198f21ab5\" style=\"text-align: justify\"><strong><span data-lake-id=\"uf8784071\" id=\"uf8784071\">（4）split 和 toString </span></strong></p><p data-lake-id=\"bda79e516afcb890076ea58abaa9d74a\" id=\"bda79e516afcb890076ea58abaa9d74a\" style=\"text-align: justify\"><span data-lake-id=\"uec57fffe\" id=\"uec57fffe\">可以通过 split 和 toString 两个方法来共同实现数组扁平化，由于数组会默认带一个 toString 的方法，所以可以把数组直接转换成逗号分隔的字符串，然后再用 split 方法把字符串重新转换为数组，如下面的代码所示：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%20%5B2%2C%20%5B3%2C%204%5D%5D%5D%3B%5Cnfunction%20flatten(arr)%20%7B%5Cn%20%20%20%20return%20arr.toString().split('%2C')%3B%5Cn%7D%5Cnconsole.log(flatten(arr))%3B%20%2F%2F%20%20%5B1%2C%202%2C%203%2C%204%EF%BC%8C5%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22YBMDh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"b5c17269f885f8342722094af1367d06\" id=\"b5c17269f885f8342722094af1367d06\" style=\"text-align: justify\"><span data-lake-id=\"u3e69dd3c\" id=\"u3e69dd3c\">通过这两个方法可以将多维数组直接转换成逗号连接的字符串，然后再重新分隔成数组。</span></p><p data-lake-id=\"4d07b670a90023305fa6e11dbd85f203\" id=\"4d07b670a90023305fa6e11dbd85f203\"><strong><span data-lake-id=\"u60416bfd\" id=\"u60416bfd\" style=\"color: #262626; background-color: transparent\">（5）</span></strong><strong><span data-lake-id=\"ua1032158\" id=\"ua1032158\" style=\"color: #262626; background-color: transparent\">ES6 中的 flat</span></strong></p><p data-lake-id=\"8eb47e48b4bf261dcfb3a4252a5f1548\" id=\"8eb47e48b4bf261dcfb3a4252a5f1548\" style=\"text-align: justify\"><span data-lake-id=\"u60183e15\" id=\"u60183e15\">我们还可以直接调用 ES6 中的 flat 方法来实现数组扁平化。flat 方法的语法：</span><code data-lake-id=\"u6216c52c\" id=\"u6216c52c\"><span data-lake-id=\"u6a1f0fcf\" id=\"u6a1f0fcf\">arr.flat([depth])</span></code></p><p data-lake-id=\"e4ef0c801f5242cc0ae9345abdb37457\" id=\"e4ef0c801f5242cc0ae9345abdb37457\" style=\"text-align: justify\"><br></p><p data-lake-id=\"7f1f636683bd35e3350ab73f6a78078c\" id=\"7f1f636683bd35e3350ab73f6a78078c\" style=\"text-align: justify\"><span data-lake-id=\"u2e7deaf8\" id=\"u2e7deaf8\">其中 depth 是 flat 的参数，depth 是可以传递数组的展开深度（默认不填、数值是 1），即展开一层数组。如果层数不确定，参数可以传进 Infinity，代表不论多少层都要展开：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%20%5B2%2C%20%5B3%2C%204%5D%5D%5D%3B%5Cnfunction%20flatten(arr)%20%7B%5Cn%20%20return%20arr.flat(Infinity)%3B%5Cn%7D%5Cnconsole.log(flatten(arr))%3B%20%2F%2F%20%20%5B1%2C%202%2C%203%2C%204%EF%BC%8C5%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22siiJJ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"44fea0031f28853caa42467918270d09\" id=\"44fea0031f28853caa42467918270d09\" style=\"text-align: justify\"><span data-lake-id=\"ub9882df7\" id=\"ub9882df7\">可以看出，一个嵌套了两层的数组，通过将 flat 方法的参数设置为 Infinity，达到了我们预期的效果。其实同样也可以设置成 2，也能实现这样的效果。在编程过程中，如果数组的嵌套层数不确定，最好直接使用 Infinity，可以达到扁平化。</span></p><p data-lake-id=\"115d3af539840be5e5e8ee1cfa386fda\" id=\"115d3af539840be5e5e8ee1cfa386fda\"><strong><span data-lake-id=\"u5d5a7251\" id=\"u5d5a7251\">（6）正则和 JSON 方法</span></strong></p><p data-lake-id=\"711563fe06cee1fb499d6f689b089db8\" id=\"711563fe06cee1fb499d6f689b089db8\" style=\"text-align: justify\"><span data-lake-id=\"u969572bf\" id=\"u969572bf\">在第4种方法中已经使用 toString 方法，其中仍然采用了将 JSON.stringify 的方法先转换为字符串，然后通过正则表达式过滤掉字符串中的数组的方括号，最后再利用 JSON.parse 把它转换成数组：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C%20%5B2%2C%20%5B3%2C%20%5B4%2C%205%5D%5D%5D%2C%206%5D%3B%5Cnfunction%20flatten(arr)%20%7B%5Cn%20%20let%20str%20%3D%20JSON.stringify(arr)%3B%5Cn%20%20str%20%3D%20str.replace(%2F(%5C%5C%5B%7C%5C%5C%5D)%2Fg%2C%20'')%3B%5Cn%20%20str%20%3D%20'%5B'%20%2B%20str%20%2B%20'%5D'%3B%5Cn%20%20return%20JSON.parse(str)%3B%20%5Cn%7D%5Cnconsole.log(flatten(arr))%3B%20%2F%2F%20%20%5B1%2C%202%2C%203%2C%204%EF%BC%8C5%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22JTcyu%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"o0q3b\" id=\"o0q3b\"><span data-lake-id=\"u3ef9ea10\" id=\"u3ef9ea10\">6. 实现数组去重</span></h3><p data-lake-id=\"a3143e94c7225adf46bd4ae7a03d7534\" id=\"a3143e94c7225adf46bd4ae7a03d7534\"><span data-lake-id=\"uacd32300\" id=\"uacd32300\" class=\"lake-fontsize-12\" style=\"color: #333333\">给定某无序数组，要求去除数组中的重复数字并且返回新的无重复数组。</span></p><p data-lake-id=\"aecc682bc4720f789eb7541342078473\" id=\"aecc682bc4720f789eb7541342078473\"><br></p><p data-lake-id=\"1d9f56ec063df61ea6ea933a2e442247\" id=\"1d9f56ec063df61ea6ea933a2e442247\"><span data-lake-id=\"u39634edc\" id=\"u39634edc\">ES6方法（使用数据结构集合）：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20array%20%3D%20%5B1%2C%202%2C%203%2C%205%2C%201%2C%205%2C%209%2C%201%2C%202%2C%208%5D%3B%5Cn%5CnArray.from(new%20Set(array))%3B%20%2F%2F%20%5B1%2C%202%2C%203%2C%205%2C%209%2C%208%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%229Z6AJ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"42584b346f30c5be42644615b31fd653\" id=\"42584b346f30c5be42644615b31fd653\"><span data-lake-id=\"ub0ba3cca\" id=\"ub0ba3cca\">ES5方法：使用map存储不重复的数字</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20array%20%3D%20%5B1%2C%202%2C%203%2C%205%2C%201%2C%205%2C%209%2C%201%2C%202%2C%208%5D%3B%5Cn%5CnuniqueArray(array)%3B%20%2F%2F%20%5B1%2C%202%2C%203%2C%205%2C%209%2C%208%5D%5Cn%5Cnfunction%20uniqueArray(array)%20%7B%5Cn%20%20let%20map%20%3D%20%7B%7D%3B%5Cn%20%20let%20res%20%3D%20%5B%5D%3B%5Cn%20%20for(var%20i%20%3D%200%3B%20i%20%3C%20array.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20if(!map.hasOwnProperty(%5Barray%5Bi%5D%5D))%20%7B%5Cn%20%20%20%20%20%20map%5Barray%5Bi%5D%5D%20%3D%201%3B%5Cn%20%20%20%20%20%20res.push(array%5Bi%5D)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20res%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22SoeSb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"nMP9s\" id=\"nMP9s\"><span data-lake-id=\"u87797b8b\" id=\"u87797b8b\">7. 实现数组的flat方法</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20_flat(arr%2C%20depth)%20%7B%5Cn%20%20if(!Array.isArray(arr)%20%7C%7C%20depth%20%3C%3D%200)%20%7B%5Cn%20%20%20%20return%20arr%3B%5Cn%20%20%7D%5Cn%20%20return%20arr.reduce((prev%2C%20cur)%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(Array.isArray(cur))%20%7B%5Cn%20%20%20%20%20%20return%20prev.concat(_flat(cur%2C%20depth%20-%201))%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20return%20prev.concat(cur)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%20%5B%5D)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22xQxbd%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"0j4Wk\" id=\"0j4Wk\"><span data-lake-id=\"u73f0007c\" id=\"u73f0007c\">8. 实现数组的push方法</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B%5D%3B%5CnArray.prototype.push%20%3D%20function()%20%7B%5Cn%5Ctfor(%20let%20i%20%3D%200%20%3B%20i%20%3C%20arguments.length%20%3B%20i%2B%2B)%7B%5Cn%5Ct%5Ctthis%5Bthis.length%5D%20%3D%20arguments%5Bi%5D%20%3B%5Cn%5Ct%7D%5Cn%5Ctreturn%20this.length%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22KacjL%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"fAKGk\" id=\"fAKGk\"><span data-lake-id=\"udcd75308\" id=\"udcd75308\">9. 实现数组的filter方法</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Array.prototype._filter%20%3D%20function(fn)%20%7B%5Cn%20%20%20%20if%20(typeof%20fn%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20%20%20%20%20throw%20Error('%E5%8F%82%E6%95%B0%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0')%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20const%20res%20%3D%20%5B%5D%3B%5Cn%20%20%20%20for%20(let%20i%20%3D%200%2C%20len%20%3D%20this.length%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20fn(this%5Bi%5D)%20%26%26%20res.push(this%5Bi%5D)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22z6YED%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"Z6CXS\" id=\"Z6CXS\"><span data-lake-id=\"ue94f3722\" id=\"ue94f3722\">10. 实现数组的map方法</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Array.prototype._map%20%3D%20function(fn)%20%7B%5Cn%20%20%20if%20(typeof%20fn%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20%20%20%20%20throw%20Error('%E5%8F%82%E6%95%B0%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0')%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20const%20res%20%3D%20%5B%5D%3B%5Cn%20%20%20%20for%20(let%20i%20%3D%200%2C%20len%20%3D%20this.length%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20res.push(fn(this%5Bi%5D))%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22TtaPh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"0n58Z\" id=\"0n58Z\"><span data-lake-id=\"u00b94fe7\" id=\"u00b94fe7\">11. 实现字符串的repeat方法</span></h3><p data-lake-id=\"aa628cede12db5aa6b42c904b7987357\" id=\"aa628cede12db5aa6b42c904b7987357\"><span data-lake-id=\"u6c07967d\" id=\"u6c07967d\">输入字符串s，以及其重复的次数，输出重复的结果，例如输入abc，2，输出abcabc。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20repeat(s%2C%20n)%20%7B%5Cn%20%20%20%20return%20(new%20Array(n%20%2B%201)).join(s)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22heqC5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"23361e2bb697ba219161a8d132e061a8\" id=\"23361e2bb697ba219161a8d132e061a8\"><span data-lake-id=\"u3ec77579\" id=\"u3ec77579\">递归：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20repeat(s%2C%20n)%20%7B%5Cn%20%20%20%20return%20(n%20%3E%200)%20%3F%20s.concat(repeat(s%2C%20--n))%20%3A%20%5C%22%5C%22%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22TAmur%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"WzfQC\" id=\"WzfQC\"><span data-lake-id=\"ud8a7ca74\" id=\"ud8a7ca74\">12. 实现字符串翻转</span></h3><p data-lake-id=\"1f7972fb2bd682f16fbe4c53d73ba0cd\" id=\"1f7972fb2bd682f16fbe4c53d73ba0cd\"><span data-lake-id=\"ud55cec2d\" id=\"ud55cec2d\">在字符串的原型链上添加一个方法，实现字符串翻转：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22String.prototype._reverse%20%3D%20function(a)%7B%5Cn%20%20%20%20return%20a.split(%5C%22%5C%22).reverse().join(%5C%22%5C%22)%3B%5Cn%7D%5Cnvar%20obj%20%3D%20new%20String()%3B%5Cnvar%20res%20%3D%20obj._reverse%20('hello')%3B%5Cnconsole.log(res)%3B%20%20%20%20%2F%2F%20olleh%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22J4PAR%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"921bbbbcfc659f70435b8764335d974c\" id=\"921bbbbcfc659f70435b8764335d974c\"><span data-lake-id=\"uea0c93fe\" id=\"uea0c93fe\">需要注意的是，必须通过实例化对象之后再去调用定义的方法，不然找不到该方法。</span></p><h3 data-lake-id=\"le1vb\" id=\"le1vb\"><span data-lake-id=\"u1cf89c56\" id=\"u1cf89c56\">13. 将数字每千分位用逗号隔开</span></h3><p data-lake-id=\"u1748cb93\" id=\"u1748cb93\"><strong><span data-lake-id=\"u04a3cfd2\" id=\"u04a3cfd2\">数字有小数版本：</span></strong></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20format%20%3D%20n%20%3D%3E%20%7B%5Cn%20%20%20%20let%20num%20%3D%20n.toString()%20%2F%2F%20%E8%BD%AC%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%5Cn%20%20%20%20let%20decimals%20%3D%20''%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%9C%89%E5%B0%8F%E6%95%B0%5Cn%20%20%20%20num.indexOf('.')%20%3E%20-1%20%3F%20decimals%20%3D%20num.split('.')%5B1%5D%20%3A%20decimals%5Cn%20%20%20%20let%20len%20%3D%20num.length%5Cn%20%20%20%20if%20(len%20%3C%3D%203)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20num%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20let%20temp%20%3D%20''%5Cn%20%20%20%20%20%20%20%20let%20remainder%20%3D%20len%20%25%203%5Cn%20%20%20%20%20%20%20%20decimals%20%3F%20temp%20%3D%20'.'%20%2B%20decimals%20%3A%20temp%5Cn%20%20%20%20%20%20%20%20if%20(remainder%20%3E%200)%20%7B%20%2F%2F%20%E4%B8%8D%E6%98%AF3%E7%9A%84%E6%95%B4%E6%95%B0%E5%80%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20num.slice(0%2C%20remainder)%20%2B%20'%2C'%20%2B%20num.slice(remainder%2C%20len).match(%2F%5C%5Cd%7B3%7D%2Fg).join('%2C')%20%2B%20temp%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%20%2F%2F%20%E6%98%AF3%E7%9A%84%E6%95%B4%E6%95%B0%E5%80%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20num.slice(0%2C%20len).match(%2F%5C%5Cd%7B3%7D%2Fg).join('%2C')%20%2B%20temp%20%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cnformat(12323.33)%20%20%2F%2F%20'12%2C323.33'%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%228uQP5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u41945148\" id=\"u41945148\"><strong><span data-lake-id=\"ua5b9aa26\" id=\"ua5b9aa26\">数字无小数版本：</span></strong></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20format%20%3D%20n%20%3D%3E%20%7B%5Cn%20%20%20%20let%20num%20%3D%20n.toString()%20%5Cn%20%20%20%20let%20len%20%3D%20num.length%5Cn%20%20%20%20if%20(len%20%3C%3D%203)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20num%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20let%20remainder%20%3D%20len%20%25%203%5Cn%20%20%20%20%20%20%20%20if%20(remainder%20%3E%200)%20%7B%20%2F%2F%20%E4%B8%8D%E6%98%AF3%E7%9A%84%E6%95%B4%E6%95%B0%E5%80%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20num.slice(0%2C%20remainder)%20%2B%20'%2C'%20%2B%20num.slice(remainder%2C%20len).match(%2F%5C%5Cd%7B3%7D%2Fg).join('%2C')%20%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%20%2F%2F%20%E6%98%AF3%E7%9A%84%E6%95%B4%E6%95%B0%E5%80%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20num.slice(0%2C%20len).match(%2F%5C%5Cd%7B3%7D%2Fg).join('%2C')%20%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cnformat(1232323)%20%20%2F%2F%20'1%2C232%2C323'%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22SVfYx%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"2Pijz\" id=\"2Pijz\"><span data-lake-id=\"u6b86c6d3\" id=\"u6b86c6d3\">14. 实现非负大整数相加和相乘</span></h3><p data-lake-id=\"487eab4c71eed40834f3dd58ef8ed7ab\" id=\"487eab4c71eed40834f3dd58ef8ed7ab\"><span data-lake-id=\"u1553ce6a\" id=\"u1553ce6a\">JavaScript对数值有范围的限制，限制如下：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Number.MAX_VALUE%20%2F%2F%201.7976931348623157e%2B308%5CnNumber.MAX_SAFE_INTEGER%20%2F%2F%209007199254740991%5CnNumber.MIN_VALUE%20%2F%2F%205e-324%5CnNumber.MIN_SAFE_INTEGER%20%2F%2F%20-9007199254740991%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22EJF2K%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"puFVc\" id=\"puFVc\"><span data-lake-id=\"ua3e01ee6\" id=\"ua3e01ee6\">（1）大数相加</span></h4><p data-lake-id=\"3a459aa8abe251ee5ac5c98add22cbc8\" id=\"3a459aa8abe251ee5ac5c98add22cbc8\"><span data-lake-id=\"u26747cb7\" id=\"u26747cb7\">如果想要对一个超大的整数(</span><code data-lake-id=\"u7824a378\" id=\"u7824a378\"><span data-lake-id=\"u6ecbb27b\" id=\"u6ecbb27b\">&gt; Number.MAX_SAFE_INTEGER</span></code><span data-lake-id=\"ub71c0d4f\" id=\"ub71c0d4f\">)进行加法运算，但是又想输出一般形式，那么使用 + 是无法达到的，一旦数字超过 </span><code data-lake-id=\"ua18577e7\" id=\"ua18577e7\"><span data-lake-id=\"u2c5eda21\" id=\"u2c5eda21\">Number.MAX_SAFE_INTEGER</span></code><span data-lake-id=\"u699238a4\" id=\"u699238a4\"> 数字会被立即转换为科学计数法，并且数字精度相比以前将会有误差。</span></p><p data-lake-id=\"d36e04d272c0e79d316c224f1051616d\" id=\"d36e04d272c0e79d316c224f1051616d\"><br></p><p data-lake-id=\"aff673e2755f2c056b4c867f2edab6a0\" id=\"aff673e2755f2c056b4c867f2edab6a0\"><span data-lake-id=\"ua255dcad\" id=\"ua255dcad\">实现一个算法进行大数的相加：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20sumBigNumber(a%2C%20b)%20%7B%5Cn%20%20let%20res%20%3D%20''%3B%5Cn%20%20let%20temp%20%3D%200%3B%5Cn%20%20%5Cn%20%20a%20%3D%20a.split('')%3B%5Cn%20%20b%20%3D%20b.split('')%3B%5Cn%20%20%5Cn%20%20while%20(a.length%20%7C%7C%20b.length%20%7C%7C%20temp)%20%7B%5Cn%20%20%20%20temp%20%2B%3D%20~~a.pop()%20%2B%20~~b.pop()%3B%5Cn%20%20%20%20res%20%3D%20(temp%20%25%2010)%20%2B%20res%3B%5Cn%20%20%20%20temp%20%20%3D%20temp%20%3E%209%5Cn%20%20%7D%5Cn%20%20return%20res.replace(%2F%5E0%2B%2F%2C%20'')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%229H57j%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"6f23098ae459fa5f2ac244527471c7d8\" id=\"6f23098ae459fa5f2ac244527471c7d8\"><span data-lake-id=\"u235a5370\" id=\"u235a5370\">其主要的思路如下：</span></p><ul list=\"u494d9d81\"><li fid=\"uc06e6eb2\" data-lake-id=\"2147e5d75d248c4cdc775d69365d44eb\" id=\"2147e5d75d248c4cdc775d69365d44eb\"><span data-lake-id=\"u54bffe99\" id=\"u54bffe99\">首先用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化</span></li><li fid=\"uc06e6eb2\" data-lake-id=\"9570cf77745ea42ef333295d26745d27\" id=\"9570cf77745ea42ef333295d26745d27\"><span data-lake-id=\"u5f7717e6\" id=\"u5f7717e6\">初始化res，temp来保存中间的计算结果，并将两个字符串转化为数组，以便进行每一位的加法运算</span></li><li fid=\"uc06e6eb2\" data-lake-id=\"4dcca65170dd18ac978fa11526057a2d\" id=\"4dcca65170dd18ac978fa11526057a2d\"><span data-lake-id=\"ue7aa76c7\" id=\"ue7aa76c7\">将两个数组的对应的位进行相加，两个数相加的结果可能大于10，所以可能要仅为，对10进行取余操作，将结果保存在当前位</span></li><li fid=\"uc06e6eb2\" data-lake-id=\"feeac58d2d668f9f78f7b2c1018da465\" id=\"feeac58d2d668f9f78f7b2c1018da465\"><span data-lake-id=\"u1a1fd44e\" id=\"u1a1fd44e\">判断当前位是否大于9，也就是是否会进位，若是则将temp赋值为true，因为在加法运算中，true会自动隐式转化为1，以便于下一次相加</span></li><li fid=\"uc06e6eb2\" data-lake-id=\"30e6367464d03a2e0ee780663c655dbe\" id=\"30e6367464d03a2e0ee780663c655dbe\"><span data-lake-id=\"u7431087d\" id=\"u7431087d\">重复上述操作，直至计算结束</span></li></ul><h4 data-lake-id=\"iINOr\" id=\"iINOr\"><span data-lake-id=\"ud5250cc2\" id=\"ud5250cc2\">（2）大数相乘</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20multiplyBigNum(num1%2C%20num2)%20%7B%5Cn%20%20%20%20%2F%2F%E5%88%A4%E6%96%AD%E8%BE%93%E5%85%A5%E6%98%AF%E4%B8%8D%E6%98%AF%E6%95%B0%E5%AD%97%5Cn%20%20%20%20if%20(isNaN(num1)%20%7C%7C%20isNaN(num2))%20return%20%5C%22%5C%22%3B%5Cn%20%20%20%20num1%20%3D%20num1%20%2B%20%5C%22%5C%22%5Cn%20%20%20%20num2%20%3D%20num2%20%2B%20%5C%22%5C%22%5Cn%20%20%20%20let%20len1%20%3D%20num1.length%2C%5Cn%20%20%20%20%20%20%20%20len2%20%3D%20num2.length%3B%5Cn%20%20%20%20let%20pos%20%3D%20%5B%5D%3B%5Cn%5Cn%20%20%20%20%2F%2Fj%E6%94%BE%E5%A4%96%E9%9D%A2%EF%BC%8C%E5%85%88%E5%9B%BA%E5%AE%9A%E8%A2%AB%E4%B9%98%E6%95%B0%E7%9A%84%E4%B8%80%E4%BD%8D%EF%BC%8C%E5%88%86%E5%88%AB%E5%8E%BB%E4%B9%98%E4%B9%98%E6%95%B0%E7%9A%84%E6%AF%8F%E4%B8%80%E4%BD%8D%EF%BC%8C%E6%9B%B4%E7%AC%A6%E5%90%88%E7%AB%96%E5%BC%8F%E6%BC%94%E7%AE%97%E6%B3%95%5Cn%20%20%20%20for%20(let%20j%20%3D%20len2%20-%201%3B%20j%20%3E%3D%200%3B%20j--)%20%7B%5Cn%20%20%20%20%20%20%20%20for%20(let%20i%20%3D%20len1%20-%201%3B%20i%20%3E%3D%200%3B%20i--)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E4%B8%A4%E4%B8%AA%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%9B%B8%E4%B9%98%EF%BC%8C%E6%9C%80%E5%A4%9A%E4%BA%A7%E7%94%9F%E4%B8%A4%E4%BD%8D%E6%95%B0%EF%BC%8Cindex1%E4%BB%A3%E8%A1%A8%E5%8D%81%E4%BD%8D%EF%BC%8Cindex2%E4%BB%A3%E8%A1%A8%E4%B8%AA%E4%BD%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20index1%20%3D%20i%20%2B%20j%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20index2%20%3D%20i%20%2B%20j%20%2B%201%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E4%B8%A4%E4%B8%AA%E4%B8%AA%E4%BD%8D%E6%95%B0%E4%B9%98%E7%A7%AF%E5%8A%A0%E4%B8%8A%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E4%B8%AA%E4%BD%8D%E5%B7%B2%E7%B4%AF%E7%A7%AF%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%8C%E4%BC%9A%E4%BA%A7%E7%94%9F%E8%BF%9B%E4%BD%8D%EF%BC%8C%E6%AF%94%E5%A6%8208%20%2B%207%20%3D%2015%EF%BC%8C%E4%BA%A7%E7%94%9F%E4%BA%86%E8%BF%9B%E4%BD%8D1%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20mul%20%3D%20num1%5Bi%5D%20*%20num2%5Bj%5D%20%2B%20(pos%5Bindex2%5D%20%7C%7C%200)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fmul%E5%8C%85%E5%90%AB%E6%96%B0%E8%AE%A1%E7%AE%97%E7%9A%84%E5%8D%81%E4%BD%8D%EF%BC%8C%E5%8A%A0%E4%B8%8A%E5%8E%9F%E6%9C%89%E7%9A%84%E5%8D%81%E4%BD%8D%E5%B0%B1%E6%98%AF%E6%9C%80%E6%96%B0%E7%9A%84%E5%8D%81%E4%BD%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pos%5Bindex1%5D%20%3D%20Math.floor(mul%20%2F%2010)%20%2B%20(pos%5Bindex1%5D%20%7C%7C%200)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fmul%E7%9A%84%E4%B8%AA%E4%BD%8D%E5%B0%B1%E6%98%AF%E6%9C%80%E6%96%B0%E7%9A%84%E4%B8%AA%E4%BD%8D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pos%5Bindex2%5D%20%3D%20mul%20%25%2010%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F%2F%E5%8E%BB%E6%8E%89%E5%89%8D%E7%BD%AE0%5Cn%20%20%20%20let%20result%20%3D%20pos.join(%5C%22%5C%22).replace(%2F%5E0%2B%2F%2C%20%5C%22%5C%22)%3B%5Cn%5Cn%20%20%20%20return%20result%20-%200%20%7C%7C%20'0'%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22hdqL1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"GxWXw\" id=\"GxWXw\"><span data-lake-id=\"u246e20ac\" id=\"u246e20ac\">13. </span><span data-lake-id=\"u6d3d8a31\" id=\"u6d3d8a31\">实现 add(1)(2)(3)</span></h3><p data-lake-id=\"da01e224c7557b9ef5947ae490952c76\" id=\"da01e224c7557b9ef5947ae490952c76\"><span data-lake-id=\"u70d43ec4\" id=\"u70d43ec4\">函数柯里化概念： 柯里化（Currying）是把接受多个参数的函数转变为接受一个单一参数的函数，并且返回接受余下的参数且返回结果的新函数的技术。</span></p><p data-lake-id=\"1efaf065fa04235f51b0885a5d772d1d\" id=\"1efaf065fa04235f51b0885a5d772d1d\"><br></p><p data-lake-id=\"7a531dde42c2a880d2a8e96f5f5db120\" id=\"7a531dde42c2a880d2a8e96f5f5db120\"><span data-lake-id=\"u80b2afed\" id=\"u80b2afed\">1）粗暴版</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20add%20(a)%20%7B%5Cnreturn%20function%20(b)%20%7B%5Cn%20%5Ctreturn%20function%20(c)%20%7B%5Cn%20%20%20%20%20%20return%20a%20%2B%20b%20%2B%20c%3B%5Cn%20%5Ct%7D%5Cn%7D%5Cn%7D%5Cnconsole.log(add(1)(2)(3))%3B%20%2F%2F%206%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%220kJ71%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"8007fe2fb86cb5af6c4aae9701a6264d\" id=\"8007fe2fb86cb5af6c4aae9701a6264d\"><span data-lake-id=\"u92b7cd35\" id=\"u92b7cd35\">2）柯里化解决方案</span></p><ul list=\"uc92f8d62\"><li fid=\"ue1d535d5\" data-lake-id=\"4056e65e9cdfb24dc26c478ca84b2c08\" id=\"4056e65e9cdfb24dc26c478ca84b2c08\"><span data-lake-id=\"uf0920d68\" id=\"uf0920d68\">参数长度固定</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20add%20%3D%20function%20(m)%20%7B%5Cn%20%20var%20temp%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20return%20add(m%20%2B%20n)%3B%5Cn%20%20%7D%5Cn%20%20temp.toString%20%3D%20function%20()%20%7B%5Cn%20%20%20%20return%20m%3B%5Cn%20%20%7D%5Cn%20%20return%20temp%3B%5Cn%7D%3B%5Cnconsole.log(add(3)(4)(5))%3B%20%2F%2F%2012%5Cnconsole.log(add(3)(6)(9)(25))%3B%20%2F%2F%2043%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%221WGgI%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u5d88053c\" id=\"u5d88053c\"><span data-lake-id=\"u4723a915\" id=\"u4723a915\" class=\"lake-fontsize-12\" style=\"color: rgb(77, 77, 77)\">对于</span><span data-lake-id=\"u0aefe559\" id=\"u0aefe559\">add(3)(4)(5)，其执行过程如下：</span></p><ol list=\"ubb97976a\"><li fid=\"ubf4ebd8d\" data-lake-id=\"u1b82b70a\" id=\"u1b82b70a\"><span data-lake-id=\"u0c0ac538\" id=\"u0c0ac538\" class=\"lake-fontsize-12\" style=\"color: rgb(77, 77, 77)\">先执行add(3)，此时m=3，并且返回temp函数；</span></li><li fid=\"ubf4ebd8d\" data-lake-id=\"udb629eca\" id=\"udb629eca\"><span data-lake-id=\"u8bc3f67d\" id=\"u8bc3f67d\" class=\"lake-fontsize-12\" style=\"color: rgb(77, 77, 77)\">执行temp(4)，这个函数内执行add(m+n)，n是此次传进来的数值4，m值还是上一步中的3，所以add(m+n)=add(3+4)=add(7)，此时m=7，并且返回temp函数</span></li><li fid=\"ubf4ebd8d\" data-lake-id=\"u6e373ab9\" id=\"u6e373ab9\"><span data-lake-id=\"u2f743aae\" id=\"u2f743aae\" class=\"lake-fontsize-12\" style=\"color: rgb(77, 77, 77)\">执行temp(5)，这个函数内执行add(m+n)，n是此次传进来的数值5，m值还是上一步中的7，所以add(m+n)=add(7+5)=add(12)，此时m=12，并且返回temp函数</span></li><li fid=\"ubf4ebd8d\" data-lake-id=\"u94533533\" id=\"u94533533\"><span data-lake-id=\"u23f104d2\" id=\"u23f104d2\" class=\"lake-fontsize-12\" style=\"color: rgb(77, 77, 77)\">由于后面没有传入参数，等于返回的temp函数不被执行而是打印，了解JS的朋友都知道对象的toString是修改对象转换字符串的方法，因此代码中temp函数的toString函数return m值，而m值是最后一步执行函数时的值m=12，所以返回值是12。</span></li></ol><p data-lake-id=\"ufd53868e\" id=\"ufd53868e\"><br></p><ul list=\"u268f0aef\"><li fid=\"u4b5fe222\" data-lake-id=\"8925895657bc1a020e8cb863a1f7bdc2\" id=\"8925895657bc1a020e8cb863a1f7bdc2\"><span data-lake-id=\"u35a8bb74\" id=\"u35a8bb74\">参数长度不固定</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20add%20(...args)%20%7B%5Cn%20%20%20%20%2F%2F%E6%B1%82%E5%92%8C%5Cn%20%20%20%20return%20args.reduce((a%2C%20b)%20%3D%3E%20a%20%2B%20b)%5Cn%7D%5Cnfunction%20currying%20(fn)%20%7B%5Cn%20%20%20%20let%20args%20%3D%20%5B%5D%5Cn%20%20%20%20return%20function%20temp%20(...newArgs)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(newArgs.length)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20args%20%3D%20%5B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20...args%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20...newArgs%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%5D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20temp%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20val%20%3D%20fn.apply(this%2C%20args)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20args%20%3D%20%5B%5D%20%2F%2F%E4%BF%9D%E8%AF%81%E5%86%8D%E6%AC%A1%E8%B0%83%E7%94%A8%E6%97%B6%E6%B8%85%E7%A9%BA%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20val%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cnlet%20addCurry%20%3D%20currying(add)%5Cnconsole.log(addCurry(1)(2)(3)(4%2C%205)())%20%20%2F%2F15%5Cnconsole.log(addCurry(1)(2)(3%2C%204%2C%205)())%20%20%2F%2F15%5Cnconsole.log(addCurry(1)(2%2C%203%2C%204%2C%205)())%20%20%2F%2F15%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22XbZVf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"44mXg\" id=\"44mXg\"><span data-lake-id=\"ufa998271\" id=\"ufa998271\">14. 实现类数组转化为数组</span></h3><p data-lake-id=\"c3ceb29bf7758e75ba3c8bee71f838d4\" id=\"c3ceb29bf7758e75ba3c8bee71f838d4\"><span data-lake-id=\"uace0a63c\" id=\"uace0a63c\">类数组转换为数组的方法有这样几种：</span></p><ul list=\"u692f8290\"><li fid=\"u75499d32\" data-lake-id=\"4259978167119c213a9ef10bf005cc14\" id=\"4259978167119c213a9ef10bf005cc14\"><span data-lake-id=\"uc651fe69\" id=\"uc651fe69\">通过 call 调用数组的 slice 方法来实现转换</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Array.prototype.slice.call(arrayLike)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22o5SOY%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u69e8ecc3\"><li fid=\"u93b9fdeb\" data-lake-id=\"754399d4d8a3839c17ad90fdcdd97986\" id=\"754399d4d8a3839c17ad90fdcdd97986\"><span data-lake-id=\"ufdf0edef\" id=\"ufdf0edef\">通过 call 调用数组的 splice 方法来实现转换</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Array.prototype.splice.call(arrayLike%2C%200)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22YMhwC%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u68ce9be7\"><li fid=\"uae7f8b54\" data-lake-id=\"dac23697caf0f656aad9c139f91e76a3\" id=\"dac23697caf0f656aad9c139f91e76a3\"><span data-lake-id=\"uc02756bf\" id=\"uc02756bf\">通过 apply 调用数组的 concat 方法来实现转换</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Array.prototype.concat.apply(%5B%5D%2C%20arrayLike)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22CSd6w%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u5ae47494\"><li fid=\"u5d7b97a6\" data-lake-id=\"eb545af25529686ea35cf2ba51686048\" id=\"eb545af25529686ea35cf2ba51686048\"><span data-lake-id=\"u246979c5\" id=\"u246979c5\">通过 Array.from 方法来实现转换</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22Array.from(arrayLike)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22f2thd%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"vbE8F\" id=\"vbE8F\"><span data-lake-id=\"u941663ca\" id=\"u941663ca\">15. 使用 reduce 求和</span></h3><p data-lake-id=\"ucb43d019\" id=\"ucb43d019\"><span data-lake-id=\"u87fdbb34\" id=\"u87fdbb34\">arr = [1,2,3,4,5,6,7,8,9,10]，求和</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%2C10%5D%5Cnarr.reduce((prev%2C%20cur)%20%3D%3E%20%7B%20return%20prev%20%2B%20cur%20%7D%2C%200)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22TFEtf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u5fe51b2b\" id=\"u5fe51b2b\"><span data-lake-id=\"u7b8f97b8\" id=\"u7b8f97b8\">arr = [1,2,3,[[4,5],6],7,8,9]，求和</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%2C10%5D%5Cnarr.flat(Infinity).reduce((prev%2C%20cur)%20%3D%3E%20%7B%20return%20prev%20%2B%20cur%20%7D%2C%200)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Nhv6T%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u64231925\" id=\"u64231925\"><span data-lake-id=\"u3a21fef4\" id=\"u3a21fef4\">arr = [{a:1, b:3}, {a:2, b:3, c:4}, {a:3}]，求和</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20arr%20%3D%20%5B%7Ba%3A9%2C%20b%3A3%2C%20c%3A4%7D%2C%20%7Ba%3A1%2C%20b%3A3%7D%2C%20%7Ba%3A3%7D%5D%20%5Cn%5Cnarr.reduce((prev%2C%20cur)%20%3D%3E%20%7B%5Cn%20%20%20%20return%20prev%20%2B%20cur%5B%5C%22a%5C%22%5D%3B%5Cn%7D%2C%200)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22joDhE%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"pc09i\" id=\"pc09i\"><span data-lake-id=\"u04995f0b\" id=\"u04995f0b\">16. 将js对象转化为树形结构</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E8%BD%AC%E6%8D%A2%E5%89%8D%EF%BC%9A%5Cnsource%20%3D%20%5B%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20id%3A%201%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pid%3A%200%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'body'%5Cn%20%20%20%20%20%20%20%20%20%20%7D%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20id%3A%202%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pid%3A%201%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'title'%5Cn%20%20%20%20%20%20%20%20%20%20%7D%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20id%3A%203%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pid%3A%202%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'div'%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5D%5Cn%2F%2F%20%E8%BD%AC%E6%8D%A2%E4%B8%BA%3A%20%5Cntree%20%3D%20%5B%7B%5Cn%20%20%20%20%20%20%20%20%20%20id%3A%201%2C%5Cn%20%20%20%20%20%20%20%20%20%20pid%3A%200%2C%5Cn%20%20%20%20%20%20%20%20%20%20name%3A%20'body'%2C%5Cn%20%20%20%20%20%20%20%20%20%20children%3A%20%5B%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20id%3A%202%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20pid%3A%201%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'title'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20children%3A%20%5B%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20id%3A%203%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20pid%3A%201%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20'div'%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5D%5Cn%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22xlxLc%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u9d8b998a\" id=\"u9d8b998a\"><span data-lake-id=\"u960a6c11\" id=\"u960a6c11\">代码实现：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20jsonToTree(data)%20%7B%5Cn%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%93%E6%9E%9C%E6%95%B0%E7%BB%84%EF%BC%8C%E5%B9%B6%E5%88%A4%E6%96%AD%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E6%A0%BC%E5%BC%8F%5Cn%20%20let%20result%20%3D%20%5B%5D%5Cn%20%20if(!Array.isArray(data))%20%7B%5Cn%20%20%20%20return%20result%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E4%BD%BF%E7%94%A8map%EF%BC%8C%E5%B0%86%E5%BD%93%E5%89%8D%E5%AF%B9%E8%B1%A1%E7%9A%84id%E4%B8%8E%E5%BD%93%E5%89%8D%E5%AF%B9%E8%B1%A1%E5%AF%B9%E5%BA%94%E5%AD%98%E5%82%A8%E8%B5%B7%E6%9D%A5%5Cn%20%20let%20map%20%3D%20%7B%7D%3B%5Cn%20%20data.forEach(item%20%3D%3E%20%7B%5Cn%20%20%20%20map%5Bitem.id%5D%20%3D%20item%3B%5Cn%20%20%7D)%3B%5Cn%20%20%2F%2F%20%5Cn%20%20data.forEach(item%20%3D%3E%20%7B%5Cn%20%20%20%20let%20parent%20%3D%20map%5Bitem.pid%5D%3B%5Cn%20%20%20%20if(parent)%20%7B%5Cn%20%20%20%20%20%20(parent.children%20%7C%7C%20(parent.children%20%3D%20%5B%5D)).push(item)%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20result.push(item)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%3B%5Cn%20%20return%20result%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22AtqHn%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"l72h3\" id=\"l72h3\"><span data-lake-id=\"u57e25b44\" id=\"u57e25b44\">17. 使用ES5和ES6求函数参数的和</span></h3><p data-lake-id=\"u4c659449\" id=\"u4c659449\"><span data-lake-id=\"u2f648e46\" id=\"u2f648e46\">ES5：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20sum()%20%7B%5Cn%20%20%20%20let%20sum%20%3D%200%5Cn%20%20%20%20Array.prototype.forEach.call(arguments%2C%20function(item)%20%7B%5Cn%20%20%20%20%20%20%20%20sum%20%2B%3D%20item%20*%201%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20return%20sum%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22psvYS%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ucdd67010\" id=\"ucdd67010\"><span data-lake-id=\"u95092a0f\" id=\"u95092a0f\">ES6：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20sum(...nums)%20%7B%5Cn%20%20%20%20let%20sum%20%3D%200%5Cn%20%20%20%20nums.forEach(function(item)%20%7B%5Cn%20%20%20%20%20%20%20%20sum%20%2B%3D%20item%20*%201%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20return%20sum%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22fjzI2%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"WMpSk\" id=\"WMpSk\"><span data-lake-id=\"udd9c178f\" id=\"udd9c178f\">18. </span><span data-lake-id=\"ue6b95afb\" id=\"ue6b95afb\">解析 URL Params 为对象</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20url%20%3D%20'http%3A%2F%2Fwww.domain.com%2F%3Fuser%3Danonymous%26id%3D123%26id%3D456%26city%3D%25E5%258C%2597%25E4%25BA%25AC%26enabled'%3B%5CnparseParam(url)%5Cn%2F*%20%E7%BB%93%E6%9E%9C%5Cn%7B%20user%3A%20'anonymous'%2C%5Cn%20%20id%3A%20%5B%20123%2C%20456%20%5D%2C%20%2F%2F%20%E9%87%8D%E5%A4%8D%E5%87%BA%E7%8E%B0%E7%9A%84%20key%20%E8%A6%81%E7%BB%84%E8%A3%85%E6%88%90%E6%95%B0%E7%BB%84%EF%BC%8C%E8%83%BD%E8%A2%AB%E8%BD%AC%E6%88%90%E6%95%B0%E5%AD%97%E7%9A%84%E5%B0%B1%E8%BD%AC%E6%88%90%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B%5Cn%20%20city%3A%20'%E5%8C%97%E4%BA%AC'%2C%20%2F%2F%20%E4%B8%AD%E6%96%87%E9%9C%80%E8%A7%A3%E7%A0%81%5Cn%20%20enabled%3A%20true%2C%20%2F%2F%20%E6%9C%AA%E6%8C%87%E5%AE%9A%E5%80%BC%E5%BE%97%20key%20%E7%BA%A6%E5%AE%9A%E4%B8%BA%20true%5Cn%7D%5Cn*%2F%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22XXZXr%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20parseParam(url)%20%7B%5Cn%20%20const%20paramsStr%20%3D%20%2F.%2B%5C%5C%3F(.%2B)%24%2F.exec(url)%5B1%5D%3B%20%2F%2F%20%E5%B0%86%20%3F%20%E5%90%8E%E9%9D%A2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%96%E5%87%BA%E6%9D%A5%5Cn%20%20const%20paramsArr%20%3D%20paramsStr.split('%26')%3B%20%2F%2F%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BB%A5%20%26%20%E5%88%86%E5%89%B2%E5%90%8E%E5%AD%98%E5%88%B0%E6%95%B0%E7%BB%84%E4%B8%AD%5Cn%20%20let%20paramsObj%20%3D%20%7B%7D%3B%5Cn%20%20%2F%2F%20%E5%B0%86%20params%20%E5%AD%98%E5%88%B0%E5%AF%B9%E8%B1%A1%E4%B8%AD%5Cn%20%20paramsArr.forEach(param%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(%2F%3D%2F.test(param))%20%7B%20%2F%2F%20%E5%A4%84%E7%90%86%E6%9C%89%20value%20%E7%9A%84%E5%8F%82%E6%95%B0%5Cn%20%20%20%20%20%20let%20%5Bkey%2C%20val%5D%20%3D%20param.split('%3D')%3B%20%2F%2F%20%E5%88%86%E5%89%B2%20key%20%E5%92%8C%20value%5Cn%20%20%20%20%20%20val%20%3D%20decodeURIComponent(val)%3B%20%2F%2F%20%E8%A7%A3%E7%A0%81%5Cn%20%20%20%20%20%20val%20%3D%20%2F%5E%5C%5Cd%2B%24%2F.test(val)%20%3F%20parseFloat(val)%20%3A%20val%3B%20%2F%2F%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E8%BD%AC%E4%B8%BA%E6%95%B0%E5%AD%97%5Cn%20%20%20%20%20%20if%20(paramsObj.hasOwnProperty(key))%20%7B%20%2F%2F%20%E5%A6%82%E6%9E%9C%E5%AF%B9%E8%B1%A1%E6%9C%89%20key%EF%BC%8C%E5%88%99%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E5%80%BC%5Cn%20%20%20%20%20%20%20%20paramsObj%5Bkey%5D%20%3D%20%5B%5D.concat(paramsObj%5Bkey%5D%2C%20val)%3B%5Cn%20%20%20%20%20%20%7D%20else%20%7B%20%2F%2F%20%E5%A6%82%E6%9E%9C%E5%AF%B9%E8%B1%A1%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%20key%EF%BC%8C%E5%88%9B%E5%BB%BA%20key%20%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%80%BC%5Cn%20%20%20%20%20%20%20%20paramsObj%5Bkey%5D%20%3D%20val%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%20else%20%7B%20%2F%2F%20%E5%A4%84%E7%90%86%E6%B2%A1%E6%9C%89%20value%20%E7%9A%84%E5%8F%82%E6%95%B0%5Cn%20%20%20%20%20%20paramsObj%5Bparam%5D%20%3D%20true%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%5Cn%20%20return%20paramsObj%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22JlHPB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"IGE8T\" id=\"IGE8T\"><span data-lake-id=\"uf6a68455\" id=\"uf6a68455\">19. 有序二维数组查找目标值</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20findNumberIn2DArray%20%3D%20function(matrix%2C%20target)%20%7B%5Cn%20%20%20%20if%20(matrix%20%3D%3D%20null%20%7C%7C%20matrix.length%20%3D%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20false%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20let%20row%20%3D%200%3B%5Cn%20%20%20%20let%20column%20%3D%20matrix%5B0%5D.length%20-%201%3B%5Cn%20%20%20%20while%20(row%20%3C%20matrix.length%20%26%26%20column%20%3E%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(matrix%5Brow%5D%5Bcolumn%5D%20%3D%3D%20target)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20true%3B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20if%20(matrix%5Brow%5D%5Bcolumn%5D%20%3E%20target)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20column--%3B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20row%2B%2B%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20false%3B%5Cn%7D%3B%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22JltAZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"x2X2j\" id=\"x2X2j\"><span data-lake-id=\"ucc288e93\" id=\"ucc288e93\">20. 二维数组斜向打印</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20printMatrix(arr)%7B%5Cn%20%20let%20m%20%3D%20arr.length%2C%20n%20%3D%20arr%5B0%5D.length%5Cn%5Ctlet%20res%20%3D%20%5B%5D%5Cn%20%20%5Cn%20%20%2F%2F%20%E5%B7%A6%E4%B8%8A%E8%A7%92%EF%BC%8C%E4%BB%8E0%20%E5%88%B0%20n%20-%201%20%E5%88%97%E8%BF%9B%E8%A1%8C%E6%89%93%E5%8D%B0%5Cn%20%20for%20(let%20k%20%3D%200%3B%20k%20%3C%20n%3B%20k%2B%2B)%20%7B%5Cn%20%20%20%20for%20(let%20i%20%3D%200%2C%20j%20%3D%20k%3B%20i%20%3C%20m%20%26%26%20j%20%3E%3D%200%3B%20i%2B%2B%2C%20j--)%20%7B%5Cn%20%20%20%20%20%20res.push(arr%5Bi%5D%5Bj%5D)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20%E5%8F%B3%E4%B8%8B%E8%A7%92%EF%BC%8C%E4%BB%8E1%20%E5%88%B0%20n%20-%201%20%E8%A1%8C%E8%BF%9B%E8%A1%8C%E6%89%93%E5%8D%B0%5Cn%20%20for%20(let%20k%20%3D%201%3B%20k%20%3C%20m%3B%20k%2B%2B)%20%7B%5Cn%20%20%20%20for%20(let%20i%20%3D%20k%2C%20j%20%3D%20n%20-%201%3B%20i%20%3C%20m%20%26%26%20j%20%3E%3D%200%3B%20i%2B%2B%2C%20j--)%20%7B%5Cn%20%20%20%20%20%20res.push(arr%5Bi%5D%5Bj%5D)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20res%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22FtNGT%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"SOHF1\" id=\"SOHF1\"><span data-lake-id=\"u8781602c\" id=\"u8781602c\">21. 找出Element元素的全部Input子元素</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20findAllInputElement(element)%20%7B%5Cn%20%20const%20rec%20%3D%20function%20(element%2C%20arr)%20%7B%5Cn%20%20%20%20if%20(element.nodeName.toUpperCase()%20%3D%3D%3D%20%5C%22INPUT%5C%22)%20%7B%5Cn%20%20%20%20%20%20arr.push(element)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20let%20children%20%3D%20element.childNodes%5Cn%20%20%20%20children.forEach(element%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20rec(element%2C%20arr)%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%20%20return%20arr%5Cn%20%20%7D%5Cn%20%20return%20rec(element%2C%20%5B%5D)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22z4MTq%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"c2HD2\" id=\"c2HD2\"><span data-lake-id=\"u7db7ca04\" id=\"u7db7ca04\">22. 将手机号中间四位变成*</span></h3><p data-lake-id=\"u19e5ff6e\" id=\"u19e5ff6e\"><span data-lake-id=\"uc26c0fb0\" id=\"uc26c0fb0\">（1）利用数组splice，split，join方法</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20tel%20%3D%2018877776666%3B%20%5Cntel%20%3D%20%5C%22%5C%22%20%2B%20tel%3B%20%5Cnvar%20ary%20%3D%20tel.split(%5C%22%5C%22)%3B%20%5Cnary.splice(3%2C4%2C%5C%22****%5C%22)%3B%20%5Cnvar%20tel1%20%3D%20ary.join(%5C%22%5C%22)%3B%20%5Cnconsole.log(tel1)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22zSrqV%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u12bfd0b0\" id=\"u12bfd0b0\"><span data-lake-id=\"u07fcf077\" id=\"u07fcf077\">（2）利用字符串的substr方法</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20tel%20%3D%2018877776666%3B%20%5Cntel%20%3D%20%5C%22%5C%22%20%2B%20tel%3B%20%5Cnvar%20tel1%20%3D%20tel.substr(0%2C3)%20%2B%20%5C%22****%5C%22%20%2B%20tel.substr(7)%20%5Cnconsole.log(tel1)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22vivXe%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u74ce125a\" id=\"u74ce125a\"><span data-lake-id=\"uec6e27d7\" id=\"uec6e27d7\">（3）利用字符串substring方法</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20tel%20%3D%2018877776666%3B%20%20%5Cntel%20%3D%20%5C%22%5C%22%20%2B%20tel%3B%20%5Cnvar%20tel1%20%3Dtel.replace(tel.substring(3%2C7)%2C%20%5C%22****%5C%22)%20%5Cnconsole.log(tel1)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22JBHNX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u406a1ba7\" id=\"u406a1ba7\"><span data-lake-id=\"u1f96eb5d\" id=\"u1f96eb5d\">（4）利用正则</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20tel%20%3D%2018877776666%3B%20%20%5Cntel%20%3D%20%5C%22%5C%22%20%2B%20tel%3B%20%5Cnvar%20reg%3D%2F(%5C%5Cd%7B3%7D)%5C%5Cd%7B4%7D(%5C%5Cd%7B4%7D)%2F%3B%20%5Cnvar%20tel1%20%3D%20tel.replace(reg%2C%20%5C%22%241****%242%5C%22)%20%5Cnconsole.log(tel1)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dkN5l%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u636fa9cf\" id=\"u636fa9cf\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F1500604%2F1673895446530-beee8d93-a9fd-4bc6-b652-256433832b9c.png%22%2C%22taskId%22%3A%22u95d2e4a6-f9fa-4760-bc52-e863fd8761e%22%2C%22clientId%22%3A%22u6b39cc54-f334-4%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22%E5%85%AC%E4%BC%97%E5%8F%B7.png%22%2C%22size%22%3A96968%2C%22from%22%3A%22ui%22%2C%22originWidth%22%3A900%2C%22originHeight%22%3A500%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22shadow%22%2C%22search%22%3A%22%E5%89%8D%E7%AB%AF%E6%96%B0%E9%97%BB%20%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%BA%BA%20%E5%89%8D%E7%AB%AF%E5%85%85%E7%94%B5%E5%AE%9D%20%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%20%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E5%85%B3%E6%B3%A8%E5%85%AC%E4%BC%97%E5%8F%B7%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A123.38725%2C%22y%22%3A112.777725%2C%22width%22%3A336.99663%2C%22height%22%3A86.69984499999998%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E6%96%B0%E9%97%BB%22%7D%2C%7B%22x%22%3A129.7904%2C%22y%22%3A197.01118%2C%22width%22%3A405.65217000000007%2C%22height%22%3A106.74355%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%BA%BA%22%7D%2C%7B%22x%22%3A640.70355%2C%22y%22%3A235.86761%2C%22width%22%3A36.184150000000045%2C%22height%22%3A7.758409999999998%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E5%85%85%E7%94%B5%E5%AE%9D%22%7D%2C%7B%22x%22%3A156.7012%2C%22y%22%3A334.17084%2C%22width%22%3A305.91913%2C%22height%22%3A26.283810000000017%2C%22text%22%3A%22%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%22%7D%2C%7B%22x%22%3A541.58527%2C%22y%22%3A363.85507%2C%22width%22%3A235.1079699999999%2C%22height%22%3A24.23885999999999%2C%22text%22%3A%22%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E5%85%B3%E6%B3%A8%E5%85%AC%E4%BC%97%E5%8F%B7%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%2370ad8e%22%2C%22id%22%3A%22u4277e24a%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h2 data-lake-id=\"p5vab\" id=\"p5vab\"><span data-lake-id=\"ua5a48639\" id=\"ua5a48639\">三、场景应用</span></h2><h3 data-lake-id=\"650XU\" id=\"650XU\"><span data-lake-id=\"ubf41652b\" id=\"ubf41652b\">1. 循环打印红黄绿</span></h3><p data-lake-id=\"b1aac9aae20df294d109b18af575fcf5\" id=\"b1aac9aae20df294d109b18af575fcf5\" style=\"text-align: justify\"><span data-lake-id=\"u222da7ef\" id=\"u222da7ef\">下面来看一道比较典型的问题，通过这个问题来对比几种异步编程方法：</span><strong><span data-lake-id=\"u6405b022\" id=\"u6405b022\">红灯 3s 亮一次，绿灯 1s 亮一次，黄灯 2s 亮一次；如何让三个灯不断交替重复亮灯？</span></strong></p><p data-lake-id=\"46a016acfed7808188f4b23b3f5b9fb2\" id=\"46a016acfed7808188f4b23b3f5b9fb2\" style=\"text-align: justify\"><br></p><p data-lake-id=\"bba6eba087e056273c2eb158f24ed2ce\" id=\"bba6eba087e056273c2eb158f24ed2ce\" style=\"text-align: justify\"><span data-lake-id=\"u30553b50\" id=\"u30553b50\">三个亮灯函数：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20red()%20%7B%5Cn%20%20%20%20console.log('red')%3B%5Cn%7D%5Cnfunction%20green()%20%7B%5Cn%20%20%20%20console.log('green')%3B%5Cn%7D%5Cnfunction%20yellow()%20%7B%5Cn%20%20%20%20console.log('yellow')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22EaTtn%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"1289057ca2047b65f56e6fd7c717fb83\" id=\"1289057ca2047b65f56e6fd7c717fb83\" style=\"text-align: justify\"><span data-lake-id=\"u6b7b6703\" id=\"u6b7b6703\">这道题复杂的地方在于</span><strong><span data-lake-id=\"u0e1156f2\" id=\"u0e1156f2\">需要“交替重复”亮灯</span></strong><span data-lake-id=\"u056a39ad\" id=\"u056a39ad\">，而不是“亮完一次”就结束了。</span></p><h4 data-lake-id=\"dS0LM\" id=\"dS0LM\"><span data-lake-id=\"uc25779fa\" id=\"uc25779fa\">（1）用 callback 实现</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20task%20%3D%20(timer%2C%20light%2C%20callback)%20%3D%3E%20%7B%5Cn%20%20%20%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(light%20%3D%3D%3D%20'red')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20red()%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20else%20if%20(light%20%3D%3D%3D%20'green')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20green()%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20else%20if%20(light%20%3D%3D%3D%20'yellow')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20yellow()%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20callback()%5Cn%20%20%20%20%7D%2C%20timer)%5Cn%7D%5Cntask(3000%2C%20'red'%2C%20()%20%3D%3E%20%7B%5Cn%20%20%20%20task(2000%2C%20'green'%2C%20()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20task(1000%2C%20'yellow'%2C%20Function.prototype)%5Cn%20%20%20%20%7D)%5Cn%7D)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22vt6q4%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"c33af2d37a31c1c1cf17d833aa822f81\" id=\"c33af2d37a31c1c1cf17d833aa822f81\" style=\"text-align: justify\"><span data-lake-id=\"u23c31cd8\" id=\"u23c31cd8\">这里存在一个 bug：代码只是完成了一次流程，执行后红黄绿灯分别只亮一次。该如何让它交替重复进行呢？</span></p><p data-lake-id=\"105ac6793e67254adf4791ea1fdb739b\" id=\"105ac6793e67254adf4791ea1fdb739b\" style=\"text-align: justify\"><br></p><p data-lake-id=\"68ca9fb9fd36274376edd9e1defd9c89\" id=\"68ca9fb9fd36274376edd9e1defd9c89\" style=\"text-align: justify\"><span data-lake-id=\"u045a29f5\" id=\"u045a29f5\">上面提到过递归，可以递归亮灯的一个周期：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20step%20%3D%20()%20%3D%3E%20%7B%5Cn%20%20%20%20task(3000%2C%20'red'%2C%20()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20task(2000%2C%20'green'%2C%20()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20task(1000%2C%20'yellow'%2C%20step)%5Cn%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%7D)%5Cn%7D%5Cnstep()%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22S8Hwb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"bd94b2aca17cad17bc262f8a2fee4291\" id=\"bd94b2aca17cad17bc262f8a2fee4291\" style=\"text-align: justify\"><strong><span data-lake-id=\"uea0d1f5b\" id=\"uea0d1f5b\">注意看黄灯亮的回调里又再次调用了 step 方法</span></strong><span data-lake-id=\"ud3be8136\" id=\"ud3be8136\"> 以完成循环亮灯。</span></p><h4 data-lake-id=\"8aa8dbf9\" id=\"8aa8dbf9\"><span data-lake-id=\"uf9a6a701\" id=\"uf9a6a701\">（2）用 promise 实现</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20task%20%3D%20(timer%2C%20light)%20%3D%3E%20%5Cn%20%20%20%20new%20Promise((resolve%2C%20reject)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(light%20%3D%3D%3D%20'red')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20red()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20(light%20%3D%3D%3D%20'green')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20green()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20(light%20%3D%3D%3D%20'yellow')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20yellow()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20resolve()%5Cn%20%20%20%20%20%20%20%20%7D%2C%20timer)%5Cn%20%20%20%20%7D)%5Cnconst%20step%20%3D%20()%20%3D%3E%20%7B%5Cn%20%20%20%20task(3000%2C%20'red')%5Cn%20%20%20%20%20%20%20%20.then(()%20%3D%3E%20task(2000%2C%20'green'))%5Cn%20%20%20%20%20%20%20%20.then(()%20%3D%3E%20task(2100%2C%20'yellow'))%5Cn%20%20%20%20%20%20%20%20.then(step)%5Cn%7D%5Cnstep()%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22HJPe5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"d7f8608254e3fbf6c6616be7caf2c97d\" id=\"d7f8608254e3fbf6c6616be7caf2c97d\" style=\"text-align: justify\"><span data-lake-id=\"u860c81ff\" id=\"u860c81ff\">这里将回调移除，在一次亮灯结束后，resolve 当前 promise，并依然使用递归进行。</span></p><h4 data-lake-id=\"ORaJ9\" id=\"ORaJ9\"><span data-lake-id=\"ud1ddf2a0\" id=\"ud1ddf2a0\">（3）用 async/await 实现</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20taskRunner%20%3D%20%20async%20()%20%3D%3E%20%7B%5Cn%20%20%20%20await%20task(3000%2C%20'red')%5Cn%20%20%20%20await%20task(2000%2C%20'green')%5Cn%20%20%20%20await%20task(2100%2C%20'yellow')%5Cn%20%20%20%20taskRunner()%5Cn%7D%5CntaskRunner()%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22m2a3G%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"QjVqK\" id=\"QjVqK\"><span data-lake-id=\"ue0007766\" id=\"ue0007766\">2. 实现每隔一秒打印 1,2,3,4</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E4%BD%BF%E7%94%A8%E9%97%AD%E5%8C%85%E5%AE%9E%E7%8E%B0%5Cnfor%20(var%20i%20%3D%200%3B%20i%20%3C%205%3B%20i%2B%2B)%20%7B%5Cn%20%20(function(i)%20%7B%5Cn%20%20%20%20setTimeout(function()%20%7B%5Cn%20%20%20%20%20%20console.log(i)%3B%5Cn%20%20%20%20%7D%2C%20i%20*%201000)%3B%5Cn%20%20%7D)(i)%3B%5Cn%7D%5Cn%2F%2F%20%E4%BD%BF%E7%94%A8%20let%20%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%5Cnfor%20(let%20i%20%3D%200%3B%20i%20%3C%205%3B%20i%2B%2B)%20%7B%5Cn%20%20setTimeout(function()%20%7B%5Cn%20%20%20%20console.log(i)%3B%5Cn%20%20%7D%2C%20i%20*%201000)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22CHnky%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"pCZh2\" id=\"pCZh2\"><span data-lake-id=\"u478fe9ad\" id=\"u478fe9ad\">3. 小孩报数问题</span></h3><p data-lake-id=\"4413a0d3ff91b422d176037704b13970\" id=\"4413a0d3ff91b422d176037704b13970\"><span data-lake-id=\"ufbde10c2\" id=\"ufbde10c2\">有30个小孩儿，编号从1-30，围成一圈依此报数，1、2、3 数到 3 的小孩儿退出这个圈， 然后下一个小孩 重新报数 1、2、3，问最后剩下的那个小孩儿的编号是多少?</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20childNum(num%2C%20count)%7B%5Cn%20%20%20%20let%20allplayer%20%3D%20%5B%5D%3B%20%20%20%20%5Cn%20%20%20%20for(let%20i%20%3D%200%3B%20i%20%3C%20num%3B%20i%2B%2B)%7B%5Cn%20%20%20%20%20%20%20%20allplayer%5Bi%5D%20%3D%20i%20%2B%201%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20let%20exitCount%20%3D%200%3B%20%20%20%20%2F%2F%20%E7%A6%BB%E5%BC%80%E4%BA%BA%E6%95%B0%5Cn%20%20%20%20let%20counter%20%3D%200%3B%20%20%20%20%20%20%2F%2F%20%E8%AE%B0%E5%BD%95%E6%8A%A5%E6%95%B0%5Cn%20%20%20%20let%20curIndex%20%3D%200%3B%20%20%20%20%20%2F%2F%20%E5%BD%93%E5%89%8D%E4%B8%8B%E6%A0%87%5Cn%20%20%20%20%5Cn%20%20%20%20while(exitCount%20%3C%20num%20-%201)%7B%5Cn%20%20%20%20%20%20%20%20if(allplayer%5BcurIndex%5D%20!%3D%3D%200)%20counter%2B%2B%3B%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20if(counter%20%3D%3D%20count)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20allplayer%5BcurIndex%5D%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20counter%20%3D%200%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20exitCount%2B%2B%3B%20%20%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20curIndex%2B%2B%3B%5Cn%20%20%20%20%20%20%20%20if(curIndex%20%3D%3D%20num)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20curIndex%20%3D%200%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%7D%3B%20%20%20%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%7D%20%20%20%20%5Cn%20%20%20%20for(i%20%3D%200%3B%20i%20%3C%20num%3B%20i%2B%2B)%7B%5Cn%20%20%20%20%20%20%20%20if(allplayer%5Bi%5D%20!%3D%3D%200)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20allplayer%5Bi%5D%5Cn%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%5Cn%20%20%20%20%7D%5Cn%7D%5CnchildNum(30%2C%203)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%220p46o%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u70d05270\" id=\"u70d05270\"><br></p><h3 data-lake-id=\"OUtq1\" id=\"OUtq1\"><span data-lake-id=\"u73769b3e\" id=\"u73769b3e\">4. 用Promise实现图片的异步加载</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20imageAsync%3D(url)%3D%3E%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20new%20Promise((resolve%2Creject)%3D%3E%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let%20img%20%3D%20new%20Image()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20img.src%20%3D%20url%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20img.%CE%BFnl%CE%BFad%3D()%3D%3E%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20console.log(%60%E5%9B%BE%E7%89%87%E8%AF%B7%E6%B1%82%E6%88%90%E5%8A%9F%EF%BC%8C%E6%AD%A4%E5%A4%84%E8%BF%9B%E8%A1%8C%E9%80%9A%E7%94%A8%E6%93%8D%E4%BD%9C%60)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve(image)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20img.%CE%BFnerr%CE%BFr%3D(err)%3D%3E%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20console.log(%60%E5%A4%B1%E8%B4%A5%EF%BC%8C%E6%AD%A4%E5%A4%84%E8%BF%9B%E8%A1%8C%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%80%9A%E7%94%A8%E6%93%8D%E4%BD%9C%60)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20reject(err)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%5CnimageAsync(%5C%22url%5C%22).then(()%3D%3E%7B%5Cn%20%20%20%20console.log(%5C%22%E5%8A%A0%E8%BD%BD%E6%88%90%E5%8A%9F%5C%22)%3B%5Cn%7D).catch((error)%3D%3E%7B%5Cn%20%20%20%20console.log(%5C%22%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5%5C%22)%3B%5Cn%7D)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22R7WMC%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"DjAul\" id=\"DjAul\"><span data-lake-id=\"ue41fb3c7\" id=\"ue41fb3c7\">5. 实现发布-订阅模式</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22class%20EventCenter%7B%5Cn%20%20%2F%2F%201.%20%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E5%AE%B9%E5%99%A8%EF%BC%8C%E7%94%A8%E6%9D%A5%E8%A3%85%E4%BA%8B%E4%BB%B6%E6%95%B0%E7%BB%84%5Cn%5Ctlet%20handlers%20%3D%20%7B%7D%5Cn%5Cn%20%20%2F%2F%202.%20%E6%B7%BB%E5%8A%A0%E4%BA%8B%E4%BB%B6%E6%96%B9%E6%B3%95%EF%BC%8C%E5%8F%82%E6%95%B0%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%90%8D%20%E4%BA%8B%E4%BB%B6%E6%96%B9%E6%B3%95%5Cn%20%20addEventListener(type%2C%20handler)%20%7B%5Cn%20%20%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E6%96%B0%E6%95%B0%E7%BB%84%E5%AE%B9%E5%99%A8%5Cn%20%20%20%20if%20(!this.handlers%5Btype%5D)%20%7B%5Cn%20%20%20%20%20%20this.handlers%5Btype%5D%20%3D%20%5B%5D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%2F%2F%20%E5%AD%98%E5%85%A5%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20this.handlers%5Btype%5D.push(handler)%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%203.%20%E8%A7%A6%E5%8F%91%E4%BA%8B%E4%BB%B6%EF%BC%8C%E5%8F%82%E6%95%B0%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%90%8D%20%E4%BA%8B%E4%BB%B6%E5%8F%82%E6%95%B0%5Cn%20%20dispatchEvent(type%2C%20params)%20%7B%5Cn%20%20%20%20%2F%2F%20%E8%8B%A5%E6%B2%A1%E6%9C%89%E6%B3%A8%E5%86%8C%E8%AF%A5%E4%BA%8B%E4%BB%B6%E5%88%99%E6%8A%9B%E5%87%BA%E9%94%99%E8%AF%AF%5Cn%20%20%20%20if%20(!this.handlers%5Btype%5D)%20%7B%5Cn%20%20%20%20%20%20return%20new%20Error('%E8%AF%A5%E4%BA%8B%E4%BB%B6%E6%9C%AA%E6%B3%A8%E5%86%8C')%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%2F%2F%20%E8%A7%A6%E5%8F%91%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20this.handlers%5Btype%5D.forEach(handler%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20handler(...params)%5Cn%20%20%20%20%7D)%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%204.%20%E4%BA%8B%E4%BB%B6%E7%A7%BB%E9%99%A4%EF%BC%8C%E5%8F%82%E6%95%B0%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%90%8D%20%E8%A6%81%E5%88%A0%E9%99%A4%E4%BA%8B%E4%BB%B6%EF%BC%8C%E8%8B%A5%E6%97%A0%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E5%88%99%E5%88%A0%E9%99%A4%E8%AF%A5%E4%BA%8B%E4%BB%B6%E7%9A%84%E8%AE%A2%E9%98%85%E5%92%8C%E5%8F%91%E5%B8%83%5Cn%20%20removeEventListener(type%2C%20handler)%20%7B%5Cn%20%20%20%20if%20(!this.handlers%5Btype%5D)%20%7B%5Cn%20%20%20%20%20%20return%20new%20Error('%E4%BA%8B%E4%BB%B6%E6%97%A0%E6%95%88')%5Cn%20%20%20%20%7D%5Cn%20%20%20%20if%20(!handler)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E7%A7%BB%E9%99%A4%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20%20%20delete%20this.handlers%5Btype%5D%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20const%20index%20%3D%20this.handlers%5Btype%5D.findIndex(el%20%3D%3E%20el%20%3D%3D%3D%20handler)%5Cn%20%20%20%20%20%20if%20(index%20%3D%3D%3D%20-1)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20new%20Error('%E6%97%A0%E8%AF%A5%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6')%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%2F%2F%20%E7%A7%BB%E9%99%A4%E4%BA%8B%E4%BB%B6%5Cn%20%20%20%20%20%20this.handlers%5Btype%5D.splice(index%2C%201)%5Cn%20%20%20%20%20%20if%20(this.handlers%5Btype%5D.length%20%3D%3D%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20delete%20this.handlers%5Btype%5D%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%226sdLr%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"21\" id=\"21\"><span data-lake-id=\"uc13782c2\" id=\"uc13782c2\">6. 查找文章中出现频率最高的单词</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20findMostWord(article)%20%7B%5Cn%20%20%2F%2F%20%E5%90%88%E6%B3%95%E6%80%A7%E5%88%A4%E6%96%AD%5Cn%20%20if%20(!article)%20return%3B%5Cn%20%20%2F%2F%20%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%5Cn%20%20article%20%3D%20article.trim().toLowerCase()%3B%5Cn%20%20let%20wordList%20%3D%20article.match(%2F%5Ba-z%5D%2B%2Fg)%2C%5Cn%20%20%20%20visited%20%3D%20%5B%5D%2C%5Cn%20%20%20%20maxNum%20%3D%200%2C%5Cn%20%20%20%20maxWord%20%3D%20%5C%22%5C%22%3B%5Cn%20%20article%20%3D%20%5C%22%20%5C%22%20%2B%20wordList.join(%5C%22%20%20%5C%22)%20%2B%20%5C%22%20%5C%22%3B%5Cn%20%20%2F%2F%20%E9%81%8D%E5%8E%86%E5%88%A4%E6%96%AD%E5%8D%95%E8%AF%8D%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%5Cn%20%20wordList.forEach(function(item)%20%7B%5Cn%20%20%20%20if%20(visited.indexOf(item)%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%8A%A0%E5%85%A5%20visited%20%5Cn%20%20%20%20%20%20visited.push(item)%3B%5Cn%20%20%20%20%20%20let%20word%20%3D%20new%20RegExp(%5C%22%20%5C%22%20%2B%20item%20%2B%20%5C%22%20%5C%22%2C%20%5C%22g%5C%22)%2C%5Cn%20%20%20%20%20%20%20%20num%20%3D%20article.match(word).length%3B%5Cn%20%20%20%20%20%20if%20(num%20%3E%20maxNum)%20%7B%5Cn%20%20%20%20%20%20%20%20maxNum%20%3D%20num%3B%5Cn%20%20%20%20%20%20%20%20maxWord%20%3D%20item%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%3B%5Cn%20%20return%20maxWord%20%2B%20%5C%22%20%20%5C%22%20%2B%20maxNum%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%221aUIH%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"XL5ZJ\" id=\"XL5ZJ\"><span data-lake-id=\"uc4e03d8d\" id=\"uc4e03d8d\">7. 封装异步的fetch，使用async await方式来使用</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22(async%20()%20%3D%3E%20%7B%5Cn%20%20%20%20class%20HttpRequestUtil%20%7B%5Cn%20%20%20%20%20%20%20%20async%20get(url)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20res%20%3D%20await%20fetch(url)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20data%20%3D%20await%20res.json()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20data%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20async%20post(url%2C%20data)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20res%20%3D%20await%20fetch(url%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20method%3A%20'POST'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20headers%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Content-Type'%3A%20'application%2Fjson'%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20body%3A%20JSON.stringify(data)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20result%20%3D%20await%20res.json()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20async%20put(url%2C%20data)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20res%20%3D%20await%20fetch(url%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20method%3A%20'PUT'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20headers%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Content-Type'%3A%20'application%2Fjson'%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20JSON.stringify(data)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20result%20%3D%20await%20res.json()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20async%20delete(url%2C%20data)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20res%20%3D%20await%20fetch(url%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20method%3A%20'DELETE'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20headers%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20'Content-Type'%3A%20'application%2Fjson'%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20JSON.stringify(data)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20result%20%3D%20await%20res.json()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20result%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20const%20httpRequestUtil%20%3D%20new%20HttpRequestUtil()%3B%5Cn%20%20%20%20const%20res%20%3D%20await%20httpRequestUtil.get('http%3A%2F%2Fgolderbrother.cn%2F')%3B%5Cn%20%20%20%20console.log(res)%3B%5Cn%7D)()%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22yzfxD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"9FZQx\" id=\"9FZQx\"><span data-lake-id=\"u8c956f20\" id=\"u8c956f20\">8. </span><span data-lake-id=\"ub46ad4bd\" id=\"ub46ad4bd\">实现prototype继承</span></h3><p data-lake-id=\"uf651ae39\" id=\"uf651ae39\"><span data-lake-id=\"u24ab3157\" id=\"u24ab3157\">所谓的原型链继承就是让新实例的原型等于父类的实例：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%E7%88%B6%E6%96%B9%E6%B3%95%5Cnfunction%20SupperFunction(flag1)%7B%5Cn%20%20%20%20this.flag1%20%3D%20flag1%3B%5Cn%7D%5Cn%5Cn%2F%2F%E5%AD%90%E6%96%B9%E6%B3%95%5Cnfunction%20SubFunction(flag2)%7B%5Cn%20%20%20%20this.flag2%20%3D%20flag2%3B%5Cn%7D%5Cn%5Cn%2F%2F%E7%88%B6%E5%AE%9E%E4%BE%8B%5Cnvar%20superInstance%20%3D%20new%20SupperFunction(true)%3B%5Cn%5Cn%2F%2F%E5%AD%90%E7%BB%A7%E6%89%BF%E7%88%B6%5CnSubFunction.prototype%20%3D%20superInstance%3B%5Cn%5Cn%2F%2F%E5%AD%90%E5%AE%9E%E4%BE%8B%5Cnvar%20subInstance%20%3D%20new%20SubFunction(false)%3B%5Cn%2F%2F%E5%AD%90%E8%B0%83%E7%94%A8%E8%87%AA%E5%B7%B1%E5%92%8C%E7%88%B6%E7%9A%84%E5%B1%9E%E6%80%A7%5CnsubInstance.flag1%3B%20%20%20%2F%2F%20true%5CnsubInstance.flag2%3B%20%20%20%2F%2F%20false%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22mZTQ9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"kzrlR\" id=\"kzrlR\"><span data-lake-id=\"u119dbfaa\" id=\"u119dbfaa\">9. 实现双向数据绑定</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20obj%20%3D%20%7B%7D%5Cnlet%20input%20%3D%20document.getElementById('input')%5Cnlet%20span%20%3D%20document.getElementById('span')%5Cn%2F%2F%20%E6%95%B0%E6%8D%AE%E5%8A%AB%E6%8C%81%5CnObject.defineProperty(obj%2C%20'text'%2C%20%7B%5Cn%20%20configurable%3A%20true%2C%5Cn%20%20enumerable%3A%20true%2C%5Cn%20%20get()%20%7B%5Cn%20%20%20%20console.log('%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E4%BA%86')%5Cn%20%20%7D%2C%5Cn%20%20set(newVal)%20%7B%5Cn%20%20%20%20console.log('%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0%E4%BA%86')%5Cn%20%20%20%20input.value%20%3D%20newVal%5Cn%20%20%20%20span.innerHTML%20%3D%20newVal%5Cn%20%20%7D%5Cn%7D)%5Cn%2F%2F%20%E8%BE%93%E5%85%A5%E7%9B%91%E5%90%AC%5Cninput.addEventListener('keyup'%2C%20function(e)%20%7B%5Cn%20%20obj.text%20%3D%20e.target.value%5Cn%7D)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22p62pE%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"pFk5L\" id=\"pFk5L\"><span data-lake-id=\"u7df62a56\" id=\"u7df62a56\">10. 实现简单路由</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20hash%E8%B7%AF%E7%94%B1%5Cnclass%20Route%7B%5Cn%20%20constructor()%7B%5Cn%20%20%20%20%2F%2F%20%E8%B7%AF%E7%94%B1%E5%AD%98%E5%82%A8%E5%AF%B9%E8%B1%A1%5Cn%20%20%20%20this.routes%20%3D%20%7B%7D%5Cn%20%20%20%20%2F%2F%20%E5%BD%93%E5%89%8Dhash%5Cn%20%20%20%20this.currentHash%20%3D%20''%5Cn%20%20%20%20%2F%2F%20%E7%BB%91%E5%AE%9Athis%EF%BC%8C%E9%81%BF%E5%85%8D%E7%9B%91%E5%90%AC%E6%97%B6this%E6%8C%87%E5%90%91%E6%94%B9%E5%8F%98%5Cn%20%20%20%20this.freshRoute%20%3D%20this.freshRoute.bind(this)%5Cn%20%20%20%20%2F%2F%20%E7%9B%91%E5%90%AC%5Cn%20%20%20%20window.addEventListener('load'%2C%20this.freshRoute%2C%20false)%5Cn%20%20%20%20window.addEventListener('hashchange'%2C%20this.freshRoute%2C%20false)%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%AD%98%E5%82%A8%5Cn%20%20storeRoute%20(path%2C%20cb)%20%7B%5Cn%20%20%20%20this.routes%5Bpath%5D%20%3D%20cb%20%7C%7C%20function%20()%20%7B%7D%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E6%9B%B4%E6%96%B0%5Cn%20%20freshRoute%20()%20%7B%5Cn%20%20%20%20this.currentHash%20%3D%20location.hash.slice(1)%20%7C%7C%20'%2F'%5Cn%20%20%20%20this.routes%5Bthis.currentHash%5D()%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22p49Di%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"9hzEk\" id=\"9hzEk\"><span data-lake-id=\"u2e1c6995\" id=\"u2e1c6995\">11. 实现斐波那契数列</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E9%80%92%E5%BD%92%5Cnfunction%20fn%20(n)%7B%5Cn%20%20%20%20if(n%3D%3D0)%20return%200%5Cn%20%20%20%20if(n%3D%3D1)%20return%201%5Cn%20%20%20%20return%20fn(n-2)%2Bfn(n-1)%5Cn%7D%5Cn%2F%2F%20%E4%BC%98%E5%8C%96%5Cnfunction%20fibonacci2(n)%20%7B%5Cn%20%20%20%20const%20arr%20%3D%20%5B1%2C%201%2C%202%5D%3B%5Cn%20%20%20%20const%20arrLen%20%3D%20arr.length%3B%5Cn%5Cn%20%20%20%20if%20(n%20%3C%3D%20arrLen)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20arr%5Bn%5D%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%20arrLen%3B%20i%20%3C%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20arr.push(arr%5Bi%20-%201%5D%20%2B%20arr%5B%20i%20-%202%5D)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20return%20arr%5Barr.length%20-%201%5D%3B%5Cn%7D%5Cn%2F%2F%20%E9%9D%9E%E9%80%92%E5%BD%92%5Cnfunction%20fn(n)%20%7B%5Cn%20%20%20%20let%20pre1%20%3D%201%3B%5Cn%20%20%20%20let%20pre2%20%3D%201%3B%5Cn%20%20%20%20let%20current%20%3D%202%3B%5Cn%5Cn%20%20%20%20if%20(n%20%3C%3D%202)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20current%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%202%3B%20i%20%3C%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20pre1%20%3D%20pre2%3B%5Cn%20%20%20%20%20%20%20%20pre2%20%3D%20current%3B%5Cn%20%20%20%20%20%20%20%20current%20%3D%20pre1%20%2B%20pre2%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20return%20current%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Z6IZI%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"1LnCW\" id=\"1LnCW\"><span data-lake-id=\"ud0406a9f\" id=\"ud0406a9f\">12. </span><span data-lake-id=\"u0e0d9189\" id=\"u0e0d9189\">字符串出现的不重复最长长度</span></h3><p data-lake-id=\"b2031702cd39e495406d09be204b2729\" id=\"b2031702cd39e495406d09be204b2729\"><span data-lake-id=\"uaf4a5d06\" id=\"uaf4a5d06\">用一个滑动窗口装没有重复的字符，枚举字符记录最大值即可。用 map 维护字符的索引，遇到相同的字符，把左边界移动过去即可。挪动的过程中记录最大长度：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20lengthOfLongestSubstring%20%3D%20function%20(s)%20%7B%5Cn%20%20%20%20let%20map%20%3D%20new%20Map()%3B%5Cn%20%20%20%20let%20i%20%3D%20-1%5Cn%20%20%20%20let%20res%20%3D%200%5Cn%20%20%20%20let%20n%20%3D%20s.length%5Cn%20%20%20%20for%20(let%20j%20%3D%200%3B%20j%20%3C%20n%3B%20j%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(map.has(s%5Bj%5D))%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20i%20%3D%20Math.max(i%2C%20map.get(s%5Bj%5D))%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20res%20%3D%20Math.max(res%2C%20j%20-%20i)%5Cn%20%20%20%20%20%20%20%20map.set(s%5Bj%5D%2C%20j)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Ufk3Y%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"i6xVY\" id=\"i6xVY\"><span data-lake-id=\"ue7e0bf60\" id=\"ue7e0bf60\">13. 使用 setTimeout 实现 setInterval</span></h3><p data-lake-id=\"7fc39cc775d1340d4e83b7dcfa4ffc19\" id=\"7fc39cc775d1340d4e83b7dcfa4ffc19\"><span data-lake-id=\"u5072bef1\" id=\"u5072bef1\">setInterval 的作用是每隔一段指定时间执行一个函数，但是这个执行不是真的到了时间立即执行，它真正的作用是每隔一段时间将事件加入事件队列中去，只有当当前的执行栈为空的时候，才能去从事件队列中取出事件执行。所以可能会出现这样的情况，就是当前执行栈执行的时间很长，导致事件队列里边积累多个定时器加入的事件，当执行栈结束的时候，这些事件会依次执行，因此就不能到间隔一段时间执行的效果。</span></p><p data-lake-id=\"aff1ba32874c32a61bf2433e5fc4e34e\" id=\"aff1ba32874c32a61bf2433e5fc4e34e\"><br></p><p data-lake-id=\"62eec5bdccc9631e62fc5fd6784944f1\" id=\"62eec5bdccc9631e62fc5fd6784944f1\"><span data-lake-id=\"u7ad8a501\" id=\"u7ad8a501\">针对 setInterval 的这个缺点，我们可以使用 setTimeout 递归调用来模拟 setInterval，这样我们就确保了只有一个事件结束了，我们才会触发下一个定时器事件，这样解决了 setInterval 的问题。</span></p><p data-lake-id=\"00b620fe7044d1b7fd26a3456a4ef0b8\" id=\"00b620fe7044d1b7fd26a3456a4ef0b8\"><br></p><p data-lake-id=\"6ceff0ba5652132e7d9a772c776dcef6\" id=\"6ceff0ba5652132e7d9a772c776dcef6\"><span data-lake-id=\"u93c42adf\" id=\"u93c42adf\">实现思路是使用递归函数，不断地去执行 setTimeout 从而达到 setInterval 的效果</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20mySetInterval(fn%2C%20timeout)%20%7B%5Cn%20%20%2F%2F%20%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E6%98%AF%E5%90%A6%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%5Cn%20%20var%20timer%20%3D%20%7B%5Cn%20%20%20%20flag%3A%20true%5Cn%20%20%7D%3B%5Cn%20%20%2F%2F%20%E8%AE%BE%E7%BD%AE%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%EF%BC%8C%E6%A8%A1%E6%8B%9F%E5%AE%9A%E6%97%B6%E5%99%A8%E6%89%A7%E8%A1%8C%E3%80%82%5Cn%20%20function%20interval()%20%7B%5Cn%20%20%20%20if%20(timer.flag)%20%7B%5Cn%20%20%20%20%20%20fn()%3B%5Cn%20%20%20%20%20%20setTimeout(interval%2C%20timeout)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%90%AF%E5%8A%A8%E5%AE%9A%E6%97%B6%E5%99%A8%5Cn%20%20setTimeout(interval%2C%20timeout)%3B%5Cn%20%20%2F%2F%20%E8%BF%94%E5%9B%9E%E6%8E%A7%E5%88%B6%E5%99%A8%5Cn%20%20return%20timer%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%220ruTm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"B2sT2\" id=\"B2sT2\"><span data-lake-id=\"u0909b48b\" id=\"u0909b48b\">14. </span><span data-lake-id=\"uf73cfb42\" id=\"uf73cfb42\">实现 </span><span data-lake-id=\"u30e427dc\" id=\"u30e427dc\">jsonp </span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%8A%A8%E6%80%81%E7%9A%84%E5%8A%A0%E8%BD%BDjs%E6%96%87%E4%BB%B6%5Cnfunction%20addScript(src)%20%7B%5Cn%20%20const%20script%20%3D%20document.createElement('script')%3B%5Cn%20%20script.src%20%3D%20src%3B%5Cn%20%20script.type%20%3D%20%5C%22text%2Fjavascript%5C%22%3B%5Cn%20%20document.body.appendChild(script)%3B%5Cn%7D%5CnaddScript(%5C%22http%3A%2F%2Fxxx.xxx.com%2Fxxx.js%3Fcallback%3DhandleRes%5C%22)%3B%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%AA%E5%85%A8%E5%B1%80%E7%9A%84callback%E5%87%BD%E6%95%B0%E6%9D%A5%E6%8E%A5%E6%94%B6%E5%9B%9E%E8%B0%83%E7%BB%93%E6%9E%9C%5Cnfunction%20handleRes(res)%20%7B%5Cn%20%20console.log(res)%3B%5Cn%7D%5Cn%2F%2F%20%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%5CnhandleRes(%7Ba%3A%201%2C%20b%3A%202%7D)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22UyLh2%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"uVEBp\" id=\"uVEBp\"><span data-lake-id=\"ufd2034a4\" id=\"ufd2034a4\">15. 判断对象是否存在循环引用</span></h3><p data-lake-id=\"cfcd407a60d66787aefe3a53ea067bef\" id=\"cfcd407a60d66787aefe3a53ea067bef\"><span data-lake-id=\"uabf707e3\" id=\"uabf707e3\" style=\"color: #333333\">循环引用对象本来没有什么问题，但是序列化的时候就会发生问题，比如调用</span><code data-lake-id=\"ub9415d2f\" id=\"ub9415d2f\"><span data-lake-id=\"u743d40b0\" id=\"u743d40b0\">JSON.stringify()</span></code><span data-lake-id=\"ud50ed761\" id=\"ud50ed761\" style=\"color: #333333\">对该类对象进行序列化，就会报错: </span><code data-lake-id=\"u952876cd\" id=\"u952876cd\"><span data-lake-id=\"uc68c98e1\" id=\"uc68c98e1\">Converting circular structure to JSON.</span></code></p><p data-lake-id=\"d6676834af48c7379f8052a568933cd6\" id=\"d6676834af48c7379f8052a568933cd6\"><br></p><p data-lake-id=\"d8ab2bb558ddc436b196a55c22c86038\" id=\"d8ab2bb558ddc436b196a55c22c86038\"><span data-lake-id=\"u951cb2a2\" id=\"u951cb2a2\">下面方法可以用来判断一个对象中是否已存在循环引用：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20isCycleObject%20%3D%20(obj%2Cparent)%20%3D%3E%20%7B%5Cn%20%20%20%20const%20parentArr%20%3D%20parent%20%7C%7C%20%5Bobj%5D%3B%5Cn%20%20%20%20for(let%20i%20in%20obj)%20%7B%5Cn%20%20%20%20%20%20%20%20if(typeof%20obj%5Bi%5D%20%3D%3D%3D%20'object')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20flag%20%3D%20false%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20parentArr.forEach((pObj)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(pObj%20%3D%3D%3D%20obj%5Bi%5D)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20flag%20%3D%20true%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if(flag)%20return%20true%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20flag%20%3D%20isCycleObject(obj%5Bi%5D%2C%5B...parentArr%2Cobj%5Bi%5D%5D)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if(flag)%20return%20true%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20false%3B%5Cn%7D%5Cn%5Cn%5Cnconst%20a%20%3D%201%3B%5Cnconst%20b%20%3D%20%7Ba%7D%3B%5Cnconst%20c%20%3D%20%7Bb%7D%3B%5Cnconst%20o%20%3D%20%7Bd%3A%7Ba%3A3%7D%2Cc%7D%5Cno.c.b.aa%20%3D%20a%3B%5Cn%5Cnconsole.log(isCycleObject(o))%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%228zWxR%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><card type=\"block\" name=\"checkIn\" value=\"data:%7B%22title%22%3A%22%E9%98%85%E8%AF%BB%E5%90%8E%E8%AF%B7%E7%82%B9%E5%87%BB%E6%89%93%E5%8D%A1%22%2C%22buttonText%22%3A%22%E6%88%91%E5%B7%B2%E8%AF%BB%22%2C%22enableDeadline%22%3Afalse%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22w0Szz%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u97451566\" id=\"u97451566\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F1500604%2F1673895479762-f05a0688-2492-47fa-965f-abd9da1c3ba3.png%22%2C%22taskId%22%3A%22u17bd47fb-c14b-458e-81dd-13851141aea%22%2C%22clientId%22%3A%22u6b39cc54-f334-4%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22%E5%85%AC%E4%BC%97%E5%8F%B7.png%22%2C%22size%22%3A96968%2C%22from%22%3A%22ui%22%2C%22originWidth%22%3A900%2C%22originHeight%22%3A500%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22shadow%22%2C%22search%22%3A%22%E5%89%8D%E7%AB%AF%E6%96%B0%E9%97%BB%20%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%BA%BA%20%E5%89%8D%E7%AB%AF%E5%85%85%E7%94%B5%E5%AE%9D%20%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%20%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E5%85%B3%E6%B3%A8%E5%85%AC%E4%BC%97%E5%8F%B7%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A123.38725%2C%22y%22%3A112.777725%2C%22width%22%3A336.99663%2C%22height%22%3A86.69984499999998%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E6%96%B0%E9%97%BB%22%7D%2C%7B%22x%22%3A129.7904%2C%22y%22%3A197.01118%2C%22width%22%3A405.65217000000007%2C%22height%22%3A106.74355%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%BA%BA%22%7D%2C%7B%22x%22%3A640.70355%2C%22y%22%3A235.86761%2C%22width%22%3A36.184150000000045%2C%22height%22%3A7.758409999999998%2C%22text%22%3A%22%E5%89%8D%E7%AB%AF%E5%85%85%E7%94%B5%E5%AE%9D%22%7D%2C%7B%22x%22%3A156.7012%2C%22y%22%3A334.17084%2C%22width%22%3A305.91913%2C%22height%22%3A26.283810000000017%2C%22text%22%3A%22%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%22%7D%2C%7B%22x%22%3A541.58527%2C%22y%22%3A363.85507%2C%22width%22%3A235.1079699999999%2C%22height%22%3A24.23885999999999%2C%22text%22%3A%22%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E5%85%B3%E6%B3%A8%E5%85%AC%E4%BC%97%E5%8F%B7%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%2370ad8e%22%2C%22id%22%3A%22ud6874ee9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p>",
        "selected_at": null,
        "editor_meta": "{\"image\":4,\"codeblock\":96,\"premium\":1,\"checkIn\":1}",
        "editor_meta_draft": "{\"image\":4,\"codeblock\":96,\"premium\":1,\"checkIn\":1}",
        "meta": {
            "privacy_migrated": true,
            "premium_migrated": true
        },
        "marked": true,
        "mark": {
            "action_name": "mark_doc",
            "id": 110332311750,
            "created_at": "2023-07-03T10:19:50.000Z",
            "updated_at": "2023-07-03T10:19:50.000Z",
            "space_id": 0,
            "action_type": "mark",
            "action_option": "doc",
            "action_setting_type": "default",
            "user_id": 38384436,
            "organization_id": 0,
            "target_type": "Doc",
            "target_id": 31376466,
            "target_book_id": 6862641,
            "target_group_id": 1500604,
            "title": "前端面试题之手写代码篇"
        },
        "region": "北京",
        "indexed_level": 1,
        "privacy_migrated": true,
        "user": {
            "id": 1500604,
            "type": "User",
            "login": "cuggz",
            "name": "CUGGZ",
            "description": "🛰公号：前端充电宝",
            "avatar": "https://cdn.nlark.com/yuque/0/2022/png/1500604/1641785019489-avatar/f0c57a90-7ba8-43a7-9361-7fa8eb5bb6b6.png",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2022/png/1500604/1641785019489-avatar/f0c57a90-7ba8-43a7-9361-7fa8eb5bb6b6.png",
            "followers_count": 4183,
            "following_count": 7,
            "role": 1,
            "status": 1,
            "public": 1,
            "scene": null,
            "source": null,
            "created_at": "2020-05-27T03:53:45.000Z",
            "updated_at": "2023-07-21T06:27:51.000Z",
            "expired_at": "2025-10-16T15:59:59.000Z",
            "isPaid": true,
            "member_level": 2,
            "memberLevelName": "超级会员",
            "hasMemberLevel": true,
            "isTopLevel": true,
            "isNewbie": false,
            "members_count": 0,
            "profile": null,
            "organizationUser": null,
            "_serializer": "web.user"
        },
        "last_editor": {
            "id": 1500604,
            "type": "User",
            "login": "cuggz",
            "name": "CUGGZ",
            "description": "🛰公号：前端充电宝",
            "avatar": "https://cdn.nlark.com/yuque/0/2022/png/1500604/1641785019489-avatar/f0c57a90-7ba8-43a7-9361-7fa8eb5bb6b6.png",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2022/png/1500604/1641785019489-avatar/f0c57a90-7ba8-43a7-9361-7fa8eb5bb6b6.png",
            "followers_count": 4183,
            "following_count": 7,
            "role": 1,
            "status": 1,
            "public": 1,
            "scene": null,
            "source": null,
            "created_at": "2020-05-27T03:53:45.000Z",
            "updated_at": "2023-07-21T06:27:51.000Z",
            "expired_at": "2025-10-16T15:59:59.000Z",
            "isPaid": true,
            "member_level": 2,
            "memberLevelName": "超级会员",
            "hasMemberLevel": true,
            "isTopLevel": true,
            "isNewbie": false,
            "members_count": 0,
            "profile": null,
            "organizationUser": null,
            "_serializer": "web.user"
        },
        "_serializer": "web.doc_detail"
    }
}